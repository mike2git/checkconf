[HERMES#FCV#pica#weblabelled#UNM]
?line "abes_cs_misc_tab_HERMES_FCV_pica_weblabelled_UNM.fcv" 1
/* COPIE DE LA TABLE abes_cs_conversion_tab_FCV_pica_unimarc-exchange-utf8API.fcv POUR SERVICE SRU
 *
 *==============================================================================================
 * Copyright (c) 2005 by PICA / ABES
 *
 * File        : abes_cs_misc_tab_HERMES_FCV_pica_weblabelled_UNM.fcv
 * Description : Online formatter conversion table PICA -> UNIMARC UTF8
 * Author(s)   : LdJ / RGR
 * Creation    : 04-02-2005
 *
 * History     :
 * 24-10-1994  : LdJ    : creation de picunx
 *                        (abes_cs_conversion_tab_FCV_pica_unimarc-exchange.fcv)
 * 04-02-2005  : RGR    : creation de abes_cs_conversion_tab_FCV_pica_unimarc-exchange-utf8.fcv
 *                        par copie et adaptation de
 *                        abes_cs_conversion_tab_FCV_pica_unimarc-exchange.fcv
 * 25-03-2005  : ccn    : 128AUT (012H) : $b et $c repetables
 * 07-04-2005  : rgr    : modifications des L7XX (150*) et E7XX (250*)
 * 28-07-2005  : ccn    : ajout de $6 $7 dans 810 AUT (047M)
 * 24-08-2005  : ccn    : adapt 004A (010) si $A present
 * 18-01-2006  : ccn    : adaptation 021A (200) pour supprimer "=" dans $d
 * 18-01-2006  : ccn    : export des 210 (033A) avec ind. "1" et "2"
 * 10-03-2006  : ccn    : suppr. du "=" en 225
 * 15-03-2006  : ccn    : Traitement de 110$a = e (PFM) f(base de donnees) et g (site web) : label pos. 7
 * 15-03-2006  : ccn    : export des nouvelles sous-zones de 540 (027M)
 *                      : ind. 1 = 1  dans 325 (046S)
 * 22-03-2006  : ccn    : 150G devient L517 (517 export)
 * 22-03-2006  : ccn    : 150G devient L517 (517 export)
 *                      : 136C ajoutee (300)
 * 21-09-2006  : ccn    : correction Make_i_ou_s et 011@
 * 20-10-2006  : ccn    : ajout ISBN 13
 * 22-01-2007  : ccn    : suppression des 801 abes doublons et des 801 dollar c fausses
 * 07-06-2007  : ccn    : exporter 105 (012B) toujours
 * 24-07-2007  : ccn    : exporter 115 $b pos. 7 = b, si la valeur est a ou b en 115 $H
 *                      : ajout 123 $p et $q (123 $p pos. 0-1 et pos. 2) [012K]
 *                      : export 125 $B repetable comme 125 $c (unique) [012M]
 *                      : 128 $a passe a 3 positions + export 128 $d [012P]
 *                      : export de 206 $b $c $d $e $f (035E)
 *                      : export de 321 $c (046O)
 *                      : 503 (022E) export revu pour pouvoir repeter $j et $d
 * 07-08-2007 : ccn     : 125 $a pos. 1 exportee (012M $b)
 *                      : 327 repetable (047D)
 * 23-01-2008 : ccn     : 608 (044T) ajout $9UNM ($A P+)
 * 12-06-2008 : ccn     : 145Z ajoute comme 676
 * 01-07-2008 : gltmteccn : Export de ISSN-L (005A e et g)
 * 15-12-2008  : glt : Export de la zone L686 (145F) en 686 (045W) sans les sous-zones $e et $f
 * 23-01-2009 : glt : Ajout du $r en 955 pour l'export des etats de collection reorganises en texte (231@)
 * 03-02-2009 : glt : Ajout de $9sudoc en 003D et AUT003D (035 a l'export)
 * 01-07-2009 : glt : MISE EN PRODUCTION ROCOU + APCC
 * 03-09-2009 : glt : correction zone 955$r => $1(1) remplacé par $1(1 to "\c") pour récupérer tous le nombre complet du $1
 * 19-11-2009 : glt : ajout des 9XX AUT pour API Sudoc (AUT_MAKE_900) et affichage UNX dans WinIBW
 *			   		 A NOTER QUE CES ZONES 9XX SONT LA DIFFERENCE IMPORTANTE AVEC LA TABLE unimarc-exchange-utf8-apcc
 * 13-01-2010 : glt : ajout de RCR003at, le ppn n'etait pas extrait !
 * 22-01-2010: glt : ajout du code "w" dans RCR002at pour exporter te type de notice RCR (à blanc jusqu'à maintenant)
 * 03-02-2010: glt : Modification complète du format export des notices RCR, toutes les zones sont exportées
 * 25-03-2010 : glt : correction de make_8 = suppression du controle de la position 4
 * 25-03-2010 : glt : correction de la 955 (le $4 n'était pas exporté quand $1 ou $2 présent + espaces manquants) 
 * 07-05-2010 : glt : ZONE_200_AUTORITES : ajout de l'export de la sous-zone 200$5 (028A$6 en pica)
 *			        : ATTENTION cette modification n'est pas répercutée dans l'export vers les SIGB
 * 22-06-2010 : glt : correction pour l'export de la L316 (137B) qui était exporté en 320, maintenant 316
 * 23-11-2010 : glt : correction 955 = espaces en trop ou espaces manquants 
 * 07-12-2010 : glt : ajout des 955 $7 et $4 dans l'export en 955 $r qui étaient absents
 * 10-01-2011 : glt : ajout de l'export du n°ocn en 003O (M_OCL) en 035 $a(OCoLC)
 *			 : ajout de l'export du 930$z (code PCP) => API
 * 23-02-2011 : glt : modification du code pour les notices de collection *d (Make_pos_7) => pour Self Sudoc
 * 24-03-2011 : glt : creation des zones 940 et 941 pour exporter les dates de creation et modification
 *			   de l'exemplaire sous la forme AAAAMMJJ (209A et 209J, pour 209J une seule 940, 941 pour plusieurs 930)  => API
 *30-03-2011 : glt : modification de l'export du 105$b (012A$b) : la valeur "7" est maintenant exportée (avant 7 => m)
 * 26-07-2011: glt : ajout de controle sur le $2 code du système d'indexation dans les zones 6XX
 * 11-10-2011: mte : ajout de "n" dans Make_pos_7 pour exporter corrrectement les "On"  
 * 02-11-2011: glt : ajout du code "4" dans l'export du statut des notices autorités pour identifier les propositions rameau Td3
 *				     pour distinguer les Td3 des autres dans IdRef(AUT_mat3)
 * 02-11-2011: glt : export de la zone R202 (051X)
 *				   : export des zones R260 (051Y) et R270 (051Z) 
 * 2012-01-09: glt : ajout export de la zone 033 (009Q) repetable
 * 2012-01-20: glt : ajout export E856$e$2 (209R$A$2)
 * 2012-01-27 : glt : ajout export E325 (246S)
 * 2012-02-28 : glt : modification de MAKE_AUTLOC => $5 des zones EXX à partir de 209J(C01) et 209A(930) et plus 201D(A98)
 * 2012-05-30 : glt : ajout export des zones 859 (adresse elec, 009R) et 019 (ISBN imprime dans doc elec, 004B)
 * 2012-06-06 : glt : ajout des 955 $7 (=> $w) si $1 ou $2 présent
 * 2012-06-21 : gltmte : ajout export 801$h (047A$h) qui contient le 003D$0 (ticket Gala 2583)
 * 2012-06-21 : gltmte  : export de 003 (003@) comme identifiant pérenne ticket Gala 2583) 
 * 2012-06-25 : mte : export 044W = 620
 * 2012-06-26 : glt : export $r et $s de 210 (033A)
 * 			  : glt : export L600 => 600, L601 => 601, L602 => 602
 *			  : gltmte : export de 100$h, contenu et code = k en pos. 8
 * 2012-06-10 : mte : export 801 regle ABES en 1er avec mise en comm. de
 *				la generation de 801 par 006Z
 * 2012-08-16 : mte : export zone 100 autorite : valeur "y" generee (fait depuis longtemps)
 * 2012-11-09 : glt : format des notices RCR : export de la zone R280 (052A) 
 * 2013-01-25 : glt : la zone E856 exportée en 856 n'était pas répétée = corrigé
 * 2013-02-27 : glt : ajout de l'export des sous-zones $4 et $7 pour 209J (format CR)
 * 2013-06-17 : mte : Gala 3014 recorrige (200-205-208-225) 
 * 2013-07-18 : glt : ajout de la zone 719 autorité
 * 2013-08-21 : glt : export du $r pour 956(231E) et 957(231F) (sur même modèle que 955)
 * 2013-09-23 : mte : re-correction export $B000, attention find($*) n'admet pas de test dans la boucle
 * 2013-10-16 : glt : ajout export de 930$w (209A$w) et (209J$w) et $z
 * 2013-10-18 : glt : ajout export de la zone des AUTORITES 033 (AUT009Q)
 * 2013-10-21 : mte : ajout $o à 503, 2e vague UNM, Gala 3051
 * 			  : mte : ajout $n aux 5XX, 2e vague UNM, Gala 3062
 * 2014-03-06 : glt : ajout de ["$8" $8] dans TTL_600
 * 2014-11-20 : mte : correction de la zone 231A (E01) Gala 6417 
 * 2018-08-31 : glt : modification intitulé "Centre régional du Sudoc-PS" devient "Centre du réseau du Sudoc-PS" + intitulé de certains centres
 
 *
 * Notes       :
 *
 * 2020-12-08 : glt : le contenu est dans abes_tab_HERMES_FCV_pica_weblabelled_UNM.fcv.i
 *==============================================================================================
 */

?line "./abes_tab_HERMES_FCV_pica_weblabelled_UNM.fcv.i" 1
/* COPIE DE LA TABLE abes_cs_conversion_tab_FCV_pica_unimarc-exchange-utf8API.fcv POUR SERVICE SRU
 *
/*==============================================================================================
 * Copyright (c) 2005 by PICA / ABES
 *
 * File        : abes_cs_conversion_tab_FCV_pica_unimarc-exchange-utf8.fcv
 * Description : Online formatter conversion table PICA -> UNIMARC UTF8
 * Author(s)   : LdJ / RGR
 * Creation    : 04-02-2005
 *
 * History     :
 * 24-10-1994  : LdJ    : creation de picunx
							export vers la base XML
 *                        (abes_cs_conversion_tab_FCV_pica_unimarc-exchange.fcv)
 * 04-02-2005  : RGR    : creation de abes_cs_conversion_tab_FCV_pica_unimarc-exchange-utf8.fcv
 *                        par copie et adaptation de
 *                        abes_cs_conversion_tab_FCV_pica_unimarc-exchange.fcv
 * 25-03-2005  : ccn    : 128AUT (012H) : $b et $c repetables
 * 07-04-2005  : rgr    : modifications des L7XX (150*) et E7XX (250*)
 * 28-07-2005  : ccn    : ajout de $6 $7 dans 810 AUT (047M)
 * 24-08-2005  : ccn    : adapt 004A (010) si $A present
 * 18-01-2006  : ccn    : adaptation 021A (200) pour supprimer "=" dans $d
 * 18-01-2006  : ccn    : export des 210 (033A) avec ind. "1" et "2"
 * 10-03-2006  : ccn    : suppr. du "=" en 225
 * 15-03-2006  : ccn    : Traitement de 110$a = e (PFM) f(base de donnees) et g (site web) : label pos. 7
 * 15-03-2006  : ccn    : export des nouvelles sous-zones de 540 (027M)
 *                      : ind. 1 = 1  dans 325 (046S)
 * 22-03-2006  : ccn    : 150G devient L517 (517 export)
 * 22-03-2006  : ccn    : 150G devient L517 (517 export)
 *                      : 136C ajoutee (300)
 * 21-09-2006  : ccn    : correction Make_i_ou_s et 011@
 * 20-10-2006  : ccn    : ajout ISBN 13
 * 22-01-2007  : ccn    : suppression des 801 abes doublons et des 801 dollar c fausses
 * 07-06-2007  : ccn    : exporter 105 (012B) toujours
 * 24-07-2007  : ccn    : exporter 115 $b pos. 7 = b, si la valeur est a ou b en 115 $H
 *                      : ajout 123 $p et $q (123 $p pos. 0-1 et pos. 2) [012K]
 *                      : export 125 $B repetable comme 125 $c (unique) [012M]
 *                      : 128 $a passe a 3 positions + export 128 $d [012P]
 *                      : export de 206 $b $c $d $e $f (035E)
 *                      : export de 321 $c (046O)
 *                      : 503 (022E) export revu pour pouvoir repeter $j et $d
 * 07-08-2007 : ccn     : 125 $a pos. 1 exportee (012M $b)
 *                      : 327 repetable (047D)
 * 23-01-2008 : ccn     : 608 (044T) ajout $9UNM ($A P+)
 * 12-06-2008 : ccn     : 145Z ajoute comme 676
 * 01-07-2008 : gltmteccn : Export de ISSN-L (005A e et g)
 * 15-12-2008  : glt : Export de la zone L686 (145F) en 686 (045W) sans les sous-zones $e et $f
 * 23-01-2009 : glt : Ajout du $r en 955 pour l'export des etats de collection reorganises en texte (231@)
 * 03-02-2009 : glt : Ajout de $9sudoc en 003D et AUT003D (035 a l'export)
 * 01-07-2009 : glt : MISE EN PRODUCTION ROCOU + APCC
 * 03-09-2009 : glt : correction zone 955$r => $1(1) remplacé par $1(1 to "\c") pour récupérer tous le nombre complet du $1
 * 19-11-2009 : glt : ajout des 9XX AUT pour API Sudoc (AUT_MAKE_900) et affichage UNX dans WinIBW
 *			   		 A NOTER QUE CES ZONES 9XX SONT LA DIFFERENCE IMPORTANTE AVEC LA TABLE unimarc-exchange-utf8-apcc
 * 13-01-2010 : glt : ajout de RCR003at, le ppn n'etait pas extrait !
 * 22-01-2010: glt : ajout du code "w" dans RCR002at pour exporter te type de notice RCR (à blanc jusqu'à maintenant)
 * 03-02-2010: glt : Modification complète du format export des notices RCR, toutes les zones sont exportées
 * 25-03-2010 : glt : correction de make_8 = suppression du controle de la position 4
 * 25-03-2010 : glt : correction de la 955 (le $4 n'était pas exporté quand $1 ou $2 présent + espaces manquants) 
 * 07-05-2010 : glt : ZONE_200_AUTORITES : ajout de l'export de la sous-zone 200$5 (028A$6 en pica)
 *			        : ATTENTION cette modification n'est pas répercutée dans l'export vers les SIGB
 * 22-06-2010 : glt : correction pour l'export de la L316 (137B) qui était exporté en 320, maintenant 316
 * 23-11-2010 : glt : correction 955 = espaces en trop ou espaces manquants 
 * 07-12-2010 : glt : ajout des 955 $7 et $4 dans l'export en 955 $r qui étaient absents
 * 10-01-2011 : glt : ajout de l'export du n°ocn en 003O (M_OCL) en 035 $a(OCoLC)
 *			 : ajout de l'export du 930$z (code PCP) => API
 * 23-02-2011 : glt : modification du code pour les notices de collection *d (Make_pos_7) => pour Self Sudoc
 * 24-03-2011 : glt : creation des zones 940 et 941 pour exporter les dates de creation et modification
 *			   de l'exemplaire sous la forme AAAAMMJJ (209A et 209J, pour 209J une seule 940, 941 pour plusieurs 930)  => API
 *30-03-2011 : glt : modification de l'export du 105$b (012A$b) : la valeur "7" est maintenant exportée (avant 7 => m)
 * 26-07-2011: glt : ajout de controle sur le $2 code du système d'indexation dans les zones 6XX
 * 11-10-2011: mte : ajout de "n" dans Make_pos_7 pour exporter corrrectement les "On"  
 * 02-11-2011: glt : ajout du code "4" dans l'export du statut des notices autorités pour identifier les propositions rameau Td3
 *				     pour distinguer les Td3 des autres dans IdRef(AUT_mat3)
 * 02-11-2011: glt : export de la zone R202 (051X)
 *				   : export des zones R260 (051Y) et R270 (051Z) 
 * 2012-01-09: glt : ajout export de la zone 033 (009Q) repetable
 * 2012-01-20: glt : ajout export E856$e$2 (209R$A$2)
 * 2012-01-27 : glt : ajout export E325 (246S)
 * 2012-02-28 : glt : modification de MAKE_AUTLOC => $5 des zones EXX à partir de 209J(C01) et 209A(930) et plus 201D(A98)
 * 2012-05-30 : glt : ajout export des zones 859 (adresse elec, 009R) et 019 (ISBN imprime dans doc elec, 004B)
 * 2012-06-06 : glt : ajout des 955 $7 (=> $w) si $1 ou $2 présent
 * 2012-06-21 : gltmte : ajout export 801$h (047A$h) qui contient le 003D$0 (ticket Gala 2583)
 * 2012-06-21 : gltmte  : export de 003 (003@) comme identifiant pérenne ticket Gala 2583) 
 * 2012-06-25 : mte : export 044W = 620
 * 2012-06-26 : glt : export $r et $s de 210 (033A)
 * 			  : glt : export L600 => 600, L601 => 601, L602 => 602
 *			  : gltmte : export de 100$h, contenu et code = k en pos. 8
 * 2012-06-10 : mte : export 801 regle ABES en 1er avec mise en comm. de
 *				la generation de 801 par 006Z
 * 2012-08-16 : mte : export zone 100 autorite : valeur "y" generee (fait depuis longtemps)
 * 2012-11-09 : glt : format des notices RCR : export de la zone R280 (052A) 
 * 2013-01-25 : glt : la zone E856 exportée en 856 n'était pas répétée = corrigé
 * 2013-02-27 : glt : ajout de l'export des sous-zones $4 et $7 pour 209J (format CR)
 * 2013-06-17 : mte : Gala 3014 recorrige (200-205-208-225) 
 * 2013-07-18 : glt : ajout de la zone 719 autorité
 * 2013-08-21 : glt : export du $r pour 956(231E) et 957(231F) (sur même modèle que 955)
 * 2013-09-23 : mte : re-correction export $B000, attention find($*) n'admet pas de test dans la boucle
 * 2013-10-16 : glt : ajout export de 930$w (209A$w) et (209J$w) et $z
 * 2013-10-18 : glt : ajout export de la zone des AUTORITES 033 (AUT009Q)
 * 2013-10-21 : mte : ajout $o à 503, 2e vague UNM, Gala 3051
 * 			  : mte : ajout $n aux 5XX, 2e vague UNM, Gala 3062
 * 2014-04-02 : glt : ajout export 309 (045B) $a, $b, $c, $d => pour HUB
 * 2014-05-26 : glt : ajout SCAN_AT dans 036M/04 $f (464$l)
 * 2014-07-17 : glt : ajout export 035$z (006Z$z) pour autorité = AUT006Z
 * 2014-09-05 : glt : ajout export du E856 $9 (209R $Z) vers 856 $9
 * 2014-09-08 : glt : mise à jour format 3eme vague, novembre 2014
 *					: Autorité : export de 839 (003D) ppn fusionné en 801$h (047A$h) => modification de AUT003D, AUT_MAKE_801, ajout de TTL_MAKE_DATE_AUT801
 *				    : Autorité : export de 001 (003@) en 001 et 003 url pérenne => modification de AUT003at et RCR003at			
					: export des n°IS.. [AUT010A] [AUT010B] [AUT010C] [AUT010D]	 [AUT010E]
 *					: export E621(244W) => 621 $5 $a $b $c $d $e $f $g $h $i $k $m $n $o
 *					: modification de la zone 900 (AUT_MAKE_900) pour exporter les zones en caractères latins en 1er => idref
 *					: export zone 181 (012T)
 *					: export zone 182 (012U)
 *					: export 200 $r (021A $r)
 * 2014-09-08 : glt : export des zones R100 (RCR050A) et R110 (RCR050B) et 410$3 (050U$9)
 * 2014-10-24 : mte : export de la zone 008 autorites( Gala 6290 )
 * 2014-11-20 : mte : correction de la zone 231A (E01) Gala 6417
 * 2015-01-23 : glt : export autorité 010 (AUT010A) $2 et $d pour export base XML seulement et affichage idref=UNU (pas dans les tables export APCC)
 * 					: export autorité 033 (AUT009Q) $2 et $d pour export base XML seulement et affichage idref=UNU (pas dans les tables export APCC)
 * 2015-01-30 : glt : export de nouvelle zone 339 (047E) seulement dans la base XML
 * 2015-02-04 : glt/cbd : export du niveau 1 (données locales) avec $1ILN récupéré dans 101@ (principe windows_tag)
 * 2015-02-05 : glt : ajout export ILN vers base XML : 001@ pica => 002
 * 2015-02-18 : glt : ajout export date de création (001A) => 004 : biblio + autorité
 *					  ajout export rcr créateur (001A) => 006 : biblio + autorité
 *					  ajout export rcr modificatuer (001B) => 007 : biblio + autorité
 * 					  modification pour notice RCR (Tw) : 004 = date de création, 005 = date de modification, 006 = rcr créateur
 * 2015-02-25 : glt : ajout export 830 (047C) seulement pour base XML
 * 2015-04-22 : glt : ajout export 899 autorités (047Y) seulement pour la base XML
 * 2015-06-22 : glt : export zones 959 (231G) sudoc, L0X (231H) sudoc-ps
 * 2015-06-26 : glt : correction de l'export du $r pour 956 et 957
 * 2015-09-21 : glt : export de $1 (en $R) pour biblio et $Q (en $Q) pour autorités
 *                  : numéro FRBNF de la notice liée
 * 2015-12-03 : glt : export 123qrst (012Fqrst) AUT012F
 * 2016-01-13 : glt : export 150 (AUT012I) $b
 *            : glt : export $5 pour les zones 2XX/4XX/5XX/7XX
 * 2016-01-18 : glt : export 183 (012V)
 * 2017-04-03 : glt : modification intitulé PA dans T930p
 * 2017-04-05 : mte : export 219 (0333B) vers 210 unm
 * 2017-07-13 : glt : correction de make_209j : inversion 955 et 959
 * 2017-10-13 : glt : ajout des zones FRBR
 *				    : B579 = 039M
 *					: pour les autorités : 002@ = leader (r => r, 2 => 2) + 008
 *					: A104=012@, A128=012H, A231=022C, A241=036E, A328=020A
 *					: A431=022D, A441=036F, A500=038A, A501=038B, A510=038C, A511=038D,
 *					: A521=038R, A600=040@, A601=041@, A602=040A, A604=036P, A605=042C
 *					: A606=044Q, A606=044R, A608=044T, A610=044U
 * 2018-01-31 : glt : export de 008 (002@) pour les biblio
 * 2018-02-08 : glt : export AUT 035$d = AUT006Z $d
 * 2018-04-20 : glt : ajout export 035$d(006Z$d) et 033$d(009Q$d)
 * 2018-05-02 : glt : export 010$9 (004A$A) + 019$9 (004B$A)
 * 2018-08-31 : glt : modification intitulé "Centre régional du Sudoc-PS" devient "Centre du réseau du Sudoc-PS" + intitulé de certains centres
 * 2018-10-25 : glt : si périos ou collectoins (leader 'isd') => pos.9 de 100$a = 'b' ou 'a'(au lieu de 'g' jusqu'à maintenant)
 * 2018-10-31 : glt : ajout de $2 dans 009Q biblio
 * 2019-02-08 : glt : nouvelle zone AUT 898 = 047W
 * 2019-05-31 : glt : ajout export $C des zones A010 (010A) A033 (009Q) et A035 (006Z)
 * 2019-10-29 : glt/2020 : export 920 = 207H
					: E7X2(250E, 250L et 250M) exportées en 7X3 si $4 = 920
 *			        : export 915 $f = 209G $f
 *					: glt : export 214 (033B) en 214 (et plus en 210) + supp de [diffusion/distribution] et $i et $p remplacés par $d
 *					=> supp de [view(*, MAKE_ALL_210)] ajout de [033B].
 * 2019-10-31 : glt/2020 : export nouvelles sous-zones A822(AUT047P)
 *                  : export 280 (044O), 480(044P), 580(038H), 780(039R), 180(012L) + AUT_MAKE_980 et AUT_MAKE_981 et AUT_MAKE_982
 *					+ ajout "f" dans AUT_mat2 et AUT_MAKE_152
 * 2019-11-14 : glt/2020 : export modifié pour A220(028I), nouvelles sous zones (ajoutées dans AUT_family_name, AUT_MAKE_920, AUT_MAKE_921, AUT_MAKE_922)
 *					 : export modifié pour B720/B721/B722, nouvelles sous-zones $c et $d (ajoutées dans TTL_family_name)
 *					 : export modifié pour B602(040A), nouvelle sous-zone $c + $d
 
 * Notes       :
 *
 *2020-12-08 :glt : COPIE DE LA TABLE abes_cs_conversion_tab_FCV_pica_unimarc-exchange-utf8API.fcv POUR SERVICE SRU
 *				  : suppression des dates de mise à jour de la notice et des exemplaires
 *				  : suppression des ILN localisés = zone 001@
 *==============================================================================================
 */

  SCAN_AT =
           ["\210" $(1 to "@") "\211" $(* to end)]
           or
           if ($(1) = "@") $(2 to end)
           else $
          ;

  MULTI_ECRITURE =
                  if set($U)
                     [
                      if      ($ = "ba") [reset ["$6a" $T] "$7" $U]
                      else if ($ = "fa") [reset ["$6a" $T] "$7" $U "/r"]
                      else if ($ = "ha") [reset ["$6a" $T] "$7" $U "/r"]
                      else               [reset ["$6a" $T] "$7" $U]
                     ]
                 ;

  format =
          if !set(#002@$0)     TTL_format
          else if ($(1) = "T")
                  [
                   if ($(2) = "w") RCR_format
                   else AUT_format
                  ]
          else    TTL_format
         ;

  TTL_format =
              reset_tag
              if set_tag(#0***) TTL_MAKE_LEV0
              if set_tag(#1***) TTL_MAKE_LEV1
              if set_tag(#2***) TTL_MAKE_LEV2
             ;

/**************************************************************************************
 *  traitement général sous-zones a, x, y et z (autorités et biblio. - voir plus bas) *
 **************************************************************************************/

  SOUS_ZONE_a = 
               if ("@" in $) ["$a" [[$(1 to "@") $(* to last)] or $(2 to last)]]
               else          ["$a" $(1 to last)]
              ;

  SOUS_ZONE_X = 
               if ("@" in $) ["$x" [[$(1 to "@") $(* to last)] or $(2 to last)]]
               else          ["$x" $]
              ;

  SOUS_ZONE_Y = 
               if ("@" in $) ["$y" [[$(1 to "@") $(* to last)] or $(2 to last)]]
               else          ["$y" $]
              ;

  SOUS_ZONE_Z = 
               if ("@" in $) ["$z" [[$(1 to "@") $(* to last)] or $(2 to last)]]
               else          ["$z" $]
              ;

/**************************************************************************************
 *                            Format bibliographique                                  *
 **************************************************************************************/


  TTL_MAKE_LEV0 =
				 /*reset_tag
                 [#001@]*/
                 reset_tag
                 [TIT001A]           /*                                                       */
                 /*TTL_MAKE_004_006  date création = 004, RCR créateur = 006                */
				 [TIT001B]           /*                                                       */
                 /* TTL_MAKE_005_007      Version identifier                                    */
                 
                 [#002@]             /* Record label   xxx 
				 reset_tag				                                    */
                 [TTL_MAKE_005]
				 [#003@]             /* Pica Production Number/Record identifier              */
                 [#003D].            /* PPN of merged record                                  */
				 [M_OCL]				 /* n° ocn */
                 [#004A].            /* International Standard Book Number                    */
				 [#004B].			 /* ISBN imprime dans doc electronique                    */
                 [#004E].            /* Publishers number (sound recordings and music)        */
                 [#004F].            /* ISMN                                                  */
                 [#004L].            /* Article identifier                                    */
                 [#004N].            /* ISRN                                                  */
                 [#004X].            /* EAN                                                   */
                 [#004Y].            /* UPC                                                   */
                 [#004Z].            /* Autre numero d'identification normalise               */
                 [#005A].            /* International Standard Serial Number                  */
                 [#006A].            /* National Bibliography Number                          */
                 [#006C].            /* Legal Deposit Number                                  */
                 [#006D].            /* Government publication Number                         */
                 [#006L].            /* Numero national de these                              */
                 [#006Z].            /* Other System controll numbers                         */
				 
                 [#007C].            /* CODEN serials                                         */
                 [#007P].            /* Fingerprint                                           */
                 [#009P].            /* Electronoc location and access                        */
				 [#009Q].			 /*url perenne de la notice*/
				 [#009R].			 /* Adresse électronique d'accès au document */
                 [TTL_MAKE_100]      /* xxx                                                   */
                 [#010@]             /* Language of the item                                  */
                 [TTL_MAKE_105]      /*                                                       */
                 [#011C]             /* Projected publication date                            */
                 [#012C]             /* Physical attributes                                   */
                 [#012D]             /* Coded data serials                                    */
                 [#012E]             /* Visual projections, videorecordings and motion pictur */
                 [#012F]             /* Graphics                                              */
                 [#012G]             /* Threedimensional artefacts and realia                 */
                 [#012H]             /* Cartographic materials - general                      */
                 [#012I]             /* Cartographic materials - physical attributes          */
                 [#012J].            /* Time period of item content                           */
                 [#012K]             /* Cartographic materials - scale and co-ordinates       */
                 [#012L]             /* Cartographic materials - specific m.d. analysis       */
                 [#012M]             /* Sound recordings and printed music                    */
                 [#012N]             /* Sound recording - physical attributes                 */
                 [#012O]             /* Duration of sound recordings and printed music        */
                 [#012P]             /* Music performances and scores                         */
                 [#012Q]             /* Microforms - physical attributes                      */
                 [#012R]             /* Electronic resources                                  */
                 [#012S]             /* Antiquarian - general                                 */
                 [#012T].			 /*181*/
				 reset_tag
				 [MAKE_012Tbis].
				 [#012U].			 /*182*/
				 reset_tag
				 [MAKE_012Ubis].
				 [#012V].
				 [#019@]             /* Country of publication or production                  */
                 [#020A].            /* Dissertation Note                                     */
                 [#020B].            /* Note sur la recompense                                */
                 [#020F].            /* Frequency statement note (serials)                    */
                 [#020I].            /* Internal bibliographies/indexes note                  */
                 [TTL_MAKE_TITL]     /* Title statement                                       */
                 [#022A].            /* Uniform Title                                         */
                 [#022C].            /* Collective uniform title                              */
                 [#022E].            /* Uniform conventional heading                          */
                 [#025@].            /* Expanded title                                        */
                 [#026@].            /* Key title (serials)                                   */
                 [#026C].            /* Abbreviated title  (serials)                          */
                 [#027A].            /* Parallel title proper                                 */
                 [#027F].            /* Cover title                                           */
                 [#027G].            /* Added title-page                                      */
                 [#027H].            /* Caption title                                         */
                 [#027I].            /* Running title                                         */
                 [#027J].            /* Spine title                                           */
                 [#027K].            /* Other title variants                                  */
                 [#027L].            /* Title in standard modern spelling                     */
                 [#027M].            /* Additional title supplied by cataloguer               */
                 [#027N].            /* Translated title supplied by cataloguer               */
                 [#027O].            /* Section title                                         */
                 [#027P].            /* Former title (serials)                                */
                 [#028A].            /* Main entry - personal name                            */
                 [#028B].            /* Main entry - co-author                                */
                 [#028C].            /* Added entry - personal name                           */
                 [#028O].            /* Main entry - family name                              */
                 [#028P].            /* Main entry - co-family name                           */
                 [#028Q].            /* Added entry - family name                             */
                 [#029A].            /* Main entry - corporate name                           */
                 [#029B].            /* Main entry - corporate name                           */
                 [#029F].            /* Main entry - corporate name                           */
                 /*reset_tag
				 [TTL_MAKE_Abes]*/
                 [TTL_MAKE_NIV0_EX]
                 reset_tag
                 [#031@].            /* Dates of publication and/or volume designation        */
                 [#032@].            /* Edition statement                                     */
                 [#033A].            /* Publication, distribution, etc. (Imprint)             */
				/*[view(*, MAKE_ALL_210)] 		 Exporter tts les 219	(Paul Smit OCLC)  	  */	
                 [#033B].            /*214*/
				 [#034R].            /* Extent, etc.                                          */
                 [#035A].            /* Printed music specific statement                      */
                 [#035B]             /* Electronic resource characteristics                   */
                 [#035E].            /* Cartographic material; mathematical data              */
                 [#036D].            /* Set level                                             */
                 [#036E].            /* Series statement                                      */
                 [#036F].            /* Series                                                */
                 [#036I/01].         /* Supplement                                            */
                 [#036I/02].         /* Parent of supplement                                  */
                 [#036I/03].         /* Issued with                                           */
                 [#036I/04].         /* Est mis a jour par                                    */
                 [#036I/05].         /* Met a jour                                            */
                 [#036J].            /* Continues                                             */
                 [#036K].            /* Continued by                                          */
                 [#036L/01].         /* Other edition in same medium                          */
                 [#036L/02].         /* Other edition in another medium                       */
                 [#036L/03].         /* Translated as                                         */
                 [#036L/04].         /* Translation of                                        */
                 [#036L/05].         /* Reproduction of                                       */
                 [#036L/06].         /* Reproduced as                                         */
                 [#036M/01].         /* Set level                                             */
                 [#036M/03].         /* Piece level                                           */
                 [#036M/04].         /* Niveau du depouillement                               */
                 [#036N].            /* Item reviewed                                         */
                 [#036O/01].         /* Also bound with this volume                           */
                 [#036O/02].         /* Bound with                                            */
                 [#036O/03].         /* Other related works                                   */
                 [#036O/08].         /* Other related works                                   */
                 [#036P].            /* Name and title used as subject                        */
                 [#036Q].            /* Subseries                                             */	
				 [#037A].            /* General note                                          */
                 [#039M]			 /*FRBR*/
				 [#040@].            /* Subject added entry - personal name                   */
                 [#040A].            /* Subject added entry - personal name                   */
                 [#041@].            /* Subject added entry - corporate name                  */
                 [#042C].            /* Title used as subject                                 */
                 [#044@].            /* Trademark as subject                                  */
                 [#044D].            /* Trademark as access point                             */
                 [#044E].            /* Subject heading                                       */
                 [#044Q].            /* Topical name used as subject                          */
                 [#044R].            /* Geographical name used as subject                     */
                 [#044T].            /* Form, genre pr physical characteristics heading       */
                 [#044U].            /* Subject heading                                       */
                 [#044W].            /* Subject heading                                       */
                 [#045A].            /* Library of Congress Classification                    */
				 [#045B].             /* 309, export pour HUB */
                 [#045F].            /* Dewey Decimal Classification                          */
                 [#045G].            /* Universal Decimal Classification                      */
                 [#045H].            /* Subject category                                      */
                 [#045I].            /* Geographic area code                                  */
                 [#045V].            /* Time period code                                      */
                 [#045W].            /* Other classification numbers                          */
                 [#046A].            /* Notes pertaining to identification numbers            */
                 [#046B].            /* Notes pertaining to coded information                 */
                 [#046C].            /* General notes pertaining to descriptive information   */
                 [#046D].            /* Notes pertaining to title and statement of responsibi */
                 [#046E].            /* Notes pertaining to edition and bibliographic history */
                 [#046F].            /* Notes pertaining to publication, distribution, etc.   */
                 [#046G].            /* Notes pertaining physical description                 */
                 [#046H].            /* Notes pertaining to series                            */
                 [#046I].            /* Notes pertaining to binding and availability          */
                 [#046J].            /* Notes pertaining to linking fields                    */
                 [#046K].            /* Notes pertaining to related titles                    */
                 [#046L].            /* Notes pertaining to subject access                    */
                 [#046M].            /* Notes pertaining to intellectual responsibility       */
                 [#046N].            /* Notes pertaining to material specific information     */
                 [#046O].            /* Note on separate published indexes and citations      */
				 [#046P].            /* Credit notes (projected and video material and etc.   */
                 [#046Q].            /* Cast note (projected and video material and etc.      */
                 [#046R].            /* Original version note                                 */
                 [#046S].            /* Reproduction note                                     */
                 [#046T].            /* Preferred citation of described materials             */
                 [#046U].            /* Users/intended audience note                          */
                 [#046V].            /* Type of electronic resource                           */
                 [#046W].            /* Details note (computer files)                         */
                 [#046X].            /* Acquisition information                               */
                 [#046Y].            /* Note sur l'exemplaire                                 */
                 [#046Z].            /* Note sur la provenance                                */
                 reset_tag
				 [TTL_MAKE_Abes]
				 [#047A].            /* General cataloguers note                              */
                 [#047B].            /* ISSN bureau                                           */
                 [#047C].			 /*830*/
				 [#047D].            /* Formatted contents note                               */
				 [#047E].			 /* 339*/
                 [#047F].            /* Table of contents                                     */       
                 [#047P].            /* Summary or abstract                                   */
                 [#048A].            /* Technical details access                              */
                 [TTL_MAKE_LEV0_801] /*   Originating source                                  */
                ;

  TTL_MAKE_LEV1 =
				reset_tag
                 [
                  find_tag(#101@)
                  window_tag("record")
                  TTL_MAKE_LEV1_bis
                  [find_tag(#****)].
                  window_tag("")
                 ].
				 ;
				
  TTL_MAKE_LEV1_bis =
                 reset_tag
                 [MAKE_898]
                 reset_tag
                 [#107F].
                 [#109D]
                 [#136C].            /* Note generale locale                                  */
                 [#137B].            /* Note relating to copy in hand                         */
                 [#137C].            /* Provenance note                                       */
                 [#137D].            /* Action note                                           */
                 [#137E].            /* Access mode and reproduction note                     */
				 [#140@].
				 [#140A].
				 [#141@].
                 [#144Z].            /* Local subject term                                    */
				 [#145F].
                 [#145Z].            /* Local Dewey                                           */
                 [#150D].            /* Personal name Main - local                            */
                 [#150E].            /* Personal name - local                                 */
                 [#150G].            /* variante de titre locale                              */
                 [#150L].            /* Corporate body - local                                */
                 [#150M].            /* Family name - local                                   */
                 remove("#898")
                ;

  table TTL_mat1 =
                  "A"     "a",
                  "F"     "b",
                  "M"     "c",
                  "L"     "d",
                  "K"     "e",
                  "P"     "f",
                  "B"     "g",
                  "N"     "i",
                  "G"     "j",
                  "I"     "k",
                  "O"     "l",
                  "Z"     "m",
                  "V"     "r",
                  default "a"
                 ;

  table TTL_mat2 =
                  "s"     "a2",
                  "o"     "a2",
                  "O"     "a2",
                  "a"     "m0",
                  "c"     "m1",
                  "E"     "m2",
                  "e"     "m2",
                  "f"     "m2",
                  "F"     "m2",
                  "g"     "m2",
                  "b"     "s0",
                  "d"     "s0",
                  "r"     "c0",
                  default "m0"
                 ;

  table TTL_mat3 =
                  "v"     " ",
                  "x"     " ",
                  "r"     "1",
                  "c"     "2",
                  "a"     "3",
                  "y"     "3",
                  default " "
                 ;

  table TTL_mat4 =
                  "3"     " ",
                  "1"     "n",
                  "2"     "i",
                  default " "
                 ;

  table TTL_mini =
                  "J"     "j",
                  "S"     "s",
                  "M"     "m",
                  "A"     "a",
                  default ""
                 ;

  table TTL_year =
                  "5"     "Y",
                  "6"     "Y",
                  "7"     "Y",
                  "8"     "Y",
                  "9"     "Y",
                  default "N"
                 ;
table T012Tc =
"cri"	"$ab\#$bcb2e\#\#",
"crm"	"$ab\#$bca2e\#\#",
"crt"	"$ab\#$bcb2d\#\#",
"crn"	"$ae\#$bcx3d\#\#",
"cod"	"$aa\#$bxxx\#\#\#",
"crd"	"$aa\#$bcxx\#\#\#",
"crf"	"$ae\#$bcx3e\#\#",
"tdi"	"$ab\#$bxa2e\#\#",
"tdm"	"$ab\#$bxa3e\#\#",
"sti"	"$ab\#$bxb2e\#\#",
"tci"	"$ab\#$bxb2d\#\#",
"prm"	"$ad\#$bbx\#a\#\#",
"ntv"	"$ac\#$baxxe\#\#",
"tcn"	"$ac\#$baxxd\#\#",
"tdf"	"$ae\#$bxx3e\#\#",
"tcf"	"$ae\#$bxx3d\#\#",
"ntm"	"$ad\#$baxxe\#\#",
"tcm"	"$ad\#$baxxd\#\#",
"cop"	"$af\#$bxxx\#\#\#",
"snd"	"$ag\#$bxxxa\#\#",
"txt"	"$ai\#$bxxxe\#\#",
"tct"	"$ai\#$bxxxd\#\#",
"spw"	"$ah\#$bxxxa\#\#",
"xxx"	"$az\#$bxxx\#\#\#",
default ""
;

table T012Uc =
"s"	"a",
"c"	"b",
"h"	"c",
"p"	"d",
"g"	"e",
"e"	"f",
"n"	"n",
"v"	"g",
"x"	"z",
"z"	"?",
default ""
;

table Dollar5 =
"a" "a|xxx",
"b" "b|xxx",
"c" "c|xxx",
"d" "d|xxx",
"e" "e|xxx",
"f" "f|xxx",
"g" "g|xxx",
"h" "h|xxx",
"i" "i|xxx",
"j" "j|xxx",
"k" "k|xxx",
"l" "l|xxx",
"m" "m|xxx",
"o" "o|xxx",
"r" "r|xxx",
"s" "s|xxx",
"u" "u|xxx",
"z" "z|xxx",
"xb" "x|bxx",
"xc" "x|cxx",
"xd" "x|dxx",
"xe" "x|exx",
"xf" "x|fxx",
"xg" "x|gxx",
"xh" "x|hxx",
"xI" "x|Ixx",
"xk" "x|kxx",
"xz" "x|zxx", 
"xxc" "x|xcx",
"xxd" "x|xdx",
"xxe" "x|xex",
"xxj" "x|xjx",
"xxg" "x|xgx",
"xxh" "x|xhx",
"xxk" "x|xkx",
"xxl" "x|xlx",
"xxm" "x|xmx",
"xxn" "x|xnx",
"xxp" "x|xpx",
"xxq" "x|xqx",
"xxs" "x|xsx",
"xxt" "x|xtx",
"xxz" "x|xzx",
"xxxa" "x|xxa",
"xxxb" "x|xxb",
default ""
;

table mois =
	"01" "jan", "1" "jan", "jan" "jan", 
	"02" "fev", "2" "fev", "fev" "fev",
	"03" "mar", "3" "mar", "mar" "mar",
	"04" "avr", "4" "avr", "avr" "avr",
	"05" "mai", "5" "mai", "mai" "mai",
	"06" "jun", "6" "jun", "jun" "jun",
	"07" "jul", "7" "jul", "jul" "jul",
	"08" "aou", "8" "aou", "aou" "aou",
	"09" "sep", "9" "sep", "sep" "sep",
	"10" "oct", "oct" "oct",
	"11" "nov", "nov" "nov",
	"12" "dec", "dec" "dec",
	default " "
	;
	
	table T930p =
"PC" "P\343ole de conservation",
"PA" "Membre du plan de conservation",
	default " "
;
	
  TTL_indicator1 = "||" ;

  TTL_indicator2 = "  " ;

  TTL_indicator3 = 
                  if ($S(1) = "\#")
                     [
                      if ($(2) = "\#") ["  "]
                      else             [" " $(2)]
                     ]
                  else
                     [
                      if ($(2) = "\#") [$(1) " "]
                      else             [$]
                     ]
                 ;

  TTL_indicator4 = " |" ;

  TTL_indicator5 = "| " ;

  TTL_indicator6 =
                  if ($S(1) = "\#") "| "
                  else              [$(1) " "]
                 ;

  TTL_indicator7 =
                  if ($S(1) = "\#") "  "
                  else              [$(1) " "]
                 ;
				 
TTL_indicator8 = 
				  if ($S(1) = "\#")
                     [
                      if ($(2) = "\#") ["  "]
                      else   [" " $(2)]
                     ]
                  else
                     [
                      if ($(2) = "\#") [$(1) " "]
                      else             [$]
                     ]
	;	
				 
 table indic_219_1 =
 "\#" " ", 
  default " "
 ;
 
 /*si indicateur = 4, colle a la zone precedente*/
  table indic_219_2 =
 "0" " ", "1" "1" , "2" " ", "3" " ","\#" " ",
  default " "
 ;
	
				 
/*
 *  TIT001A
 *  USM099
 */

  TIT001A =
           if find_tag(#001A)
              [
               "#099   "
               ["$0" $0(last -7 for 8)]
              ]
           else fatal
		   ;
		   
 TTL_MAKE_004_006 =
                "#004 $0"
                [
                 if set_tag(#001A)
                    [
                     if (TTL_year($0(last-1)) = "Y") "19"
                     else                            "20"
                                                     $(last-1 for 2)
                                                     $(last-4 for 2)
                                                     $(last-7 for 2)
					]
                    or "00000000000000.000"
                 ]
				 reset
				 "#006 $0"
				 [
				    [
					if set_tag(#001A)
                    $0(1 to ":")
					]
					or
					"000000000"
				 ]	
                ;

/*
 *  TIT001B
 *  USM098
 */

  TIT001B =
           if find_tag(#001B)
              [
               "#098   "
               ["$0" $0(last -7 for 8)]
              ]
           else fatal
          ;

/*
 * Version identifier
 * #001B $0 $t
 * #005
 */

  TTL_MAKE_005 =
                "#005 $0"
                [
                 if set_tag(#001B)
                    [
                     if (TTL_year($0(last-1)) = "Y") "19"
                     else                            "20"
                                                     $(last-1 for 2)
                                                     $(last-4 for 2)
                                                     $(last-7 for 2)
                                                     $t(1 for 2)
                                                     $(4 for 2)
                                                     $(7 for 6)
                    ]
                    or "00000000000000.000"
                 ]
                ;

  TTL_MAKE_005_007 =
                "#005 $0"
                [
                 if set_tag(#001B)
                    [
                     if (TTL_year($0(last-1)) = "Y") "19"
                     else                            "20"
                                                     $(last-1 for 2)
                                                     $(last-4 for 2)
                                                     $(last-7 for 2)
                                                     $t(1 for 2)
                                                     $(4 for 2)
                                                     $(7 for 6)
                    ]
                    or "00000000000000.000"
                 ]
				 reset
				 "#007 $0"
				 [
				    [
					if set_tag(#001B)
                    $0(1 to ":")
					]
					or
					"000000000"
				 ]
                ;

  TTL_MAKE_Abes =
					if set_tag(#003D)
					fatal
					else
                 [
                  "#801  3$aFR$bAbes$c"
                  TTL_MAKE_DATE_801
                  "$gAFNOR"
                  success
                 ]
                ;
				
/*export des ILN présents en 001@ pica (000 unimarc sudoc) en les séparant : 4-6 => 4,5,6 
  voir message Paul Smit du 05/12/2013 11:17 */
#001@ = 
	
	[ "#002 $0" print_ilns ]
	
	;
	
print_ilns =
  set(#001@$0)            /* go to userbits subfield */
  scan($, "%lu")          /* get the first ILN from the list */
  decimal(scanned_number) /* and print it */
  success

/* Go to the next ILN */

  scan(callback(decimal(scanned_number + 1)), "%lu")

  /* Test each higher ILN until 999 and print if it is in the list */

  [
    if in_range(scanned_number, $)
      [ "," decimal(scanned_number) ]
    /* '999' is the maximum ILN */
    else if (scanned_number > 999) fatal
    success
    /* Go to the next ILN */
    scan(callback(decimal(scanned_number + 1)), "%lu")
  ].
  ;

/*
 * #002@ Record status and type and encoding level
 * #RECORD LABEL
 */

  #002@ =
         "#000 $0     "
         if set(#001E$0) "d"
         else
            [
             target(
                    reset_tag
                    if (#099$0 = #098$0) "n"
                    else "c"
                   )
            ]
         set(#002@$0)
         TTL_mat1($(1))
         Make_pos_7
         " 22     "
         set(#002@$0)
         [
          TTL_mat3($(3))
          or
          " "
         ]
         [
          TTL_mat4($(4))
          or
          " "
         ]
         " 450 "
         remove("#099")
         remove("#098")
		/* [reset "#008 $a" $0]  Gala 11023*/
        ;

  Make_pos_7 =
        set(#002@$0)
               if ($(2) = "s")  "a2"
          else if ($(2) = "o")  "a2"
		  else if ($(2) = "n")  "a2"
          else if ($(2) = "O")  "a2"
          else if ($(2) = "a")  "m0"
          else if ($(2) = "c")  "m1"
          else if ($(2) = "E")  "m2"
          else if ($(2) = "e")  "m2"
          else if ($(2) = "f")  "m2"
          else if ($(2) = "F")  "m2"
          else if ($(2) = "g")  "m2"
          else if ($(2) = "b")  Make_i_ou_s
          else if ($(2) = "d")  "d0"
          else if ($(2) = "r")  "c0"
          else                  "m0"
             ;
  
  Make_i_ou_s =
      if set(#012D$a)
         [     if ($(1) = "a")  "s0"
          else if ($(1) = "c")  "s0"
          else if ($(1) = "e")  "i0"
          else if ($(1) = "f")  "i0"
          else if ($(1) = "g")  "i0"
          else if ($(1) = "z")  "s0"
          else                  "s0" 
         ]
     else                       "s0"
              ;

/*
 * #003@ Pica Production Number
 * #001  Record identifier
 */

  #003@ = "#001 $0"$0
		 /*  reset
          "#003 $0http://www.sudoc.fr/"$0*/
  ;
  
  M_OCL =

    if set(#003O$a)
     [if ($ = "OCoLC")
       ["#035   $a(" $ ")" $0]
     ]
     ;

/*
 * #003B Export Production Number titles
 * #001  Record identifier
 */

  #003B = "#001 $0"$0 ;

/*
 *  PPN of merged record
 *  #003D $0
 *  #035  $a
 */

#003D =
      [  
		 ["#035 "
         TTL_indicator2
         ["$a" $0 "$9sudoc"]
		 ]
         [reset 
		 ["#801  3$aFR$bAbes$c"
          TTL_MAKE_DATE_801
          "$gAFNOR$h" $0]
		 ]
	  ]
        ;

/*
 *   #003Z Export Production Number authorities
 *   #001  Record identifier
 */

  #003Z =
         "#001 $0"$0
         ["#154   $aAFNOR"]
        ;

/*
 *  International Standard Book Number
 *  #004A [$0] [$c] [$f] [$z].
 *  #010  [$a] [$b] [$d] [$z].
 */

   #004A =
      [
          "#010 "
          TTL_indicator2
          [
           find($*)
           if (code = "0") ["$a" $]
           if (code = "B") ["$a" $]
           if (code = "c") ["$b" $]
           if (code = "f") ["$d" $]
           if (code = "z") ["$z" $]
		   if (code = "A") ["$9" $]
          ].
         ]
        ;
		
  #004B =
     [
          "#010 "
          TTL_indicator2
          [
           find($*)
           if (code = "0") ["$a" $]
           if (code = "B") ["$a" $]
           if (code = "c") ["$b" $]
           if (code = "f") ["$d" $]
           if (code = "z") ["$z" $]
		   if (code = "A") ["$9" $]
          ].
         ]
        ;

  SEQ010 =
          [
           find($*)
           if (code = "0") ["$a" $]
           if (code = "B") ["$a" $]
           if (code = "c") ["$b" $]
           if (code = "f") ["$d" $]
           if (code = "z") ["$z" $]
		   ].
         ;

/*
 *  Publishers Number (sound recordings and music)
 *  #004E $S [$0] [$l] [$c] [$f] [$z]
 *  #071     [$a] [$b] [$c] [$d] [$z]
 */

  #004E =
         [
          "#071 "
          TTL_indicator3
          SEQ071
         ]
        ;

  SEQ071 =
          [
           find($*)
           if (code = "0") ["$a" $]
           if (code = "l") ["$b" $]
           if (code = "c") ["$c" $]
           if (code = "f") ["$d" $]
           if (code = "z") ["$z" $]
          ].
         ;

/*
 *  ISMN
 *  #004F $0 [$c] [$f][$z].
 *  #013  $a [$b] [$d][$z].
 */

  #004F =
         [
          "#013 "
          TTL_indicator2
          SEQ010
         ]
        ;

/*
 *  Article Identifier
 *  #004L $0 [$2] [$z].
 *  #014  $a [$2] [$z].
 */

  #004L =
         [
          "#014 "
          TTL_indicator2
          ["$a" $0]
          ["$2" $2]
          ["$z" $z].
         ]
        ;

/*
 *  ISRN
 *  #004N $0 [$c] [$d] [$z].
 *  #015  $a [$b] [$d] [$z].
 */

  #004N =
         [
          "#015 "
          TTL_indicator2
          SEQ010
         ]
        ;

  #004X =
         [
          "#073 "
          TTL_indicator3
 	  SEQ072
         ]
        ;

  SEQ072 =
          [
           find($*)
           if (code = "0") ["$a" $]
           if (code = "c") ["$b" $]
           if (code = "m") ["$c" $]
           if (code = "f") ["$d" $]
           if (code = "z") ["$z" $]
          ].
         ;

/*
 *  UPC
 *  #004Y [$0] [$c] [$m] [$f] [$z].
 *  #072  [$a] [$b] [$c] [$d] [$z].
*/

  #004Y =
         [
          "#072 "
          TTL_indicator3
 	  SEQ072
         ]
        ;
    
/*
 *  Autre numero d'identification normalise
 *  #004Z [$0] [$c] [$f] [$z]. [$2]
 *  #017  [$a] [$b] [$d] [$z]. [$2]
 */

  #004Z =
         [
          "#017 "
          TTL_indicator3
          [
           find($*)
           if (code = "0") ["$a" $]
           if (code = "c") ["$b" $]
           if (code = "f") ["$d" $]
           if (code = "z") ["$z" $]
           if (code = "2") ["$2" $]
          ].
         ]
        ;

/*
 *  International Standard Serial Number
 *  #005A $0 [$c] [$f]. [$e] [$g]. [$y].[$z].
 *  #011  $a [$b] [$d]. [$f] [$g]. [$y].[$z].
 */

  #005A =
         [
          "#011 "
          TTL_indicator7
          stop("fgyz")
          [
           ["$a" $0]
           ["$b" $c]
           ["$d" $f].
           ["$f" $e]
           ["$g" $g].
           ["$y" $y].
           ["$z" $z].
          ]
         ]
        ;

/*
 *  National Bibliography Number
 *  #006A [$a] [$0] [$z].
 *  #020  [$a] [$b] [$z].
 */

  #006A =
         [
          "#020 "
          TTL_indicator2
          ["$a" $a]
          ["$b" $0]
          ["$z" $z].
         ]
        ;

/*
 *  Legal Deposit Number
 *  #006C [$a] [$0] [$z].
 *  #021  [$a] [$b] [$z].
 */

  #006C =
         [
          "#021 "
          TTL_indicator2
          ["$a" $a]
          ["$b" $0]
          ["$z" $z].
         ]
        ;

/*
 *  Government Publication Number
 *  #006D [$a] [$0] [$z].
 *  #022  [$a] [$b] [$z].
 */

  #006D =
         [
          "#022 "
          TTL_indicator2         
          ["$a" $a]
          ["$b" $0]
          ["$z" $z].
         ]
        ;

/*
 * Numero national de these
 * #006L [$a] [$0]
 * #029  [$a] [$b]
*/

  #006L =
         [
          "#029 "
          TTL_indicator2         
          ["$a" $a]
          ["$b" $0]
         ]
        ;

/*
 *  Other system controll numbers
 *  #006Z [$a] [$0] [$z].
 *  #035  [$a] [$a] [$z].
 */

  table source_pritec =
                       "PRITEC.MEN01." "PRITEC ",
                       "PRITEC.MEN02." "PRITEC.PAR1.",
                       "PRITEC.MEN03." "PRITEC.BSG.",
                       "PRITEC.MEN04." "PRITEC.RENNES.",
                       "PRITEC.MEN05." "PRITEC.MAZARINE.",
                       "PRITEC.MEN06." "PRITEC.RENNES.",
                       "PRITEC.MEN07." "PRITEC.PAR1.",
                       "PRITEC.MEN08." "PRITEC.INRP.",
                       "PRITEC.MEN09." "PRITEC.CAEN.",
                       "PRITEC.MEN10." "PRITEC.DIJON.",
                       "PRITEC.MEN11." "PRITEC.STRASBG.",
                       "PRITEC.MEN12." "PRITEC.RENNES.",
                       "PRITEC.MEN14." "PRITEC.CCFISH.",
                       "PRITEC.MEN15." "PRITEC.BSG.",
                       "PRITEC.MEN16." "PRITEC.MAZARINE.",
                       "PRITEC.MEN17." "PRITEC.ROUEN.",
                       "PRITEC.MEN18." "PRITEC.SCDLYON2.",
                       "PRITEC.MEN19." "PRITEC.SICD.",
                       "PRITEC.MEN20." "PRITEC.CCFD.",
                       default "PRITEC.MEN."
                      ;

  #006Z =
         [
          "#035   "
          if ($0(1 for 6)="DYNIX-")
             [
              reset
              if ($0(7 for 4)="BUPF") ["$aDYNIX_BUPF_" $(12 to last)]
              else                    ["$aDYNIX_" $(7 for 5) "_" $(13 to last)]
             ]
	  else
             [
              reset
              if ($0(1 for 10)="PRITEC.MEN") [reset "$a" source_pritec($0(1 for 13)) $(14 to last)]
              else                           [["$a" $] ["$z" $z]. ["$d" $d] ["$2" $l]]
             ]
        /* reset
           if      ($0(1 for 3) = "ocm")
                  [
                   "#801  1$aUS$bOCLC$gAACR2"
                   "#801  2$aFR$bAUROC$gAFNOR"
                  ]
          else if ($(1 for 4) = "frBN")
                  [
                   "#801  3$aFR$bBN$gAFNOR"
                  ]
          else if ($(1 for 3) = "sib")
                  [
                   "#801  3$aFR$bSF$gAFNOR"
                  ]*/
         ]
        ;

/*
 *  CODEN
 *  #007C $0
 *  #040 $a [$z].
 */

  #007C =
         [
          "#040 "
          TTL_indicator2
          ["$a" $0]
          ["$z" $z].
         ]
        ;

/*
 *  Fingerprint
 *  #007P $a [$2]
 *  #012  $a [$2]
 */

  #007P =
         [
          "#012 "
          TTL_indicator2
          ["$a" $a]
          ["$2" $2]
         ]
        ;

/*
 *  Electronic location and access
 *  #009P
 *  #856
 */

  #009P =
         [
          "#856 "
          TTL_indicator3
          [
           find($*)
           if (code = "p") ["$a" $]
           if (code = "q") ["$b" $]
           if (code = "e") ["$c" $]
           if (code = "c") ["$d" $]
           if (code = "A") ["$e" $]
           if (code = "b") ["$f" $]
           if (code = "g") ["$g" $]
           if (code = "h") ["$h" $]
           if (code = "i") ["$i" $]
           if (code = "j") ["$j" $]
           if (code = "k") ["$k" $]
           if (code = "l") ["$l" $]
           if (code = "f") ["$m" $]
           if (code = "r") ["$n" $]
           if (code = "o") ["$o" $]
           if (code = "n") ["$p" $]
           if (code = "0") ["$q" $]
           if (code = "s") ["$r" $]
           if (code = "d") ["$s" $]
           if (code = "u") ["$t" $]
           if (code = "a") ["$u" $]
           if (code = "v") ["$v" $]
           if (code = "w") ["$w" $]
           if (code = "x") ["$x" $]
           if (code = "y") ["$y" $]
           if (code = "z") ["$z" $]
           if (code = "2") ["$2" $]
          ].
         ]
        ;
		
#009R =
         [
          "#859 "
          TTL_indicator3
          [
           find($*)
           if (code = "p") ["$a" $]
           if (code = "q") ["$b" $]
           if (code = "e") ["$c" $]
           if (code = "c") ["$d" $]
           if (code = "A") ["$e" $]
           if (code = "b") ["$f" $]
           if (code = "g") ["$g" $]
           if (code = "h") ["$h" $]
           if (code = "i") ["$i" $]
           if (code = "j") ["$j" $]
           if (code = "k") ["$k" $]
           if (code = "l") ["$l" $]
           if (code = "f") ["$m" $]
           if (code = "r") ["$n" $]
           if (code = "o") ["$o" $]
           if (code = "n") ["$p" $]
           if (code = "0") ["$q" $]
           if (code = "s") ["$r" $]
           if (code = "d") ["$s" $]
           if (code = "u") ["$t" $]
           if (code = "a") ["$u" $]
           if (code = "v") ["$v" $]
           if (code = "w") ["$w" $]
           if (code = "x") ["$x" $]
           if (code = "y") ["$y" $]
           if (code = "z") ["$z" $]
           if (code = "2") ["$2" $]
          ].
         ]
        ;
		
/*
 *  url perenne de la notice
 *  #009Q
 *  #033
 */
  #009Q =
        [
          "#033 "
          TTL_indicator2
          [
		  find($*)
           if (code = "a") ["$a" $]
           if (code = "z") ["$z" $]
		   if (code = "2") ["$2" $]
		   if (code = "d") ["$d" $]
		  ].
		]  
		;

/*
 * #100  Fixed length data elements
 * #001A Date entered on file
 * #011@ Date of publication
 *       $a [$b] [$n] [$e] [$c]
 * #012A Target audience code
 *       $a
 * #012A Government publication code
 *       $b
 * #012A Modified record code
 *       $e
 * #012A Language of cataloguing
 *       $f
 * #012A Transliteration code
 *       $c
 *       Character set
 *       Additional character set
 * #012A Alphabet of title
 *       $d
 */

  TTL_MAKE_100 =
                "#100   $a"   /* pos.  0-7  */

                [
                 if set_tag(#001A)
                    [
                     if (TTL_year($0(last-1)) = "Y") "19"
                     else "20" $(last-1 for 2) $(last-4 for 2) $(last-7 for 2)
                    ]
                    or "00000000"
                ]
                              /* pos.  8-16 */

                if set_tag(#011@)
                   [
                    if ($S(1) = "1")
                       [
                        target(reset_tag)
                        if target(#000$0(8) in "is")
                           [
                            "c"
                            [width(4) pad(" ") $a(1 to "\D" end)]
                            "    "
                           ]
                        else
                           [
                            "f"
                            [width(4) pad(" ") $a(1 to "\D" end)]
                            [
                             [$c]
                             or
                             "    "
                            ]
                           ]
                    ]
                 else /* if ($(1) = "0") */
                    [
					 if set($h)
                             ["k" reset $a $h]
                     else if      set($g)
                             [
                              "j"
                              reset
                              $a
                              [width(4) pad(" ") $g(1 to "\D" end)]
                             ]
                     else if set($f)
                             ["h" reset $a $f]
                     else if set($e)
                             [
                              target(reset_tag)
                              if target(#000$0(7) in "gj")
                                 [
                                  "i"
                                  reset
                                  $a
                                  $e
                                 ]
                              else
                                 [
                                  "e"
                                  reset
                                  [width(4) pad(" ") $a(1 to "\D" end)]
                                  [width(4) pad(" ") $e(1 to "\D" end)]
                                 ]
                             ]
                     else if set($n)
                             [
                              target(reset_tag)
                              if target(#000$0(8) in "isd")
                                 [
                                  "a"
                                  reset
                                  [width(4) pad(" ") $a(1 to "\D" end)]
                                  "9999"
                                 ]
                              else
                                 [
                                  "g"
                                  reset
                                  [width(4) pad(" ") $a(1 to "\D" end)]
                                  "9999"
                                 ]
                             ]
                     else if set($c)
                             [
                              "f"
                              reset
                              $a
                              $c
                             ]
                     else if set($b)
                             [
                              target(reset_tag)
                              if target(#000$0(8) in "isd")
                                 [
                                  "b"
                                  reset
                                  [width(4) pad(" ") $a(1 to "\D" end)]
                                  [width(4) pad(" ") $b(1 to "\D" end)]
                                 ]
                              else
                                 [
                                  "g"
                                  reset
                                  [width(4) pad(" ") $a(1 to "\D" end)]
                                  [width(4) pad(" ") $b(1 to "\D" end)]
                                 ]
                             ]
                     else if set($a)
                             [
                              target(reset_tag)
                              if target(#000$0(8) = "s")
                                 [
                                  "b"
                                  reset
                                  [width(4) pad(" ") $a(1 to "\D" end)]
                                  [width(4) pad(" ") $(1 to "\D" end)]
                                 ]
                     else
                              [
                               "d"
                               reset
                               $a
                               "    "
                              ]
                    ]
                   ]
                ]
                                   /* pos. 17-19 */

                [
                 [set(#012A$a) width(3) $ pad(" ")]
                 or
                 "|||"
                ]

                                   /* pos.  20   */
                [
                 [set(#012A$b) width(1) $]
                 or
                 "|"
                ]
                                   /* pos.  21   */
                [
                 [set(#012A$e) width(1) $]
                 or
                 "|"
                ]
                                   /* pos. 22-24 */

                [
                 [set(#012A$f) width(3) $ pad(" ")]
                 or
                 "fre"
                ]
                                   /* pos.  25   */
                [
                 [set(#012A$c) width(1) $]
                 or
                 "y"
                ]
                                   /* pos. 26-33 */

                "50      "
                                   /* pos. 34-35 */

                [
                 [set(#012A$d) width(2) $ pad(" ")]
                 or
                 "ba"
                ]
                reset_tag
               ;

/*
 *  Language code
 *  #010@ $S [$a].[$b].[$c].[$d].[$e].[$f].[$g].[$h].[$i].[$j].
 *  #101     [$a].[$b].[$c].[$d].[$e].[$f].[$g].[$h].[$i].[$j].
 */

  #010@ =
         [
          "#101 "
          TTL_indicator3
          ["$a" $a].
          ["$b" $b].
          ["$c" $c].
          ["$d" $d].
          ["$e" $e].
          ["$f" $f].
          ["$g" $g].
          ["$h" $h].
          ["$i" $i].
          ["$j" $j].
         ]
        ;

/*
 * #105  $a Coded data field books
 * #012B $a Illustration codes
 *       $b Form of contents codes
 *       $c Conference or meeting code
 *       $d Festschrift indicator
 *       $e Index indicator
 *       $f Literature code
 *       $g Biography code
 */

   TTL_MAKE_105 =
                reset_tag
                [ "#105   $a"
                  [  if set(#012B$a) [width(4) $ pad(" ") [$a].]
                     else            ["y   "]
                  ]
                  /*[  if set(#012B$b)
                        [  if ($!=7) [width(4) $ pad(" ") [$b].]
                         else "m   "
                        ]
                     else
                        ["||||"]
                  ]*/
				  [  
				  if set(#012B$b)[width(4) $ pad(" ") [$b].]
                  else ["||||"]
                  ]
                  [ [set(#012B$c) width(1) $]
                     or
                     "|"
                  ]
                  [ [set(#012B$d) width(1) $]
                     or
                     "|"
                  ]
                  [ [set(#012B$e) width(1) $]
                     or
                     "|"
                  ]
                  [ [set(#012B$f) width(1) $]
                     or
                     "|"
                  ]
                  [ [set(#012B$g) width(1) $]
                     or
                     "|"
                  ]
               ]
              ;
/*
 *  Projected publication date
 *  #011C
 *  #211
 */

  #011C =
         [
          "#211 "
          TTL_indicator2
          ["$a" $a]
         ]
        ;

/*
 * Informations codees sur la presentation physique (texte)
 * #012C $a
 * #106 $0
 */

  #012C =
         [
          "#106 "
          TTL_indicator2
          ["$a" $a]
         ]
        ;

/*
 * #110  Coded data field serials
 * #012D
 */

  #012D =
         "#110   $a"
         [
          [
           set(#012D$a) 
           [
            if ($ in "abcefgz") [width(1) $]
            else "z"
           ]
          ]
          or
          "a"
         ]
         [
          [set(#012D$b) width(1) $]
          or
          "|"
         ]
         [
          [set(#012D$c) width(1) $]
          or
          "|"
         ]
         [
          [set(#012D$d) width(1) $]
          or
          "|"
         ]
         [
          if set(#012D$e) [width(3) $ pad(" ") [$e].]
          else                                 ["|||"]
         ]
         [
          [set(#012D$f) width(1) $]
          or
          "|"
         ]
         [
          [set(#012D$g) width(1) $]
          or
          "|"
         ]
         [
          [set(#012D$h) width(1) $]
          or
          "|"
         ]
         [
          [set(#012D$i) width(1) $]
          or
          "|"
         ]
        ;

/*
 * #115  Visual projections
 * #012E
 */

  #012E =
         "#115   $a"
         [
          [set(#012E$a) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$b) width(3) $ pad(" ")]
          or
          "|||"
         ]
         [
          [set(#012E$c) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$d) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$e) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$f) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$g) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$h) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$i) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$j) width(4) $ pad(" ")]
          or
          "||||"
         ]
         [
          [set(#012E$k) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$l) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$m) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$n) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$o) width(1) $]
          or
          "|"
         ]
         "$b"
         [
          [set(#012E$A) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$B) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$C) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$D) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$E) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$F) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$G) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$H) 
                if ($(1) in "ab") "b"
                else
                [ set(#012E$H)  width(1) $]
          ]
          or
          "|"
         ]
         [
          [set(#012E$J) width(1) $]
          or
          "|"
         ]
         [
          [set(#012E$K) width(6) $ pad("0")]
          or
          "||||||"
         ]
        ;

/*
 * #116  Graphics
 * #012F
 */

  #012F =
         "#116   $a"
         [
          [set(#012F$a) width(1) $]
          or
          "|"
         ]
         [
          [set(#012F$b) width(1) $]
          or
          "|"
         ]
         [
          [set(#012F$c) width(1) $]
          or
          "|"
         ]
         [
          [set(#012F$d) width(1) $]
          or
          "|"
         ]
         [
          if set(#012F$e) [width(6) $ pad(" ") [$e].]
          else            ["||||||"]
         ]
         [
          if set(#012F$f) [width(6) $ pad(" ") [$f].]
          else            ["||||||"]
         ]
         [
          [set(#012F$g) width(2) $ pad(" ")]
          or
          "||"
         ]
        ;

/*
 * #117  Threedimensional artefacts and realia
 * #012G
 */

  #012G =
         [
          "#117 "
          TTL_indicator2
          [
           "$a"
           [  
            [set(#012G$a) width(2) $ pad(" ")]
            or
            "||"
           ]
           [  
            [set(#012G$b) width(6) $ pad(" ")]
            or
            "||||||"
           ]
           [  
            [set(#012G$c) width(1) $]
            or
            "|"
           ]
          ]
         ]
        ;

/*
 * #120  Cartographic materials - general
 * #012H
 */

  #012H =
         [
          "#120 "
          TTL_indicator2
          [
           "$a"
           [  
            [set(#012H$a) width(1) $]
            or
            "a"
           ]
           [  
            [set(#012H$b) width(1) $]
            or
            "|"
           ]
           [  
            [set(#012H$c) width(1) $]
            or
            "|"
           ]
           [  
            [set(#012H$d) width(4) $ pad(" ")]
            or
            "    "
           ]
           [  
            [set(#012H$e) width(2) $ pad(" ")]
            or
            "||"
           ]
           [  
            [set(#012H$f) width(4) $ pad(" ")]
            or
            "||||"
           ]
          ]
         ]
        ;

/*
 * #121  Cartographic materials - physical attributes
 * #012I
 */

  #012I =
         "#121   $a"
         [
          [set(#012I$a) width(1) $]
          or
          "|"
         ]
         [
          if set(#012I$b) [width(2) $ pad(" ") [$b]]
          else            ["||"]
         ]
         [
          [set(#012I$c) width(2) $ pad(" ")]
          or
          "||"
         ]
         [
          [set(#012I$d) width(1) $]
          or
          "|"
         ]
         [
          [set(#012I$e) width(1) $]
          or
          "|"
         ]
         [
          [set(#012I$f) width(1) $]
          or
          "|"
         ]
         [
          [set(#012I$g) width(1) $]
          or
          "|"
         ]
         "$b"
         [
          [set(#012I$A) width(1) $]
          or
          "|"
         ]
         [
          [set(#012I$B) width(1) $]
          or
          "|"
         ]
         [
          [set(#012I$C) width(2) $ pad(" ")]
          or
          "||"
         ]
         [
          [set(#012I$D) width(1) $]
          or
          "|"
         ]
         [
          [set(#012I$E) width(1) $]
          or
          "|"
         ]
         [
          [set(#012I$F) width(3) $ pad(" ")]
          or
          "|||"
         ]
        ;

/*
 * #122  Time period of item content
 * #012J
 */

  #012J =
         [
          "#122 "
          TTL_indicator6
          ["$a" $a].
         ]
        ;

/*
 * #123  Cartographic materials - scale and co-ordinates
 * #012K
 */

  #012K =
         [
          "#123 "
          TTL_indicator6
          ["$a" $a]
          ["$b" $b].
          ["$c" $c].
          ["$d" $d]
          ["$e" $e]
          ["$f" $f]
          ["$g" $g]
          ["$h" $h]
          ["$i" $i]
          ["$j" $j]
          ["$k" $k]
          ["$m" $m]
          ["$n" $n]
          ["$o" $o]
          ["$p" [$p] [$q]]
         ]
        ;

/*
 * #124  Cartographic materials - specific m.d. analysis
 * #012L
 */

  #012L =
         [
          "#124 "
          TTL_indicator2
          ["$a" $a]
          ["$b" $b].
          ["$c" $c].
          ["$d" $d].
          ["$e" $e].
          ["$f" $f].
          ["$g" $g].
         ]
        ;

/*
 * #125  Sound recordings and printed music
 * #012M
 */

  #012M =
         [
          "#125 "
          TTL_indicator2
          ["$a" $a [$b]]
          ["$b" $A]
          ["$c" [find($B)
                    if ($ = "\#") " "
                  else $
                ]. 
          ]
         ]
        ;

/*
 * #126  Sound recording - physical attributes
 * #012N
 */

  #012N =
         "#126   $a"
         [
          [set(#012N$a) width(1) $]
          or
          "|"
         ]
         [
          [set(#012N$b) width(1) $]
          or
          "|"
         ]
         [
          [set(#012N$c) width(1) $]
          or
          "|"
         ]
         [
          [set(#012N$d) width(1) $]
          or
          "|"
         ]
         [
          [set(#012N$e) width(1) $]
          or
          "|"
         ]
         [
          [set(#012N$f) width(1) $]
          or
          "|"
         ]
         [
          [set(#012N$g) width(1) $]
          or
          "|"
         ]
         [
          if set(#012N$h) [width(6) $ pad(" ") [$h].]
          else            ["||||||"]
         ]
         [
          [set(#012N$i) width(1) $]
          or
          "|"
         ]
         [
          [set(#012N$j) width(1) $]
          or
          "|"
         ]
         "$b"
         [
          [set(#012N$A) width(1) $]
          or
          "|"
         ]
         [
          [set(#012N$B) width(1) $]
          or
          "|"
         ]
         [
          [set(#012N$C) width(1) $]
          or
          "|"
         ]
        ;

/*
 * #127  Duration of sound recordings and printed music
 * #012O
 */

  #012O =
         [
          "#127 "
          TTL_indicator2
          ["$a" $a]
         ]
        ;

/*
 * #128  Music performances and scores
 * #012P
 */

  #012P =
         [
          "#128 "
          TTL_indicator2
          [ find($a)   if ($(3) = "\#") ["$a" $(1 to 2) " "]
                     else ["$a" $]
          ].
          ["$b" $b].
          ["$c" $c].
          ["$d" $d]
         ]
        ;

/*
 * #130  Microforms - physical attributes
 * #012Q
 */

  #012Q =
         "#130   $a"
         [
          [set(#012Q$a) width(1) $]
          or
          "|"
         ]
         [
          [set(#012Q$b) width(1) $]
          or
          "|"
         ]
         [
          [set(#012Q$c) width(1) $]
          or
          "|"
         ]
         [
          [set(#012Q$d) width(1) $]
          or
          "|"
         ]
         [
          [set(#012Q$e) width(3) $ pad("0")]
          or
          "|||"
         ]
         [
          [set(#012Q$f) width(1) $]
          or
          "|"
         ]
         [
          [set(#012Q$g) width(1) $]
          or
          "|"
         ]
         [
          [set(#012Q$h) width(1) $]
          or
          "|"
         ]
         [
          [set(#012Q$i) width(1) $]
          or
          "|"
         ]
        ;

/*
 * #135  Electronic resources
 * #012R
 */

  #012R =
         [
          "#135 "
          TTL_indicator2
          [
           "$a"
           [  
            [set(#012R$a) width(1) $]
            or
            "|"
           ]
           [  
            [set(#012R$b) width(1) $]
            or
            "|"
           ]
           [  
            [set(#012R$c) width(1) $]
            or
            "|"
           ]
           [  
            [set(#012R$d) width(1) $]
            or
            "|"
           ]
           [  
            [set(#012R$e) width(1) $]
            or
            "|"
           ]
           [  
            [set(#012R$f) width(3) $]
            or
            "|||"
           ] 
           [  
            [set(#012R$g) width(1) $]
            or
            "|"
           ]
           [  
            [set(#012R$h) width(1) $]
            or
            "|"
           ]
           [  
            [set(#012R$i) width(1) $]
            or
            "|"
           ] 
           [  
            [set(#012R$j) width(1) $]
            or
            "|"
           ]
           [  
            [set(#012R$k) width(1) $]
            or
            "|"
           ]  
          ]
         ]
        ;

/*
 * #140  Antiquarian - general
 * #012S
 */

  #012S =
         "#140   $a"
         [
          if set(#012S$a) [width(4) $ pad(" ") [$a].]
          else            ["||||"]
         ]
         [
          if set(#012S$b) [width(4) $ pad(" ") [$b].]
          else            ["||||"]
         ]
         [
          [set(#012S$c) width(1) $]
          or
          "|"
         ]
         [
          if set(#012S$d) [width(4) $ pad(" ") [$d].]
          else            ["||||"]
         ]
         [
          [set(#012S$e) width(1) $]
          or
          "|"
         ]
         [
          [set(#012S$f) width(1) $]
          or
          "|"
         ]
         [
          [set(#012S$g) width(1) $]
          or
          "|"
         ]
         [
          [set(#012S$h) width(1) $]
          or
          "|"
         ]
         [
          [set(#012S$i) width(1) $]
          or
          "|"
         ]
         [
          [set(#012S$j) width(1) $]
          or
          "|"
         ]
         [
          [set(#012S$k) width(1) $]
          or
          "|"
         ]
         [
          [set(#012S$l) width(1) $]
          or
          "|"
         ]
        ;
		
#012T = 
		"#181   "
		["$6z" $P]
		["$c" $c]
		["$2rdacontent"]
		;

MAKE_012Tbis =
		[
		find_tag(#012T)
		"#181  1"
        [find($*)
		if (code = "P") ["$6z" $]
		if (code = "c") [T012Tc($)]
		].
		]
		;
		
#012U = 
		"#182   "
		["$6z" $P]
		["$c" $c]
		["$2rdamedia"]
		;
		
MAKE_012Ubis =
		
		[
		find_tag(#012U)
		"#182  1"
        [find($*)
		if (code = "P") ["$6z" $]
		if (code = "c") ["$a" T012Uc($)]
		].
		]
		;

#012V = 
		"#183  1"
		["$6z" $P]
		["$a" $c]
		["$2rdacarrier"]
		;
		
/*
 *  Country of publishing
 *  #019@ $a [$c].
 *  #102  $a [$b].
 */

  #019@ =
         [
          "#102 "
          TTL_indicator2
          stop("ac2d")
          [
           ["$a" $a]
           ["$b" $c]
           ["$2" $2]
           ["$c" $d]
          ].
         ]
        ;

/*
 *   Dissertation note
 *   #020A
 *   #328
 */

   #020A = 
          [
           "#328 "
           TTL_indicator3
           stop("zabcedtu2")
           [
            ["$z" $z]
            ["$a" $a]
            ["$b" $b]
            ["$c" $c]
            ["$e" $e]
            ["$d" $d]
            ["$t" $t]
            ["$u" $u]
            ["$2" $2]
           ].
          ]
         ;

/*
 *   Note sur la recompense
 *   #020B
 *   #334
 */

  #020B =
         [
          "#334 "
          TTL_indicator2
          ["$a" $a]
          ["$b" $b]
          ["$c" $c]
          ["$d" $d] 
          ["$u" $u]
          ["$2" $2]
         ]
        ;

/*
 *   Frequency statement note (serials)
 *   #020F
 *   #326
 */

  #020F = 
         [
          "#326 "
          TTL_indicator2           
          ["$a" $a]
          ["$b" $b]
          ["$u" $u]
          ["$2" $2]
         ]
        ;

/*
 *   Internal bibliographies/indexes note
 *   #020I
 *   #320
 */

  #020I = 
         [
          "#320 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Title statement
 *   #021A
 *   #200
 */

  TTL_MAKE_TITL =
                 [
                  find_tag(#021A)
                  [TTL_MAKE_TITL_BIS]
                 ].
                ;

  TTL_MAKE_TITL_BIS =
                     [
                      "#200 "
                      TTL_indicator3
                      MULTI_ECRITURE
                      [if set($a) ["$a" SCAN_AT]]
                      [
                       find($*)
                       if (code = "b") ["$a" SCAN_AT]
                       if (code = "n") ["$b" $]
					   if (code = "r") ["$r" $]
                       if (code = "c") ["$c" $]
                       if (code = "f") 
						  [ if ($(1) = "=")
							  [   if ($(2) = " ") ["$d" $(1 to end)]
								else              ["$d= " $( *-1 to end)]
							  ]
								else if ($(1) = " ")
							  [   if ($(2) = "=") ["$d= " $(* to end)]
								else              ["$d= " $(3 to end)]
							  ]
							else ["$d= " $]
						  ]
                       if (code = "d") ["$e" $]
                       if (code = "h") ["$f" $]
                       if (code = "j") ["$g" $]
                       if (code = "l") ["$h" $]
                       if (code = "m") ["$i" $]
                       if (code = "z") ["$z" $]
                      ].
                     ]
                    ;

/*
 *  Main entry - uniform title
 *  #022A
 *  #500
 */

  #022A = ZONE_500 ;

  ZONE_500 =
            "#500 "
            TTL_indicator1
			["$R" $6]
            MULTI_ECRITURE
            ["$8" $3]
            ["$3" $9]
            if set($a) ["$a" SCAN_AT]
            [
             find($*)
             if (code = "f") ["$b" $]
             if (code = "b") ["$h" $]
             if (code = "h") ["$i" $]
             if (code = "g") ["$k" $]
             if (code = "i") ["$l" $]
             if (code = "r") ["$m" $]
             if (code = "p") ["$n" $]
             if (code = "j") ["$q" $]
             if (code = "m") ["$r" $]
             if (code = "n") ["$s" $]
             if (code = "o") ["$u" $]
             if (code = "c") ["$w" $]
            ].
           ;

/*
 *  Collective uniform title
 *  #022C
 *  #501
 */

  #022C = ZONE_501 ;

  ZONE_501 =
            "#501 "
            TTL_indicator3
            MULTI_ECRITURE
            ["$3" $9]
            if set($a) ["$a" SCAN_AT]
            [
             find($*)
             if (code = "f") ["$b" $]
             if (code = "d") ["$e" $]
             if (code = "g") ["$k" $]
             if (code = "r") ["$m" $]
             if (code = "m") ["$r" $]
             if (code = "n") ["$s" $]
             if (code = "o") ["$u" $]
             if (code = "c") ["$w" $]
            ].
           ;

/*
 *  Collective uniform title
 *  #022E
 *  #503
 */

  #022E = ZONE_503 ;

  ZONE_503 =
            "#503 "
            TTL_indicator5
            MULTI_ECRITURE
            if set($a) ["$a" SCAN_AT]
            reset
	    find($a)
            if      ($(2 to 3)= "Tr") [GRTFX]
            else if ($(2 to 3)= "tr") [GRTFX]
            else if ($(2 to 3)= "ve") [GRTFX]
            else if ($(2 to 3)= "Ve") [GRTFX]
            else if ($(2 to 3)= "Sa") [GRTFX]
            else if ($(2 to 3)= "sa") [GRTFX]
            else                      [GRTF2X]
	   ;
   
  /*$a $b $i $e $f $h $k $l $m $n $o $j $d*/ 
  GRTFX =
       [ find($*)
         if (code = "b") ["$b" $]
	 if (code = "j") ["$j" $]
	 if (code = "d") ["$d" $]
	 if (code = "m") ["$m" $]
	 if (code = "n") ["$n" $]
	 if (code = "o") ["$o" $]
       ]. 
        ;

  GRTF2X =
       [ find($*)
         if (code = "b") ["$b" $]
	 if (code = "i") ["$i" $]
	 if (code = "e") ["$e" $]
	 if (code = "f") ["$f" $]
	 if (code = "k") ["$k" $]
	 if (code = "l") ["$l" $]
         if (code = "h") ["$h" $]
	 if (code = "m") ["$m" $]
	 if (code = "n") ["$n" $]
	 if (code = "o") ["$o" $]
	 if (code = "j") ["$j" $]
	 if (code = "d") ["$d" $]
       ].
	 ;

/*
 *   Expanded title
 *   #025@
 *   #532
 */

  #025@ = ZONE_532 ;

  ZONE_532 =
            "#532 "
            TTL_indicator1
            MULTI_ECRITURE
            [if set($a) ["$a" SCAN_AT]]
            ["$z" $z]
           ;

/*
 *   Key-title
 *   #026@
 *   #530
 */

  #026@ = ZONE_530 ;

  ZONE_530 =
            "#530 "
            TTL_indicator3
            MULTI_ECRITURE
            [if set($a) ["$a" SCAN_AT]]
            [
             find($*)
             if (code = "b") ["$b(" $(1 to last) ")"]
             if (code = "c") ["$j" $]
            ].
           ;

/*
 *   Abbreviated title
 *   #026C
 *   #531
 */

  #026C = ZONE_531 ;

  ZONE_531 =
            "#531 "
            TTL_indicator2
            MULTI_ECRITURE
            [ if set($f) ["$a" SCAN_AT]]
            ["$b(" $g(1 to last) ")"]
           ;

/*
 *   #027*
 *   #5XX
 *   (traitement général - voir plus bas)
 */

  TTL_make_5xx =
                [
                 find($*)
                 if (code = "a") [if ($ != "") ["$a" SCAN_AT]]
                 if (code = "b") ["$e" $]
                 if (code = "c") ["$h" $]
                 if (code = "d") ["$i" $]
                 if (code = "e") ["$j" $]
                 if (code = "f") ["$n" $]
                 if (code = "z") ["$z" $]
                ].
               ;

/*
 *   Parallel title proper
 *   #027A
 *   #510
 */

  #027A = ZONE_510 ;

  ZONE_510 =
            "#510 "
            TTL_indicator5
            MULTI_ECRITURE
            TTL_make_5xx
           ;

/*
 *   Cover title
 *   #027F
 *   #512
 */

  #027F = ZONE_512 ;

  ZONE_512 =
            "#512 "
            TTL_indicator5
            MULTI_ECRITURE
            TTL_make_5xx
           ;

/*
 *   Added title-page title
 *   #027G
 *   #513
 */

  #027G = ZONE_513 ;

  ZONE_513 =
            "#513 "
            TTL_indicator5
            MULTI_ECRITURE
            TTL_make_5xx
           ;

/*
 *   Caption title
 *   #027H
 *   #514
 */

  #027H = ZONE_514 ;

  ZONE_514 =
            "#514 "
            TTL_indicator5
            MULTI_ECRITURE
            TTL_make_5xx
           ;

/*
 *   Running title
 *   #027I
 *   #515
 */

  #027I = ZONE_515 ;

  ZONE_515 =
            "#515 "
            TTL_indicator5
            MULTI_ECRITURE
            TTL_make_5xx
           ;

/*
 *   Spine title
 *   #027J
 *   #516
 */

  #027J = ZONE_516 ;

  ZONE_516 =
            "#516 "
            TTL_indicator5
            MULTI_ECRITURE
            TTL_make_5xx
           ;

/*
 *   Other title variants
 *   #027K
 *   #517
 */

  #027K = ZONE_517 ;

  ZONE_517 =
            "#517 "
            TTL_indicator5
            MULTI_ECRITURE
            TTL_make_5xx
           ;

/*
 *   Title in standard modern spelling
 *   #027L
 *   #518
 */

  #027L = ZONE_518 ;

  ZONE_518 =
            "#518 "
            TTL_indicator5
            MULTI_ECRITURE
            TTL_make_5xx
           ;

/*
 *   Additional title
 *   #027M
 *   #540
 */

  #027M = ZONE_540 ;

  ZONE_540 =
            "#540 "
            TTL_indicator5
            MULTI_ECRITURE
            TTL_make_5xx
           ;

/*
 *   Translated title
 *   #027N
 *   #541
 */

  #027N = ZONE_541 ;

  ZONE_541 =
            "#541 "
            TTL_indicator5
            MULTI_ECRITURE
            [ if set($a) ["$a" SCAN_AT]]
            ["$e" $b].
            ["$h" $c].
            ["$i" $d].
            ["$z" $z]
           ;

/*
 *   Section title
 *   #027O
 *   #545
 */

  #027O = ZONE_545 ;

  ZONE_545 =
            "#545 "
            TTL_indicator5
            MULTI_ECRITURE
            [if set($a) ["$a" SCAN_AT]]
           ;

/*
 *   Former title
 *   #027P
 *   #520
 */

  #027P = ZONE_520 ;

  ZONE_520 =
            "#520 "
            TTL_indicator3
            MULTI_ECRITURE
            [ if set($a) ["$a" SCAN_AT]]
            ["$e" $b].
            ["$h" $c].
            ["$i" $d].
            ["$j" $e]
            ["$n" $f]
            ["$x" $x]
           ;

/*
 *  Main entry - personal name
 *  #028A
 *  #700
 */

  #028A = ZONE_700 ;

  ZONE_700 =
            "#700 "
            TTL_indicator3
			["$R" $6]
            MULTI_ECRITURE
            ["$8" $3]
            TTL_personal_name
           ;

  TTL_personal_name =
                     ["$3" $9]
                     "$a" $a
                     ["$d" $l]
                     reset
                     ["$b" $d]
                     reset 
                     if ($S(2)="0") AUTOLD1
                     else AUTOLD2
                     [
					  if ($B != "000")
					  ["$4" $]
					 ].
                    ;

  AUTOLD1 =
           [
            [["$g" $g] reset ["$c" $f]. reset [ "$f" $h ]]
            or
            ["$f" $h]
           ] 
          ;

  AUTOLD2 = 
           ["$g" $g]
           reset
           [
            ["$f" $h]
            reset
            ["$c" $f].
           ]
          ;
     
/*
 *   Added entry - personal name
 *   #028B
 *   #701
 */

  #028B = ZONE_701 ;

  ZONE_701 =
            "#701 "
            TTL_indicator3
			["$R" $6]
            MULTI_ECRITURE
	    ["$8" $3]
            TTL_personal_name
           ;

/*
 *   Added entry - personal name
 *   #028C
 *   #702
 */

  #028C = ZONE_702 ;

  ZONE_702 =
            "#702 "
            TTL_indicator3
			["$R" $6]
            MULTI_ECRITURE
            ["$8" $3]
            TTL_personal_name
           ;

/*
 *  Main entry - family name
 *  #028O
 *  #720
 */

  #028O = ZONE_720 ;

  ZONE_720 =
            "#720 "
            TTL_indicator2
			["$R" $6]
            MULTI_ECRITURE
            ["$8" $3]
            TTL_family_name
           ;

  TTL_family_name =
                   [
                    find($*)
                    if (code = "a") ["$a" $]
					if (code = "c") ["$c" $]
					if (code = "d") ["$d" $]
                    if (code = "f") ["$c" $]
                    if (code = "l") ["$d" $]
                    if (code = "k") ["$9" $]
                    if (code = "h") ["$f" $]
                    if (code = "g") ["$g" $]
                    if (code = "p") ["$p" $]
                    if (code = "9") ["$3" $]
					 ]. 
					if set($B)  if ($ != "000") 	["$4" ($) ["$4" ($B)]. ]	
                  ;

/*
 *   Added entry - family name
 *   #028P
 *   #721
 */

  #028P = ZONE_721 ;

  ZONE_721 =
            "#721 "
            TTL_indicator2
			["$R" $6]
            MULTI_ECRITURE
	    ["$8" $3]
            TTL_family_name
           ;

/*
 *   Added entry - family name
 *   #028Q
 *   #722
 */

  #028Q = ZONE_722 ;

  ZONE_722 =
            "#722 "
            TTL_indicator2
			["$R" $6]
            MULTI_ECRITURE
            ["$8" $3]
            TTL_family_name
           ;

/*
 *  Main entry - corporate name
 *  #029A
 *  #710
 */

  #029A = ZONE_710 ;

  ZONE_710 =
            "#710 "
            TTL_indicator3
			["$R" $6]
            MULTI_ECRITURE
            ["$8" $3]
            TTL_corporate
           ;

  TTL_corporate =
		 ["$3" $9]
		 set($a)["$a" [[$(1 to "@") $(* to last)] or $(2 to last)]]
                 [
                  find($*)
                  if (code = "b") ["$b" $]
                  if (code = "m") ["$g" $]
                  if (code = "n") ["$h" $]
                  if (code = "c") ["$c" $]
                  if (code = "j") ["$d" $]
                  if (code = "h") ["$f" $]
                  if (code = "k") ["$e" $]
                  if (code = "o") ["$p" $]
				 ]. 
					if set($B)  if ($ != "000") 	["$4" ($) ["$4" ($B)]. ]	
                ;     

/*
 *  Main entry - corporate name
 *  #029B
 *  #711
 */

  #029B = ZONE_711 ;

  ZONE_711 =
            reset
            "#711 "
            TTL_indicator3
			["$R" $6]
            MULTI_ECRITURE
            ["$8" $3]
            TTL_corporate
           ;

/*
 *  Main entry - corporate name
 *  #029F
 *  #712
 */

  #029F = ZONE_712 ;

  ZONE_712 =
            "#712 "
            TTL_indicator3
            MULTI_ECRITURE
            ["$8" $3]
            TTL_corporate
           ;
   
/*
 *   Dates of publication and/or volume
 *   #031@
 *   #207
 */

  #031@ = DATE_DE_PUBLICATION_PS ;
 
  DATE_DE_PUBLICATION_PS =
                          "#207 "
                          TTL_indicator3
                          MULTI_ECRITURE
                          [
                           find($*)
                           if (code = "a") ["$a" $]
                           if (code = "z") ["$z" $]
                          ].
                        ;

/*
 *   Edition statement
 *   #032@
 *   #205
 */

  #032@ = EDITION ;

  EDITION = 
           "#205 "
           TTL_indicator2
           MULTI_ECRITURE
           [
            find($*)
            if (code = "a") ["$a" $]
            if (code = "b") ["$b" $]
   			if (code = "k") 
				  [ if ($(1) = "=")
					  [   if ($(2) = " ") ["$d" $(1 to end)]
						else              ["$d= " $( *-1 to end)]
					  ]
						else if ($(1) = " ")
					  [   if ($(2) = "=") ["$d= " $(* to end)]
						else              ["$d= " $(3 to end)]
					  ]
					else ["$d= " $]
				  ]
            if (code = "c") ["$f" $]
            if (code = "d") ["$g" $]
           ].
          ;

/*
 *   Publication, distribution, etc. (Imprint)
 *   #033A
 *   #210
 */

  #033A = ADRESSE_BIBLIOGRAPHIQUE ;

  ADRESSE_BIBLIOGRAPHIQUE =
                           "#210 "
                           TTL_indicator7
                           MULTI_ECRITURE
                           [
                            find($*)
                            if (code = "p") ["$a" $]
                            if (code = "a") ["$b" $]
                            if (code = "n") ["$c" $]
                            if (code = "d") ["$d" $]
                            if (code = "e") ["$e" $]
                            if (code = "f") ["$f" $]
                            if (code = "g") ["$g" $]
                            if (code = "h") ["$h" $]
							if (code = "r") ["$r" $]
							if (code = "s") ["$s" $]
                           ].
                          ;
						  


/* #033B = ZONE_214	;*/
 
 #033B = 
	if set($S)
	[if ($(2) = "4") ZONE_214_4
	else ZONE_214
	]
	;
	
 ZONE_214_4 = 
	reset
	if set($d)
	["#214  4" "$d" $]
	
	["#214  4" "$d" $d]
	;

 ZONE_214 = 
	reset
   "#214 "
   TTL_indicator8
   [
   find($*)
   if (code = "P") ["$P" $]
   ]
   MULTI_ECRITURE
   reset
       [
       find($*)
       if (code = "a") ["$a" $]
       if (code = "b") ["$b" $]
       if (code = "c") ["$c" $]
       if (code = "d") ["$d" $]
       if (code = "r") ["$r" $]
       if (code = "s") ["$s" $]
       ].
       ;

MAKE_ALL_210 =
   /* Clear the list of scripts that have been printed */
   set_var("printed-scripts", " ")
   /* Walk through the 033B fields in the record */
   reset_tag
   [
     find_tag(#033B)
     /* Put the current script into a variable
      * If no $U then script is latin
      */
     set_var("script", $U or "ba")
     if (var("script") in var("printed-scripts"))
       /* This script has already been printed: skip 033B */
       success
     else
    /* This script has NOT yet been printed */
     [
       /* Print all 033B tags with the current script to make one 210 */
       view(*,
         select_tag("",
                    0 = 0,
                    MAKE_ONE_210,
                    ( set($U) & (var("script") = $) ) | (!set($U) & (var("script") = "ba")),
                    0 = 0 )
       )
       /* Add the current script to the list of printed scripts */
       set_var("printed-scripts", var("printed-scripts") var("script") " ")
     ]
   ].

;		
	
MAKE_ONE_210 =
  reset_tag
  /* Create 210 from 1st 033B */
  [
    find_tag(#033B)
    MAKE_210_FROM_033B
  ]
  /* Append subsequent 033B's to 210 */
  [
    find_tag(#033B)
    APPEND_033B_TO_210
  ].
;	
	
	
	MAKE_210_FROM_033B =
/* Make a new 210 field from a 033B */
	if ($S(2) = "0")
		[	
				["#210 " ]
				[indic_219] 
				[MULTI_ECRITURE reset] 
				[Z_219_INDC_0_ou_1]
		]
	else if ($(2) ="1")
	[
		[  ["#210 " ]
		   [ indic_219]
		   [MULTI_ECRITURE reset]
		   [Z_219_INDC_0_ou_1]
		]
	]
	else if ($(2) ="2")
		[
			[  ["#210 " ]
				[ indic_219]
				[MULTI_ECRITURE reset]
				[Z_219_INDC_2]
			]
		]
	else if ($(2) ="3")
		[
	
			[  ["#210 " ]
				[ indic_219]
				[MULTI_ECRITURE reset]
				[Z_219_INDC_3]
			]
		]
	else if ($(2) ="\#")
		[
	
			[   ["#210 " ]
				[ indic_219]
				[MULTI_ECRITURE reset]
				[Z_219_INDC_D]
			]
		]		
	else if ($(2) = "4")
	/*	[APPEND_033B_TO_210]*/
		fatal

;	
	
APPEND_033B_TO_210 =
/* Append a 033B to an existing 210 */
[
		if ($S(2) = "0") 
			[
						["#210 " ]
						[ indic_219]
						[reset MULTI_ECRITURE reset]
						[Z_219_INDC_0_ou_1]
			] 
			else if ($(2) = "1") 
								[Z_219_INDC_0_ou_1]
			else if ($(2) = "2")
								[Z_219_INDC_2] 
			else if ($(2) = "3") 
								 [ Z_219_INDC_3]
			else if ($(2) = "\#") 
								[["#210 " ] [ indic_219] [reset MULTI_ECRITURE reset] [Z_219_INDC_D]]
			else if ($(2) = "4") 
								[Z_219_INDC_4]
]


;	
	

	
/*pour traiter en une fois les deux indicateurs attention 2 tables !*/
indic_219 =
	[ indic_219_1($(1)) indic_219_2($(2))]
;		

/*section du tri export selon indicateur 2*/
	
	Z_219_INDC_0_ou_1 =
	[
	find($*)
		 if (code = "a") ["$a" $]
		 if (code = "b") ["$b" $]
		 if (code = "c") ["$c" $]
		 if (code = "d") ["$d" $]
	].
	;
	
	Z_219_INDC_2 =
	[
	find($*)
		 if (code = "a") ["$a" $]
		 if (code = "b") ["$b" $]
		 if (code = "c") ["$c" $ " [diffusion/distribution]"]
		 if (code = "d") ["$d" $]
	].
		;
		
	Z_219_INDC_3 =
	[
	find($*)
		 if (code = "a") ["$e" $]
		 if (code = "b") ["$f" $]
		 if (code = "c") ["$g" $]
		 if (code = "d") ["$h" $]
	].
		;
		
	Z_219_INDC_4 =
	[ 
	find($*)
		 if (code = "i") ["$dcopyright " $]
		 if (code = "p") ["$dP " $]
	].
		;
		
	Z_219_INDC_D =
	[
	find($*)
		if (code = "r") ["$r" $]
		if (code = "s") ["$s" $]
	].	
	;
	
	
 /* fin de la zone 219*/
 

						  
/*
 *   Physical description
 *   #034R
 *   #215
 */
     #034R =
            [
             "#215 "
             TTL_indicator2
             [find($*)
              if (code = "a") ["$a" $]
              if (code = "c") ["$c" $]
              if (code = "d") ["$d" $]
              if (code = "e") ["$e" $]
             ].
            ]
           ;

/*
 *   Printed music specific statement
 *   #035A
 *   #208
 */

  #035A = MUSIQUE_IMPRIMEE ;

  MUSIQUE_IMPRIMEE =
                    "#208 "
                    TTL_indicator2
                    MULTI_ECRITURE
					[
                      ["$a" $a]
						  [ if ($d(1) = "=")
							  [ if ($(2) = " ") ["$d" $(1 to end)]
								else           ["$d= " $(*-1 to end)]
							  ]
								else if ($(1) = " ")
							  [   if ($(2) = "=") ["$d= " $(* to end)]
								else              ["$d= " $(3 to end)]
							  ]
							else ["$d= " $]
						  ].
                     ]
                   ;

/*
 *   Electronic resource characteristics
 *   #035B
 *   #230
 */

  #035B =
         [
          "#230 "
          TTL_indicator2
          ["$a" $a]
         ]
        ;

/*
 *   Mathematical data
 *   #035E
 *   #206
 */

  #035E = DONNEES_MATHEMATIQUES ;
  
  DONNEES_MATHEMATIQUES =
                         "#206 "
                         [$S(1) " "]
                         MULTI_ECRITURE
                         ["$a" $a] ["$b" $b].
                         ["$c" $c] ["$d" $d] ["$e" $e] ["$f" $f]
                        ;

/*
 * #036*
 * #4XX
 * (traitement général, voir plus bas)
 */

  TTL_make_4xx =
                ["$9" $x]
                ["$0" $9]
                reset
                [
                 find($*)
                 if (code = "c") ["$a" $]
                 if (code = "a") ["$t" SCAN_AT]
                 if (code = "d") ["$h" $]
                 if (code = "e") ["$i" $]
                 if (code = "N") ["$b" $]
                 if (code = "f") ["$l" SCAN_AT]
                 if (code = "q") ["$f" $]
                 if (code = "r") ["$g" $]
                 if (code = "o") ["$e" $]
                 if (code = "i") ["$c" $]
                 if (code = "k") ["$n" $]
                 if (code = "j") ["$d" $]
                 if (code = "p") ["$p" $]
                 if (code = "w") ["$s" SCAN_AT]
                 if (code = "b") ["$o" $]
                 if (code = "u") ["$u" $]
                 if (code = "n") ["$x" $] 
                 if (code = "y") ["$y" $]               
                 if (code = "l") ["$v" $]
                ].
               ;

/*
 * #036D
 * #461
 */

  #036D = ZONE_461 ;

  ZONE_461 =
            "#461 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;

/*
 *   Series statement/Title entry
 * #036E
 * #225
 */

  #036E = COLLECTION ;

  COLLECTION =
              "#225 "
              TTL_indicator3
              MULTI_ECRITURE
              [ if set($a) ["$a" SCAN_AT]]
              [
               find($*)
               if (code = "f") 
			   [ if ($(1) = "=")
					  [   if ($(2) = " ") ["$d" $(1 to end)]
						else              ["$d= " $( *-1 to end)]
					  ]
						else if ($(1) = " ")
					  [   if ($(2) = "=") ["$d= " $(* to end)]
						else              ["$d= " $(3 to end)]
					  ]
					else ["$d= " $]
				  ]
               if (code = "i") ["$e" $]
               if (code = "c") ["$f" $]
               if (code = "d") ["$h" $]
               if (code = "e") ["$i" $]
               if (code = "l") ["$v" $]
               if (code = "n") ["$x" $]
               if (code = "z") ["$z" $]
              ].
             ;

/*
 * #036F  036F/02   036F/03
 * #410   412       413     
 */

  #036F = ZONES_410_412_413 ;

  ZONES_410_412_413 =
                     reset
                     [
                      if (occurrence = 0)
                         [
                          "#410 "
                          TTL_indicator4
                          MULTI_ECRITURE
                          TTL_make_4xx
                         ]
                      else
                         [
                          "#41" tag_code(7,1) " "
                          TTL_indicator4
                          MULTI_ECRITURE
                          TTL_make_4xx
                         ]
                     ]
                    ;

/*
 * #036I/01
 * #421
 */

  #036I/01 = ZONE_421 ;

  ZONE_421 =
            "#421 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;

/*
 * #036I/02
 * #422
 */

  #036I/02 = ZONE_422 ;

  ZONE_422 =
            "#422 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
          ;

/*
 * #036I/03
 * #423
 */

  #036I/03 = ZONE_423 ;

  ZONE_423 =
            "#423 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;

/*
 * #036I/04
 * #424
 */

  #036I/04 = ZONE_424 ;

  ZONE_424 =
            "#424 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;

/*
 * #036I/05
 * #425
 */

  #036I/05 = ZONE_425 ;

  ZONE_425 =
            "#425 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;

/*
 * #036J/0X
 * #43X
 */

  #036J = ZONES_43X ;

  ZONES_43X =
             [
              if (occurrence = 0)
                 [
                  "#430 "
                  TTL_indicator4
                  MULTI_ECRITURE
                  TTL_make_4xx
                 ]
              else
                 [
                  "#43" tag_code(7,1) " "
                  TTL_indicator4
                  MULTI_ECRITURE
                  TTL_make_4xx
                 ]
             ]
            ;

/*
 * #036K/0X
 * #44X
 */

  #036K = ZONES_44X ;

  ZONES_44X =
             [
              if (occurrence = 0)
                 [
                  "#440 "
                  TTL_indicator4
                  MULTI_ECRITURE
                  TTL_make_4xx
                 ]
              else
                 [
                  "#44" tag_code(7,1) " "
                  TTL_indicator4
                  MULTI_ECRITURE
                  TTL_make_4xx
                 ]
             ]
            ;

/*
 * #036L/01
 * #451
 */

  #036L/01 = ZONE_451 ;

  ZONE_451 =
            "#451 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;

/*
 * #036L/02
 * #452
 */

  #036L/02 = ZONE_452 ;

  ZONE_452 =
            "#452 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;

/*
 * #036L/03
 * #453
 */

  #036L/03 = ZONE_453 ;

  ZONE_453 =
            "#453 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;

/*
 * #036L/04
 * #454
 */

  #036L/04 = ZONE_454 ;

  ZONE_454 =
            "#454 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;

/*
 * #036L/05
 * #455
 */

  #036L/05 = ZONE_455 ;

  ZONE_455 =
            "#455 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;

/*
 * #036L/06
 * #456
 */

  #036L/06 = ZONE_456 ;

  ZONE_456 =
            "#456 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;

/*
 * #036M/01
 * #461
 */

  #036M/01 = ZONE_461 ;

/*
 * #036M/03
 * #463
 */

  #036M/03 = ZONE_463 ;

  ZONE_463 =
            "#463 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;

/*
 * #036M/04
 * #464
 */

  #036M/04 = ZONE_464 ;

  ZONE_464 =
            "#464 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;

/*
 * #036N
 * #470
 */

  #036N = ZONE_470 ;

  ZONE_470 =
            "#470 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;

/*
 * #036O/01
 * #481
 */

  #036O/01 = ZONE_481 ;

  ZONE_481 =
            "#481 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;

/*
 * #036O/02
 * #482
 */

  #036O/02 = ZONE_482 ;

  ZONE_482 =
            "#482 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;

/*
 * #036O/03
 * #488
 */

  #036O/03 = ZONE_488 ;

  ZONE_488 =
            "#488 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;

/*
 * #036O/08
 * #488
 */

  #036O/08 = ZONE_488 ;

/*
 * #036P
 * #604
 */

  #036P = ZONE_604 ;

  ZONE_604 =
            "#604 "
            TTL_indicator2
			["$R" $6]
            MULTI_ECRITURE
            ["$3" $9]
            [ if set($c) ["$a" $]]
            [ if set($a) ["$t" SCAN_AT]]
            [
             find($*)
             if (code = "X") SOUS_ZONE_X
             if (code = "Y") SOUS_ZONE_Y
             if (code = "Z") SOUS_ZONE_Z
             if (code = "2") /*["$2" $]*/
					[
					 if ($(1) = "r") ["$2rameau"]
					 else ["$2" $]
					] 
             if (code = "9") ["$3" $]
            ].
           ;

/*
 * #036Q
 * #411
 */

  #036Q = ZONE_411 ;

  ZONE_411 =
            "#411 "
            TTL_indicator4
            MULTI_ECRITURE
            TTL_make_4xx
           ;
		   
/*link_to_work_record
 * #039M
 * #579
*/
		   
  #039M =
  "#579   "
  ["$1" $1]
  ["$3" $9]
  ;

 /*
  *  Subject added entry - personal name
  *  #040@
  *  #600
  */
  

  #040@ = ZONE_600 ;

  ZONE_600 =
            "#600 "
	    TTL_indicator3
		["$R" $6]
            MULTI_ECRITURE
            ["$8" $3]
	    TTL_600
            if set($a)
               [
                find($*)
                if (code = "X") SOUS_ZONE_X
                if (code = "Y") SOUS_ZONE_Y
                if (code = "Z") SOUS_ZONE_Z
                if (code = "2") /*["$2" $]*/
					[
					 if ($(1) = "r") ["$2rameau"]
					 else ["$2" $]
					] 
                if (code = "9") ["$3" $]
               ].
           ;

  TTL_600 =    
           [
            find($*)
            if       (code = "9")
                     [
                      "$3" $
                      reset
                      ["$a" $a]
                      reset
                      ["$d" $l]
                      reset
                      ["$b" $d]
                      reset 
                      if ($S(2)="0") AUTOLD1
                      else AUTOLD2
                     ]
             else if (code = "a")
                     [
                      "$a" $
                      reset
                      ["$d" $l]
                      reset
                      ["$b" $d]
                      reset 
                      if ($S(2)="0") AUTOLD1
                      else AUTOLD2
                     ]
             else  
                     [
                      reset
                      "$a" $a
                      reset
                      ["$d" $l]
                      reset
                      ["$b" $d]
                      reset 
                      if ($S(2)="0") AUTOLD1
                      else AUTOLD2
                     ]
            ]  
           ; 

/*
 *  Subject added entry - family name
 *  #040A
 *  #602
 */

  #040A = ZONE_602 ;

  ZONE_602 =
            "#602 "
            TTL_indicator2
			["$R" $6]
            MULTI_ECRITURE
            ["$8" $3]
            [
             find($*)
             if (code = "a") ["$a" $]
			 if (code = "c") ["$c" $]
			 if (code = "d") ["$d" $]
             if (code = "f") ["$c" $]
             if (code = "l") ["$d" $]
             if (code = "k") ["$9" $]
             if (code = "h") ["$f" $]
             if (code = "y") ["$t" $]
             if (code = "X") SOUS_ZONE_X
             if (code = "Y") SOUS_ZONE_Y                
             if (code = "Z") SOUS_ZONE_Z
             if (code = "2") /*["$2" $]*/
					[
					 if ($(1) = "r") ["$2rameau"]
					 else ["$2" $]
					] 
             if (code = "9") ["$3" $]
            ].
           ;

/*
 *  Subject added entry - corporate name
 *  #041@
 *  #601
 */

  #041@ = ZONE_601 ;

  ZONE_601 =
            "#601 "
            TTL_indicator3
			["$R" $6]
            MULTI_ECRITURE
            ["$8" $3]
            [
             find($*)
             if (code = "a") SOUS_ZONE_a
             if (code = "b") ["$b" $]
             if (code = "c") ["$c" $]
             if (code = "j") ["$d" $]
             if (code = "k") ["$e" $]
             if (code = "h") ["$f" $]
             if (code = "m") ["$g" $]
             if (code = "n") ["$h" $]
             if (code = "y") ["$t" $]
             if (code = "X") SOUS_ZONE_X
             if (code = "Y") SOUS_ZONE_Y
             if (code = "Z") SOUS_ZONE_Z
             if (code = "2") /*["$2" $]*/
					[
					 if ($(1) = "r") ["$2rameau"]
					 else ["$2" $]
					] 
             if (code = "9") ["$3" $]
           ].
          ;

/*
 * #042C
 * #605
 */

  #042C = ZONE_605 ;

  ZONE_605 =
            "#605 "
            TTL_indicator2
			["$R" $6]
            MULTI_ECRITURE
            ["$8" $3]
            ["$3" $9]
            [if set($a) ["$a" SCAN_AT]]
            [
             find($*)
             if (code = "b") ["$h" $]
             if (code = "h") ["$i" $]
             if (code = "g") ["$k" $]
             if (code = "i") ["$l" $]
             if (code = "r") ["$m" $]
             if (code = "p") ["$n" $]
             if (code = "j") ["$q" $]
             if (code = "X") SOUS_ZONE_X
             if (code = "Y") SOUS_ZONE_Y
             if (code = "Z") SOUS_ZONE_Z
             if (code = "9") ["$3" $]
             if (code = "2") /*["$2" $]*/
					[
					 if ($(1) = "r") ["$2rameau"]
					 else ["$2" $]
					] 
            ].
           ;

/*
 * Trademark as subject
 * #044@ 
 * #616
 */

  #044@ = ZONE_616 ;

  ZONE_616 =
            "#616 "
            TTL_indicator2
			["$R" $6]
            MULTI_ECRITURE
            [
             find($*)
             if (code = "a") ["$a" $]
             if (code = "h") ["$f" $]
             if (code = "c") ["$c" $]
             if (code = "X") SOUS_ZONE_X
             if (code = "Y") SOUS_ZONE_Y
             if (code = "Z") SOUS_ZONE_Z
             if (code = "9") ["$3" $]
             if (code = "2") /*["$2" $]*/
					[
					 if ($(1) = "r") ["$2rameau"]
					 else ["$2" $]
					] 
            ].
           ;

/*
 * Trademark as access point
 * #044D 
 * #716
 */

  #044D = ZONE_716 ;

  ZONE_716 =
            "#716 "
            TTL_indicator2
			["$R" $6]
            MULTI_ECRITURE
            ["$3" $9]
            [
             find($*)
             if (code = "a") ["$a" $]
             if (code = "h") ["$f" $]
             if (code = "c") ["$c" $]
            ].
           ;

/*
 *   Precis
 *   #044E
 *   #670
 */

  #044E = 
         [
          "#670 "
          TTL_indicator2
          [
           find($*)
           if (code = "b") ["$b" $]
           if (code = "a") ["$c" $]
           if (code = "e") ["$e" $]
           if (code = "z") ["$z" $]
          ].
         ]
        ;

  TTL_subject_name =
                    [
                     find($*)
                     if (code = "a") SOUS_ZONE_a
                     if (code = "X") SOUS_ZONE_X
                     if (code = "Y") SOUS_ZONE_Y
                     if (code = "Z") SOUS_ZONE_Z
                     if (code = "2") /*["$2" $]*/
					[
					 if ($(1) = "r") ["$2rameau"]
					 else ["$2" $]
					] 
                     if (code = "9") ["$3" $]
                    ].
                   ;

/*
 *   Subject added entry - rameau
 *   #044Q
 *   #606
 */

  #044Q = 
         [
          "#606 "
          TTL_indicator3
		  ["$R" $6]
          ["$8" $3]
          TTL_subject_name
         ]
        ;

/*
 *   Geographical name used as subject
 *   #044R
 *   #607
 */

  #044R = ZONE_607 ;

  ZONE_607 =
            "#607 "
            TTL_indicator2
			["$R" $6]
            MULTI_ECRITURE
            ["$8" $3]
            TTL_subject_name
           ;

/*
 *   Form, genre or physical characteristics heading
 *   #044T
 *   #608
 */

  #044T = 
         [
          "#608   "
          TTL_subject_name
          reset
          ["$9" $A]
         ]
        ;

/*
 *   Subject heading
 *   #044U
 *   #610
 */

  #044U = 
         [
          "#610 "
          TTL_indicator3
          ["$a" $a].
         ]
        ;

/*
 *  Place access
 *  #044W
 *  #620
 */

  #044W = ZONE_620 ;

 ZONE_620 =
            reset
            "#620 "
            [reset TTL_indicator3]
			MULTI_ECRITURE
            [find($*)
             if (code = "o") ["$o" $]
			 if (code = "a") ["$a" $]
             if (code = "b") ["$b" $]
             if (code = "c") ["$c" $]
             if (code = "d") ["$d" $]
			 if (code = "e") ["$e" $]
			 if (code = "k") ["$k" $]
			 if (code = "m") ["$m" $]
			 if (code = "n") ["$n" $]
			 if (code = "f") ["$f" $]
			 if (code = "i") ["$i" $]
			 if (code = "g") ["$g" $]
			 if (code = "h") ["$h" $]
			]. 
			resequence ("$o", "$a", "$b", "$c", "$d", "$e", "$k", "$m", "$n", "$f", "$i", "$g", "$h")
           ;

/*
 *   Library of Congress Classification
 *   #045A
 *   #680
 */

  #045A = 
         [ 
          "#680 "
          TTL_indicator2
          ["$3" $0]
          ["$a" $a]
          ["$b" $b]
         ]
        ;
		
  #045B = 
		 [ 
          "#309 "
          TTL_indicator2
          ["$a" $a]
          ["$b" $b]
		  ["$c" $c]
		  ["$d" $d]
         ]
        ;

/*
 *   Dewey Decimal Classification
 *   #045F
 *   #676
 */

  #045F = 
         [
          "#676 "
          TTL_indicator2
          ["$3" $0]
          ["$a" $a]
          ["$v" $v]
          ["$z" $z]
         ]
        ;

/*
 *   Universal Decimal Classification
 *   #045G
 *   #675
 */

  #045G = 
         [
          "#675 "
          TTL_indicator2
          ["$3" $0]
          ["$a" $a]
          ["$v" $v]
          ["$z" $z]
         ]
        ;

/*
 *  Subject category
 *  #045H
 *  #615
 */

  #045H = 
         [
          "#615 "
          TTL_indicator2
          [
           find($*)
           if (code = "n") ["$a" $]
           if (code = "b") ["$m" $]
           if (code = "a") ["$n" $]
           if (code = "X") ["$x" $]
           if (code = "2") /*["$2" $]*/
					[
					 if ($(1) = "r") ["$2rameau"]
					 else ["$2" $]
					] 
           if (code = "9") ["$3" $]
          ].
         ]
        ;

/*
 *  Geographic area code
 *  #045I
 *  #660
 */

  #045I = 
         [
          "#660 "
          TTL_indicator2
          ["$a" $a]
         ]
        ;

/*
 *  Time period code
 *  #045V
 *  #661
 */

  #045V = 
         [
          "#661 "
          TTL_indicator2
          ["$a" $a]
         ]
        ;

/*
 *   Other classification numbers
 *   #045W
 *   #686
 */

  #045W = 
         [
          "#686 "
          TTL_indicator2
          ["$3" $0]
          [
           find($*)
           if (code = "a") ["$a" $]
           if (code = "b") ["$b" $]
           if (code = "c") ["$c" $]
           if (code = "v") ["$v" $]
           if (code = "2") /*["$2" $]*/
					[
					 if ($(1) = "r") ["$2rameau"]
					 else ["$2" $]
					] 
          ].
         ]
        ;

/*
 *   General note
 *   #037A
 *   #300
 */

  #037A =
         [
          "#300 "
          TTL_indicator2
          SEQ300
         ]
        ;

  SEQ300 =
          ["$a" $a]
          ["$u" $u]
          ["$2" $2]
         ; 

/*
 *   Notes pertaining to Identification numbers
 *   #046A
 *   #301
 */

  #046A =
         [
          "#301 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Notes pertaining to Coded information
 *   #046B
 *   #302
 */

  #046B =
         [
          "#302 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Notes pertaining descriptive information
 *   #046C
 *   #303
 */

  #046C =
         [
          "#303 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Notes pertaining to title and statement of responsibility
 *   #046D
 *   #304
 */

  #046D =
         [
          "#304 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Notes pertaining to edition and bibliographic history
 *   #046E
 *   #305
 */

  #046E =
         [
          "#305 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Notes pertaining to publication, distribution, etc.
 *   #046F
 *   #306
 */

  #046F =
         [
          "#306 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Notes pertaining to physical description
 *   #046G
 *   #307
 */

  #046G =
         [
          "#307 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Notes pertaining to series
 *   #046H
 *   #308
 */

  #046H =
         [
          "#308 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Notes pertaining to binding and availability
 *   #046I
 *   #310
 */

  #046I =
         [
          "#310 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Notes pertaining to linking fields
 *   #046J
 *   #311
 */

  #046J =
         [
          "#311 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Notes pertaining to related titles
 *   #046K
 *   #312
 */

  #046K =
         [
          "#312 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Notes pertaining to subject access
 *   #046L
 *   #313
 */

  #046L =
         [
          "#313 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Notes pertaining to intellectual responsibility
 *   #046M
 *   #314
 */

  #046M =
         [
          "#314 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Notes pertaining to material specific information
 *   #046N
 *   #315
 */

  #046N =
         [
          "#315 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Note on separate published indexes and citations
 *   #046O
 *   #321
 */

  #046O =
         [
          "#321 "
          TTL_indicator3
          ["$a" $a]
          ["$b" $b]
          ["$c" $c]
          ["$x" $x]
          ["$u" $u]
          ["$2" $2]
         ]
        ;

/*
 *   Credits note (projected and video material and sound recordings)
 *   #046P
 *   #322
 */

  #046P =
         [
          "#322 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Cast note (projected and video material and sound recordings)
 *   #046Q
 *   #323
 */

  #046Q =
         [
          "#323 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Original version note
 *   #046R
 *   #324
 */

  #046R =
         [
          "#324 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Reproduction note
 *   #046S
 *   #325
 */

  #046S =
         [
          "#325 1 "
          SEQ300
         ]
        ;

/*
 *   Preferred citation of described materials
 *   #046T
 *   #332
 */

  #046T =
         [
          "#332 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Users/intended audience note
 *   #046U
 *   #333
 */

  #046U =
         [
          "#333 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Type of electronic resource
 *   #046V
 *   #336
 */

  #046V =
         [
          "#336 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Details note (computer files)
 *   #046W
 *   #337
 */

  #046W =
         [
          "#337 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Acquisition information
 *   #046X
 *   #345
 */

  #046X =
         [
          "#345 "
          TTL_indicator2
          [
           find($*)
           if (code = "a") ["$a" $]
           if (code = "b") ["$b" $]
           if (code = "c") ["$c" $]
           if (code = "d") ["$d" $]
           if (code = "u") ["$u" $]
           if (code = "2") ["$2" $]
          ].
         ]
        ;

/*
 *   Note sur l'exemplaire
 *   #046Y
 *   #316
 */

  #046Y =
         [
          "#316 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Note sur la provenance
 *   #046Z
 *   #317
 */

  #046Z =
         [
          "#317 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   General cataloguers note
 *   #047A
 *   #830
 */

  #047A =
       if set($b)
          [  target(reset_tag)
             [      if target(!find(#801$b)) target(reset)
               else if ($ = target($)) fatal
               else    success
             ].
             if ($ = target($)) fatal
             reset
             "#801  "
             if ($S(2) = "\#") "|"
             else $(2)
             [  [  ["$a" $a]  ["$b" $b]  ["$c" $c]  ["$g" $g]. ["$h" $h] ["$2" $2] ]
                or
                fatal
             ]
         ]
      else fatal
      ;

/*
 *   ISSN Bureau
 *   #047B
 *   #802
 */

  #047B = 
         [
          "#802 "
          TTL_indicator2
          ["$a" $a]
         ]
        ;

  /*830*/
    #047C = 
         [
          "#830 "
          TTL_indicator2
          ["$a" $a]
         ]
        ;
		
/*
 *   Formatted contents note
 *   #047D
 *   #327
 */

  #047D = NOTE_DE_CONTENU ;

  NOTE_DE_CONTENU =
                   "#327 "
                   TTL_indicator6
                   MULTI_ECRITURE
                   ["$a" $a].
                   ["$u" $u]
                   ["$2" $2]
                  ;
  
  #047E =
		"#339 "
		TTL_indicator2
		["$a" $a]
		["$d" $d]
		;
		
				  
/*
 *   Table of contents
 *   #047F
 *   #359
 */

  #047F = TABLE_DES_MATIERES ;

  TABLE_DES_MATIERES =
                      "#359 "
                      TTL_indicator3
                      MULTI_ECRITURE
                      ["$v" $l]
                      ["$a" $a] 
                      stop("bcdefghip") 
                          [
                           ["$b" $b].
                           ["$c" $c].
                           ["$d" $d].
                           ["$e" $e].
                           ["$f" $f]. 
                           ["$g" $g].
                           ["$h" $h].
                           ["$i" $i].
                           ["$p" $p].
                          ].
                      ["$u" $u]
                      ["$2" $2]
                     ;

/*
 *   Summary or abstract
 *   #047P
 *   #330
 */

  #047P =  
         [
          "#330 "
          TTL_indicator2
          SEQ300
         ]
        ;

/*
 *   Technical details access
 *   #048A
 *   #626
 */

  #048A =  
         [
          "#626 "
          TTL_indicator2
          ["$a" $a]
          ["$b" $b]
          ["$c" $c]
         ]
        ;

/*
 * Originating source (shared record)
 * #001B
 * #801
 */

  TTL_MAKE_DATE_801 =
                     target(
                            if !set(#005$0) "00000000"
                            else            [$(1 for 8)]
                           )
                    ;

  TTL_MAKE_LEV0_801 =
                     if !present("#801")
                      [   "#801  3$aFR$bAbes$c"
                          TTL_MAKE_DATE_801
                          "$gAFNOR"
                      ] 
                    ;

  MAKE_898 =
            if set(#101@$a)
               [
                "#898   "
                ["$a" $]
               ]
           ;

/*
 *   Local production number
 *   #107F
 *   #L035
 */

  #107F = 
         [
          "#035 "
          TTL_indicator2
          ["$1" target(reset_tag #898$a)]
          [ 
           if ($0(1 for 6)="DYNIX-")
              [
               reset
               if ($0(7 for 4)="BUPF") ["$aDYNIX_BUPF_" $(12 to last)]
               else                    ["$aDYNIX_" $(7 for 5) "_" $(13 to last)]
              ]
           else [reset "$a" $0]
          ]
         ]
        ;

/*
 *   Fingerprint
 *   #109D
 *   #L012
 */

  #109D = 
         [
          "#012 "
          TTL_indicator2
          ["$1" target(reset_tag #898$a)]
          ["$a" $a]
          ["$2" $2]
         ]
        ;

 #136C = 
         [
          "#300 " "  "
          ["$1" target(reset_tag #898$a)]
          ["$a" $a]
         ]
        ;

/*
 *   Note relating to copy in hand
 *   #137B
 *   #316
 */

  #137B =  
         [
          "#316 " "  "
          ["$1" target(reset_tag #898$a)]
          ["$a" $a]
         ]
        ;

/*
 *   Provenance note
 *   #137C
 *   #317
 */

  #137C =  
         [
          "#317 "
          TTL_indicator2
          ["$1" target(reset_tag #898$a)]
          SEQ300
         ]
        ;

/*
 *   Action note
 *   #137D
 *   #318
 */

  #137D =  
         [
          "#318 "
          TTL_indicator2
          ["$1" target(reset_tag #898$a)]
          [
           find($*)
           if (code = "a") ["$a" $]
           if (code = "b") ["$b" $]
           if (code = "c") ["$c" $]
           if (code = "d") ["$d" $]
           if (code = "e") ["$e" $]
           if (code = "f") ["$f" $]
           if (code = "h") ["$h" $]
           if (code = "i") ["$i" $]
           if (code = "j") ["$j" $]
           if (code = "k") ["$k" $]
           if (code = "l") ["$l" $]
           if (code = "n") ["$n" $]
           if (code = "o") ["$o" $]
           if (code = "p") ["$p" $]
           if (code = "r") ["$r" $]
           if (code = "u") ["$u" $]
           if (code = "2") ["$2" $]
          ].
         ]
        ;

/*
 *   Access note and reprod. note
 *   #137E
 *   #319
 */

  #137E =
         [
          "#319 "
          TTL_indicator2
          ["$1" target(reset_tag #898$a)]
          [
           find($*)
           if (code = "a") ["$a" $]
           if (code = "b") ["$b" $]
           if (code = "c") ["$c" $]
           if (code = "d") ["$d" $]
           if (code = "x") ["$x" $]
           if (code = "u") ["$u" $]
           if (code = "2") ["$2" $]
          ].
         ]
        ;
		
 /*   Local subject term
 *   #140@
 *   #600
 */
 
	#140@ =
		"#600 "
	    TTL_indicator3
			["$1" target(reset_tag #898$a)]
            ["$8" $3]
	    TTL_600
            if set($a)
               [
                find($*)
                if (code = "X") SOUS_ZONE_X
                if (code = "Y") SOUS_ZONE_Y
                if (code = "Z") SOUS_ZONE_Z
                if (code = "2") /*["$2" $]*/
					[
					 if ($(1) = "r") ["$2rameau"]
					 else ["$2" $]
					] 
                if (code = "9") ["$3" $]
               ].
           ;
		   
	#141@ =
	        "#601 "
            TTL_indicator3
			["$1" target(reset_tag #898$a)]
            ["$8" $3]
            [
             find($*)
             if (code = "a") SOUS_ZONE_a
             if (code = "b") ["$b" $]
             if (code = "c") ["$c" $]
             if (code = "j") ["$d" $]
             if (code = "k") ["$e" $]
             if (code = "h") ["$f" $]
             if (code = "m") ["$g" $]
             if (code = "n") ["$h" $]
             if (code = "y") ["$t" $]
             if (code = "X") SOUS_ZONE_X
             if (code = "Y") SOUS_ZONE_Y
             if (code = "Z") SOUS_ZONE_Z
             if (code = "2") /*["$2" $]*/
					[
					 if ($(1) = "r") ["$2rameau"]
					 else ["$2" $]
					] 
             if (code = "9") ["$3" $]
           ].
          ;
		  
 #140A =
			"#602 "
            TTL_indicator2
			["$1" target(reset_tag #898$a)]
            ["$8" $3]
            [
             find($*)
             if (code = "a") ["$a" $]
             if (code = "f") ["$c" $]
             if (code = "l") ["$d" $]
             if (code = "k") ["$9" $]
             if (code = "h") ["$f" $]
             if (code = "y") ["$t" $]
             if (code = "X") SOUS_ZONE_X
             if (code = "Y") SOUS_ZONE_Y                
             if (code = "Z") SOUS_ZONE_Z
             if (code = "2") /*["$2" $]*/
					[
					 if ($(1) = "r") ["$2rameau"]
					 else ["$2" $]
					] 
             if (code = "9") ["$3" $]
            ].
           ;

/*
 *   Local subject term
 *   #144Z
 *   #606
 */

  #144Z =
         [
          "#606 "
          TTL_indicator2
          ["$1" target(reset_tag #898$a)]
          [
           find($*)
           if (code = "a") ["$a" $]
           if (code = "X") ["$x" $]
           if (code = "Y") ["$y" $]
           if (code = "Z") ["$z" $]
           if (code = "2") /*["$2" $]*/
					[
					 if ($(1) = "r") ["$2rameau"]
					 else ["$2" $]
					] 
          ].
         ]
        ;

/*
 *   Local Dewey Decimal Classification
 *   #145Z
 *   #676
 */

 /*
*Export de la zone L686 (145F) en 686 (045W) sans les sous-zones $e et $f
*/

  #145F =
        [
          "#686 "
          TTL_indicator2
          ["$1" target(reset_tag #898$a)]
          ["$3" $0]
          [
           find($*)
           if (code = "a") ["$a" $]
           if (code = "b") ["$b" $]
           if (code = "c") ["$c" $]
           if (code = "v") ["$v" $]
           if (code = "2") /*["$2" $]*/
					[
					 if ($(1) = "r") ["$2rameau"]
					 else ["$2" $]
					] 
          ].
         ]
        ;
 
  #145Z = 
         [    "#676   "
              ["$1" target(reset_tag #898$a)]
              ["$a" $a   ["$v" $v]["$z" $e] ]
         ]
        ;
  
/* Personal name main - local
 *   #150D
 *   #701
 */

  #150D =
         [
          "#701 "
          TTL_indicator3
          ["$1" target(reset_tag #898$a)]
	  ["$8" $3]
          TTL_personal_name
         ]
        ;

/*
 *   Personal name - local
 *   #150E
 *   #702
 */

  #150E =
         [
          "#702 "
          TTL_indicator3
          ["$1" target(reset_tag #898$a)]
	  ["$8" $3]
          TTL_personal_name
         ]
        ;

  #150G =
         [  "#517 "
            TTL_indicator5
            ["$1" target(reset_tag #898$a)]
            TTL_make_5xx
         ]
           ;

/*
 *   Corporate body local
 *   #150L
 *   #712
 */

  #150L = 
         [
          "#712 "
          TTL_indicator3
          ["$1" target(reset_tag #898$a)]
          ["$8" $3]
          TTL_corporate
         ]
        ;

/*
 *   Family - local
 *   #150M
 *   #722
 */

  #150M =
         [
          "#722 "
          TTL_indicator2
          ["$1" target(reset_tag #898$a)]
          ["$8" $3]
          TTL_family_name
         ]
        ;

  TTL_MAKE_NIV0_EX =  
                    [
                     find_tag(#208@)
                     window_tag("record")
                     MAKE_AUTLOC 
                     remove("#897")
                     [find_tag(#****)].
                     window_tag("")
                    ].
                   ;

/*  MAKE_AUTLOC =
               [
                if set(#201D$0)
                      [
                       "#897   "
                       ["$a" $(1 to ":")]
                       [if set(#203@$0) [":" $]]
                      ]
               [
                if find_tag(#209D)
                   [
                    "#012 "
                     TTL_indicator2
                     ["$5" target(reset_tag #897$a)]
                     ["$a" $a]
                     ["$2" $2]
                   ]
               ].
               [
                if find_tag(#209R)
                   [
                    "#856 "
                    TTL_indicator3
                    ["$5" target(reset_tag #897$a)]
                    make_856
                   ]
               ].
               [
                if find_tag(#237B)
                   [
                    "#316 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    SEQ300
                   ]
               ].
               [
                if find_tag(#237C)
                   [
                    "#317 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    SEQ300
                   ]
               ].
               [
                if find_tag(#237D)
                   [
                    "#318 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    make_318
                   ]
               ].
               [
                if find_tag(#237E)
                   [
                    "#319 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    ["$a" $a]
                    ["$b" $b]
                    ["$c" $c]
                    ["$d" $d]
                    ["$x" $x]
                    ["$u" $u]
                    ["$2" $2]
                   ]
               ].
			   [
                if find_tag(#246S)
                   [
                    "#325 1 "
                    
                    ["$5" target(reset_tag #897$a)]
                    ["$a" $a]
                    ["$u" $u]
                    ["$2" $2]
                   ]
               ].
               [
                if find_tag(#250E)
                   [
                    "#702 "
                    TTL_indicator3
                    ["$5" target(reset_tag #897$a)]
	            ["$8" $3]
                    TTL_personal_name
                   ]
               ].
               [
                if find_tag(#250L)
                   [
                    "#712 "
                    TTL_indicator3
                    ["$5" target(reset_tag #897$a)]
                    ["$8" $3]
                    TTL_corporate
                   ]
               ].
               [
                if find_tag(#250M)
                   [
                    "#722 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    ["$8" $3]
                    TTL_family_name
                   ]
               ].
              ]
             ;*/
			 
MAKE_AUTLOC =
               [
               
				if set(#209J$b)
				[
                      [
                       "#897   "
                       ["$a" $]
					   reset_tag
                       [if set(#203@$0) [":" $]]
                      ]
               [
                if find_tag(#209D)
                   [
                    "#012 "
                     TTL_indicator2
                     ["$5" target(reset_tag #897$a)]
                     ["$a" $a]
                     ["$2" $2]
                   ]
               ].
               [
                if find_tag(#209R)
                   [
                    "#856 "
                    TTL_indicator3
                    ["$5" target(reset_tag #897$a)]
                    make_856
                   ]
               ]
               [
                if find_tag(#237B)
                   [
                    "#316 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    SEQ300
                   ]
               ].
               [
                if find_tag(#237C)
                   [
                    "#317 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    SEQ300
                   ]
               ].
               [
                if find_tag(#237D)
                   [
                    "#318 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    make_318
                   ]
               ].
               [
                if find_tag(#237E)
                   [
                    "#319 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    ["$a" $a]
                    ["$b" $b]
                    ["$c" $c]
                    ["$d" $d]
                    ["$x" $x]
                    ["$u" $u]
                    ["$2" $2]
                   ]
               ].
			   [
                if find_tag(#244W)
                   [
                    "#621 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    [ "$a" $a ]
					[ "$b" $b ]
					[ "$c" $c ].
					[ "$d" $d ]
					[ "$e" $e ]. 
					[ "$f" $f ] 
					[ "$g" $g ] 
					[ "$h" $h ] 
					[ "$i" $i ] 
					[ "$k" $k ]. 
					[ "$m" $m ].
				    [ "$n" $n ]. 
					[ "$o" $o ].
                   ]
               ].
			   [
                if find_tag(#246S)
                   [
                    "#325 1 "
                    
                    ["$5" target(reset_tag #897$a)]
                    ["$a" $a]
                    ["$u" $u]
                    ["$2" $2]
                   ]
               ].
               [
                if find_tag(#250E)
				   if ($B != "920")
					   
                   [
				   reset
                    "#702 "
                    TTL_indicator3
                    ["$5" target(reset_tag #897$a)]
	            ["$8" $3]
                    TTL_personal_name
                   ]
				   else 
					[
					reset
                    "#703 "
                    TTL_indicator3
                    ["$5" target(reset_tag #897$a)]
	            ["$8" $3]
                    TTL_personal_name
                   ]   
               ].
               [
                if find_tag(#250L)
					if ($B != "920")
                   [
					reset
                    "#712 "
                    TTL_indicator3
                    ["$5" target(reset_tag #897$a)]
                    ["$8" $3]
                    TTL_corporate
                   ]
				   else
				   [
					reset
                    "#713 "
                    TTL_indicator3
                    ["$5" target(reset_tag #897$a)]
                    ["$8" $3]
                    TTL_corporate
                   ]
               ].
               [
                if find_tag(#250M)
					if ($B != "920")
                   [
					reset
                    "#722 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    ["$8" $3]
                    TTL_family_name
                   ]
				   else
				   [
					reset
                    "#723 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    ["$8" $3]
                    TTL_family_name
                   ]
               ].
			   ]
			else if set(#209A$b)
			[
                      [
                       "#897   "
                       ["$a" $]
					   reset_tag
                       [if set(#203@$0) [":" $]]
                      ]
               [
                if find_tag(#209D)
                   [
                    "#012 "
                     TTL_indicator2
                     ["$5" target(reset_tag #897$a)]
                     ["$a" $a]
                     ["$2" $2]
                   ]
               ].
               [
                if find_tag(#209R)
                   [
                    "#856 "
                    TTL_indicator3
                    ["$5" target(reset_tag #897$a)]
                    make_856
                   ]
               ]
               [
                if find_tag(#237B)
                   [
                    "#316 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    SEQ300
                   ]
               ].
               [
                if find_tag(#237C)
                   [
                    "#317 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    SEQ300
                   ]
               ].
               [
                if find_tag(#237D)
                   [
                    "#318 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    make_318
                   ]
               ].
               [
                if find_tag(#237E)
                   [
                    "#319 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    ["$a" $a]
                    ["$b" $b]
                    ["$c" $c]
                    ["$d" $d]
                    ["$x" $x]
                    ["$u" $u]
                    ["$2" $2]
                   ]
               ].
			   [
                if find_tag(#246S)
                   [
                    "#325 1 "
                    
                    ["$5" target(reset_tag #897$a)]
                    ["$a" $a]
                    ["$u" $u]
                    ["$2" $2]
                   ]
               ].
               [
                if find_tag(#250E)
				   if ($B != "920")
					   
                   [
				   reset
                    "#702 "
                    TTL_indicator3
                    ["$5" target(reset_tag #897$a)]
	            ["$8" $3]
                    TTL_personal_name
                   ]
				   else 
					[
					reset
                    "#703 "
                    TTL_indicator3
                    ["$5" target(reset_tag #897$a)]
	            ["$8" $3]
                    TTL_personal_name
                   ]   
               ].
               [
                if find_tag(#250L)
					if ($B != "920")
                   [
					reset
                    "#712 "
                    TTL_indicator3
                    ["$5" target(reset_tag #897$a)]
                    ["$8" $3]
                    TTL_corporate
                   ]
				   else
				   [
					reset
                    "#713 "
                    TTL_indicator3
                    ["$5" target(reset_tag #897$a)]
                    ["$8" $3]
                    TTL_corporate
                   ]
               ].
               [
                if find_tag(#250M)
					if ($B != "920")
                   [
					reset
                    "#722 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    ["$8" $3]
                    TTL_family_name
                   ]
				   else
				   [
					reset
                    "#723 "
                    TTL_indicator2
                    ["$5" target(reset_tag #897$a)]
                    ["$8" $3]
                    TTL_family_name
                   ]
               ].
			   ]
              ]
             ;

  TTL_MAKE_LEV2 =
                 reset_tag
                 [
                  find_tag(#208@)
                  window_tag("record")
                  fait_955_texte
				 /* make_892
				  make_893*/
				  make_894
                  cv_copy
                  remove("#890")
                  remove("#891")
                  remove("#899")
                  remove("#898")
				  remove("#892")
				  remove("#893")
				  remove("#894")
                  [find_tag(#****)].
                  window_tag("")
                 ].
                ;
				
  fait_955_texte =
                 if set_tag(#231A) make_891
               else make_890
                  ;
				  
  make_890 = 
    "#890   $a"
    reset_tag
    [ if find_tag(#231@)
         [etat_collection ]
    ]
    ;
	
  make_892 = 
    "#892   $a"
    reset_tag
    [ if find_tag(#231E)
         [etat_collection ]
    ]
           ;
		   
  make_893 = 
    "#893   $a"
    reset_tag
    [ if find_tag(#231F)
         [etat_collection ]
    ]
           ;
		   
  make_894 = 
    "#894   $a"
    reset_tag
    [ if find_tag(#231G)
         [etat_lacunes ]
    ]
           ;

   make_891 =
    "#891   $a"
    reset_tag
    [ if find_tag(#231A)
        [ etat_collection ]
        [ if find_tag(#231A)
           [ " ; " etat_collection ]
        ].
    ]
    ;
	
  table duree_conservation =
		"A" " ann\342ee(s)",
		"S" " semaine(s)",
		"J" " jour(s)",
		"M" " mois",
		default *
                        ;
						
  etat_lacunes =
		reset
		[etat_lacunes2].
		[if find($4) [" [" $ "]"]]
		;
		
  etat_lacunes2 = stop("abcdefhig0")
  
		[ "("[ $b "-"]  [mois($c) "-" ]  [$a] ") "]
		[[ "vol. " ($d) " "][ "no." $e " "]["s\342erie " $f " "]]
		[" - no. ad." $h ]  [" - " $i] [" [" $g "]"]
		[ " ;" $0 ]
		;
		
  
print_vol =
  /*set(#231H$d)*/
  scan($, "%lu")          /* get the first vol from the list */
  decimal(scanned_number) /* and print it */
  success

/* Go to the next ILN */

  scan(callback(decimal(scanned_number + 1)), "%lu")

  /* Test each higher ILN until 999 and print if it is in the list */

  [
    if in_range(scanned_number, $)
      [ "," decimal(scanned_number) ]
    /* '1000' is the maximum vol */
    else if (scanned_number > 1000) fatal
    success
    /* Go to the next vol */
    scan(callback(decimal(scanned_number + 1)), "%lu")
  ].
  ;

  etat_collection =
    reset
    [ CCBEG ] [ CCEND ] [ [ CCBEG ] [ CCEND ] ].
		reset
	[if find($4) [" [" $ "]"]]
	[if find($7) [" [" $ "]"]]
                  ;

  CCBEG =   stop("djklmnopq056")
    [ " ;" $0 ] [ " =" $5] /*attention different de la table d'affichage*/ [ $f " "] [ "vol. " $d " "] 
    [ "no. " $e " "]
    [ "("[ $b "-"] [ $c "-"] [ $j ] ")"] /*attention different de la table d'affichage*/  ;

  CCEND =   stop("jbcdefg056")
    [   " -"
        [ " " $p " " ] [ " vol. " $n " " ] [ " no. " $o " " ]
        [ " ("[ $l "-"] [ $m "-"] [ $k ] ")"]
    ]
    [if find($6) [ "-...." success ]  ]
        ;

		   

  cv_copy =
           if set_tag(#209J) make_209j
           else make_209a
          ;

  make_318 =
            [
             find($*)
             if (code = "a") ["$a" $]
             if (code = "b") ["$b" $]
             if (code = "c") ["$c" $]
             if (code = "d") ["$d" $]
             if (code = "e") ["$e" $]
             if (code = "f") ["$f" $]
             if (code = "h") ["$h" $]
             if (code = "i") ["$i" $]
             if (code = "j") ["$j" $]
             if (code = "k") ["$k" $]
             if (code = "l") ["$l" $]
             if (code = "n") ["$n" $]
             if (code = "o") ["$o" $]
             if (code = "p") ["$p" $]
             if (code = "r") ["$r" $]
             if (code = "u") ["$u" $]
             if (code = "2") ["$2" $]
            ].
           ;

  make_915 =
            [
             find($*)
             if (code = "i") ["$a" $]
             if (code = "a") ["$b" $]
             if (code = "c") ["$c" $]
             if (code = "d") ["$d" $]
             if (code = "e") ["$e" $]
			 if (code = "f") ["$f" $]
            ].
           ;

  make_930 =      
            reset
            [
             find($*)
             if (code = "a") ["$a" $]
             if (code = "b") ["$b" $]
             if (code = "f") ["$c" $]
             if (code = "j") ["$d" $]
             if (code = "k") ["$e" $]
             if (code = "l") ["$f" $]
             if (code = "m") ["$g" $]
             if (code = "n") ["$h" $]
             if (code = "c") ["$i" $]
             if (code = "d") ["$j" $]
			 if (code = "w") ["$w" $]
             if (code = "o") ["$l" $]
             if (code = "h") ["$p" T930p($)]
             if (code = "p") ["$t" $]
             if (code = "q") ["$v" $]
			 if (code = "z") ["$z" $]
             if (code = "2") ["$2" $]
            ].
           ;

  make_856 =
            [
             find($*)
             if (code = "p") ["$a" $]
             if (code = "q") ["$b" $]
             if (code = "e") ["$c" $]
             if (code = "c") ["$d" $]
			 if (code = "A") ["$e" $]
             if (code = "b") ["$f" $]
             if (code = "g") ["$g" $]
             if (code = "h") ["$h" $]
             if (code = "i") ["$i" $]
             if (code = "j") ["$j" $]
             if (code = "k") ["$k" $]
             if (code = "l") ["$l" $]
             if (code = "f") ["$m" $]
             if (code = "r") ["$n" $]
             if (code = "o") ["$o" $]
             if (code = "n") ["$p" $]
             if (code = "0") ["$q" $]
             if (code = "s") ["$r" $]
             if (code = "d") ["$s" $]
             if (code = "u") ["$t" $]
             if (code = "a") ["$u" $]
             if (code = "v") ["$v" $]
             if (code = "w") ["$w" $]
             if (code = "x") ["$x" $]
             if (code = "y") ["$y" $]
             if (code = "z") ["$z" $]
			 if (code = "2") ["$2" $]
			 if (code = "Z") ["$9" $]
			 ].
			 
           ;
		   
 make_959 =
			[
			find($*)
			if (code = "a") ["$a" $]
			if (code = "b") ["$b" $]
			if (code = "c") ["$c" $]
			if (code = "d") 
			[
			 if ("-" in $)  
			  [
			  if ($(end) = "-") ["$d" $]
			  else  ["$d" print_vol]
			  ]
			 else ["$d" $]
			]
			if (code = "e")
			[
			 if ("-" in $) 
			  [
			  if ($(end) = "-") ["$e" $]
			  else  ["$e" print_vol]
			  ]
			 else ["$e" $]
			]
			if (code = "f")
			[
			 if ("-" in $) 
			 [
			  if ($(end) = "-") ["$e" $]
			  else  ["$e" print_vol]
			 ]
			 else ["$f" $]
			]
			if (code = "g") ["$g" $]
			if (code = "h")
			[
			if ("-" in $)
			  [
			  if ($(end) = "-") ["$h" $]
			  else  ["$h" print_vol]
			  ]
			else ["$h" $]
			]
			if (code = "i") ["$i" $]
			if (code = "4") ["$4" $]
			if (code = "0") ["$0" $]   
			].
			[["$r" target(reset_tag #894$a)] success]
			;
			
 make_959J = reset
			[
			find($*)
			if (code = "a") ["$a" $]
			if (code = "b") ["$b" $]
			if (code = "c") ["$c" $]
			if (code = "d") 
			[
			 if ("-" in $)  
			  [
			  if ($(end) = "-") ["$d" $]
			  else  ["$d" print_vol]
			  ]
			 else ["$d" $]
			]
			if (code = "e")
			[
			 if ("-" in $) 
			  [
			  if ($(end) = "-") ["$e" $]
			  else  ["$e" print_vol]
			  ]
			 else ["$e" $]
			]
			if (code = "f")
			[
			 if ("-" in $) 
			 [
			  if ($(end) = "-") ["$e" $]
			  else  ["$e" print_vol]
			 ]
			 else ["$f" $]
			]
			if (code = "g") ["$g" $]
			if (code = "h")
			[
			if ("-" in $)
			  [
			  if ($(end) = "-") ["$h" $]
			  else  ["$h" print_vol]
			  ]
			else ["$h" $]
			]
			if (code = "i") ["$i" $]
			if (code = "4") ["$4" $]
			if (code = "0") ["$0" $]/*["#959   " ["$5" target(reset_tag #898$a) $x] success]*/
			].
			/*[["$r" target(reset_tag #895$a)] success]*/
			["$r" etat_lacunes ]
			;

  make_9559 =
             [
              find($*)
              if (code = "j") ["$i" $]
              if (code = "b") ["$k" $]
              if (code = "c") ["$j" $]
              if (code = "d") ["$a" $]
              if (code = "e") ["$b" $]
              if (code = "f") ["$c" $]
              if (code = "k") ["$i" $]
              if (code = "l") ["$k" $]
              if (code = "m") ["$j" $]
              if (code = "n") ["$a" $]
              if (code = "o") ["$b" $]
              if (code = "p") ["$c" $]
              if (code = "4") ["$z" $]
              if (code = "5") ["$g" $]
              if (code = "7") ["$w" $]
              if (code = "6") ["$i$j$k$a$b$c" success]
              if (code = "0") ["#955   " ["$5" target(reset_tag #899$a)] success]
             ].
            [["$r" target(reset_tag #890$a)] success]
            ;

  make_9558_X =
               "#955 "
               if (indc(1) = " ") " "
               else ind(1)
               if (indc(2) = " ") " "
               else ind(2)
               "$5" $ tag_code(5,2)
              ;

  make_9558 =
             [
              find($*)
              if (code = "j") ["$i" $]
              if (code = "b") ["$k" $]
              if (code = "c") ["$j" $]
              if (code = "d") ["$a" $]
              if (code = "e") ["$b" $]
              if (code = "f") ["$c" $]
              if (code = "k") ["$i" $]
              if (code = "l") ["$k" $]
              if (code = "m") ["$j" $]
              if (code = "n") ["$a" $]
              if (code = "o") ["$b" $]
              if (code = "p") ["$c" $]
              if (code = "4") ["$z" $]
              if (code = "5") ["$g" $]
              if (code = "7") ["$w" $]
              if (code = "6") ["$i$j$k$a$b$c" success]
              if (code = "X") make_9558_X
			  if (code = "r") ["$r" $]
             ].
            ;

  make_956 =
            [
             find($*)
             if (code = "j") ["$i" $]
             if (code = "b") ["$k" $]
             if (code = "c") ["$j" $]
             if (code = "d") ["$a" $]
             if (code = "e") ["$b" $]
             if (code = "f") ["$c" $]
             if (code = "g") ["$w" $]
             if (code = "k") ["$i" $]
             if (code = "l") ["$k" $]
             if (code = "m") ["$j" $]
             if (code = "n") ["$a" $]
             if (code = "o") ["$b" $]
             if (code = "p") ["$c" $]
             if (code = "q") ["$w" $]
             if (code = "4") ["$z" $]
             if (code = "5") ["$g" $]
             if (code = "6") ["$i$j$k$a$b$c" success]
             if (code = "7") ["$w" $]
             if (code = "0") ["#956   " ["$5" target(reset_tag #899$a)] success]
            ].
			[["$r" etat_collection /*target(reset_tag #892$a)*/] success]
           ;

  make_957 =
            [
             find($*)
             if (code = "j") ["$i" $]
             if (code = "b") ["$k" $]
             if (code = "c") ["$j" $]
             if (code = "d") ["$a" $]
             if (code = "e") ["$b" $]
             if (code = "f") ["$c" $]
             if (code = "g") ["$w" $]
             if (code = "k") ["$i" $]
             if (code = "l") ["$k" $]
             if (code = "m") ["$j" $]
             if (code = "n") ["$a" $]
             if (code = "o") ["$b" $]
             if (code = "p") ["$c" $]
             if (code = "q") ["$w" $]
             if (code = "4") ["$z" $]
             if (code = "5") ["$g" $]
             if (code = "6") ["$i$j$k$a$b$c" success]
             if (code = "7") ["$w" $]
             if (code = "0") ["#957   " ["$5" target(reset_tag #899$a)] success]
            ].
			[["$r" etat_collection /*target(reset_tag #893$a)*/] success]
           ;

  make_209a =
             [
              if set(#201D$0)
                 [
                  "#899   "
                  ["$a" $(1 to ":")]
                  [if set(#203@$0) [":" $]]
                 ]
             ]
             reset_tag
             [
              if find_tag(#209G)
                 [
                  "#915 "
                  TTL_indicator2
                  ["$5" target(reset_tag #899$a)]
                  make_915
                 ]
             ]
             [
              if find_tag(#212B)
                 [
                  "#917 "
                  TTL_indicator2
                  ["$5" target(reset_tag #899$a)]
                  ["$a"($a)]
                 ]
  	     ] 
             reset_tag
             [
              if find_tag(#207G)
                 [
                  "#919 "
                  TTL_indicator2
                  ["$5" target(reset_tag #899$a)]
                  ["$a" $0]
                 ]
             ].
			 [
              if find_tag(#207H)
                 [
                  "#920 "
				  TTL_indicator2
                  ["$5" target(reset_tag #899$a)]
                  ["$a" $a]
				  ["$b" $b].
				  ["$c" $c]
                 ]
             ].
             [
              if find_tag(#209A)
                 [
                  "#93"$x(2)" "
                  TTL_indicator2
                  ["$5" target(reset_tag #899$a)]
                  make_930    /* 930 ou 931 ou 932 */
                 ]
             ].
             [
              if find_tag(#231@)
                 if set($1)
                    [
                     [  "#916 "
                        TTL_indicator2
                        ["$5" target(reset_tag #899$a)]
                        ["$a4d" $(1 to "\c") TTL_mini($(last))]
                     ]
                     [  reset
                       "#955 41"
                       ["$5" target(reset_tag #899$a)]
                       ["$rConserv\342e pendant " $1(1 to "\c") duree_conservation($(last))]
					   ["$z" $4]
					   ["$w" $7]
                     ]
                    ]
                 else if set($2)
                    [reset
                     "#955 41"
                     ["$5" target(reset_tag #899$a)]
                     ["$rConserv\342e depuis " $2]
					 ["$z" $4]
					 ["$w" $7]
                    ]
                 else if set($3)
                    [
                     "#916 "
                     TTL_indicator2
                     ["$5" target(reset_tag #899$a)]
                     ["$a4p" $]
                    ]
                 else
                    [
                     "#955 "
                     reset
                     TTL_indicator3
                     ["$5" target(reset_tag #899$a)]
                     make_9559
                    ]
              ]
              [
               if find_tag(#231E)
                  [
                   "#956 "
                   reset
                   TTL_indicator3
                   ["$5" target(reset_tag #899$a)]
                   make_956
                  ]
              ].
              [
               if find_tag(#231F)
                  [
                   "#957 "
                   reset
                   TTL_indicator3
                   ["$5" target(reset_tag #899$a)]
                   make_957
                  ]
              ].
			  [
               if find_tag(#231G)
                  [
                   "#959 "
                   reset
				   TTL_indicator2
				   ["$5" target(reset_tag #899$a)]
				   make_959
				  ]
			  ]
              [
               if find_tag(#237G)
                  [
                   "#958 "
                   TTL_indicator2
                   ["$5" target(reset_tag #899$a)]
                   ["$a" $a]
                   ["$v" $v]
                   ["$c" $c]
                  ]
              ].
			  reset_tag
			  /*[
               if find_tag(#208@)
                  [
                   "900 "
                   TTL_indicator2
                   ["$5" target(reset_tag #899$a)]
                   ["$a" $a] 
				   ["$b" $b] 
                  ]
              ]*/
			/*[
               if find_tag(#208@)
                  [
                   "#940 "
                   TTL_indicator2
                   ["$5" target(reset_tag #899$a)]
                   [
				   "$a"
					reset_tag
					if set_tag(#208@)
					[
                     if (TTL_year($a(last-1)) = "Y") "19"
                     else "20" $(last-1 for 2) $(last-4 for 2) $(last-7 for 2)
                    ]
				   ] 
				   ["$b" $b] 
                  ]
            ]			
				
		
			  reset_tag*/
			 /* [
               if find_tag(#201B)
                  [
                   "901 "
                   TTL_indicator2
                   ["$5" target(reset_tag #899$a)]
                   ["$a" $0] 
				   ["$b" $t] 
                  ]
              ]*/
			  
			/*[
               if find_tag(#201B)
                  [
                   "#941 "
                   TTL_indicator2
                   ["$5" target(reset_tag #899$a)]
                   [
				   "$a"
					reset_tag
					if set_tag(#201B)
					[
                     if (TTL_year($0(last-1)) = "Y") "19"
                     else "20" $(last-1 for 2) $(last-4 for 2) $(last-7 for 2)
                    ]
				   ] 
				   ["$b" $t] 
                  ]
            ]*/	
              reset_tag
              [
               if find_tag(#237F)
                  [
                   "#990 "
                   TTL_indicator2
                   ["$5" target(reset_tag #899$a)]
                   ["$a" $a]
                  ]
              ]
              [
               if find_tag(#244Z)
                  [
                   "#991 "
                   TTL_indicator2
                   ["$5" target(reset_tag #899$a)]
                   [
                    find($*)
                    if (code = "a") ["$a" $]
                    if (code = "b") ["$b" $]
                    if (code = "c") ["$c" $]
                    if (code = "2") ["$2" $]
                   ].
                  ]
              ].
              [
               if find_tag(#245Z)
                  [
                   "#992 "
                   TTL_indicator2
                   ["$5" target(reset_tag #899$a)]
                   ["$a" $a]
                   ["$2" $2]
                  ]
              ].
              reset_tag
              [
               if find_tag(#209Z)
                  [
                   "#999 "
                   TTL_indicator2
                   ["$5" target(reset_tag #899$a)]
                   [
                    find($*)
                    if (code != "S") ["$" code $]
                   ].
                  ]
              ]
             ;

  make_209j =
             [
              if set(#209J$b)
                 [
                  "#898   "
                  ["$a" $]
                  [if set(#203@$0) [":" $]]
                 ]
             ]
             reset_tag
             [
              if find_tag(#209J)
                 [
                  "#930   "
                  ["$5" target(reset_tag #898$a) $x]
                  make_930
                 ]
             ].
             [
              if find_tag(#231A)
                 if set($1)
                    [
                     "#916 "
                     TTL_indicator2
                     ["$5" target(reset_tag #898$a) $x]
                     reset
                     ["$a4d" $1(1 to "\c") TTL_mini($(last))]
                     reset
                     ["#955 41"
                       ["$5" target(reset_tag #898$a) $x]
                        reset
                       /*["$rConserv\342e pendant " $1(1 to "\c") duree_conservation($(last))]*/
					   [
					   ["$rConserv\342e pendant " $1(1 to "\c") duree_conservation($(last))]
					   [" [" $4 "]"]
					   ]
					   reset
					   ["$z" $4]
					   ["$w" $7]
                     ]
                    ]
                 else if set($2)
                    [reset
                     "#955 41"
                     ["$5" target(reset_tag #898$a)] 
                     ["$rConserv\342e depuis" $2]
					 ["$z" $4]
					 ["$w" $7]
                    ]
                 else if set($3)
                    [
                     "#916 "
                     TTL_indicator2
                     ["$5" target(reset_tag #898$a) $x]
                     reset
                     ["$a4p" $3]
                    ]
                 else
                    [
                     "#988/"
                     reset
                     $x
                     " "
                     reset
                     TTL_indicator3
                     ["$X" target(reset_tag #898$a)]
                     [
                      find($*)
                      if       (code = "0") ["$X" target(reset_tag #898$a) success]
                      else if (code != "x") copy_sub
                     ].
                     [ "$r" etat_collection ]
                    ]
             ].
			 [
              target(reset_tag)
              [
               target(find_tag(#988)
                      "#955 "
                      if (indc(1) = " ") " "
                      else ind(1)
                      if (indc(2) = " ") " "
                      else ind(2)
                      "$5"
                      $X
                      tag_code(5,2)
                      make_9558
                     )
               ].
              ]
			 [
               if find_tag(#231H)
                  [
                   "#959 "
                   reset
				   TTL_indicator2
				   ["$5" target(reset_tag #898$a) $x]
				   make_959J
				  ]
			  ].
			 reset_tag
			[
               if find_tag(#208@)
                  [
                   "#940 "
                   TTL_indicator2
                   ["$5" target(reset_tag #898$a) [reset_tag find(#209J$x) $]]
                   [
				   "$a"
					reset_tag
					if set_tag(#208@)
					[
                     if (TTL_year($a(last-1)) = "Y") "19"
                     else "20" $(last-1 for 2) $(last-4 for 2) $(last-7 for 2)
                    ]
				   ] 
				   ["$b" $b] 
                  ]
            ]			
 		    reset_tag
			[
               if find_tag(#201B)
                  [
                   "#941 "
                   TTL_indicator2
                   ["$5" target(reset_tag #898$a) [reset_tag find(#209J$x) $]]
                   [
				   "$a"
					reset_tag
					if set_tag(#201B)
					[
                     if (TTL_year($0(last-1)) = "Y") "19"
                     else "20" $(last-1 for 2) $(last-4 for 2) $(last-7 for 2)
                    ]
				   ] 
				   ["$b" $t] 
                  ]
            ]
             
              remove("#988")
             ;

  copy_sub = "$" code[$] success ;


/**************************************************************************************
 *                                Format autorités                                    *
 **************************************************************************************/


/* ----------------------------------------------------------------------------
 * Online formatter conversion table PICA -> UNIMARC authorities
 *
 * History:
 * 24-03-1999  LdJ  creation
 *
 * ---------------------------------------------------------------------------
 */

  AUT_format =
              reset_tag
              [AUT001A]     /*                                                       */
			  AUT_MAKE_004_006  /* date création = 004, RCR créateur = 006         */
              [AUT001B]     /*                                                       */
               AUT_MAKE_005_007 /* Version identifier                                    */
               AUT002at     /* Record label                                          */
			  [AUT002G]     /* FRBR Forme de l'oeuvre */ 
              [AUT003at]    /* Pica Production Number/Record identifier              */
              [AUT003D].    /* PPN of merged record                                  */
              [AUT004A].    /* International Standard Authority Number               */
              [AUT006Z].    /* National bibliographic number                         */
              [AUT009P].    /* Adresse électronque                                   */
			  [AUT009Q].    /* url pérenne dans un autre catalogue 					 */
               AUT_MAKE_100 /*                                                       */
               reset_tag
              [AUT010at]    /* Language of the item                                  */
			  [AUT010A]		/*ISNI*/
			  [AUT010B]		/*ISTC*/
			  [AUT010C]		/*ISWC*/
			  [AUT010D]		/*ISAN*/
			  [AUT010E]		/*ISRC*/
              [AUT012at]    /*FRBR, 104*/
			  [AUT012A]     /* General processing data                               */
              [AUT012C]     /* Physical attributes                                   */
              [AUT012E]     /* Persons                                               */
              [AUT012F]     /* Coordinates                                           */
              [AUT012G]     /* Brands                                                */
              [AUT012H]     /* Uniform title for music +FRBR                         */
              [AUT012I]     /* Names                                                 */
          /*  [AUT012J]        Rules                                                 */
              [AUT_MAKE_152] /*Rules                                                 */
              [AUT012K]     /* Uniform titles                                        */
              [AUT012L]		/*A180*/
			  [AUT019at]    /* Country of publication or production                  */
              [AUT020A].     /*FRBR*/
			  [AUT022A].    /* Uniform Title                                         */
              [AUT022B].    /* Reference tracing - Uniform title                     */
              [AUT022C]		/*FRBR*/
			  [AUT022D].     /*FRBR*/
			  [AUT028at].   /* Reference tracing - personal name                     */
              [AUT028A].    /* Personal name                                         */
              [AUT028I].    /* Family name                                           */
              [AUT028J].    /* Reference tracing - Family name                       */
              [AUT029at].   /* Reference tracing corporate body                      */
              [AUT029A].    /* Corporate body name                                   */
              [AUT036A].    /* Name title                                            */
              [AUT036B].    /* Reference tracing - Name/title                        */
              [AUT036C].    /* Also reference tracing - Name/title                   */
              [AUT036D].    /* Linking heading - Name/title                          */
              [AUT036E]		/*FRBR*/
			  [AUT036F].		/*FRBR*/
			  [AUT036P].		/*FRBR*/
			  [AUT037C].    /* Textual see also reference note                       */
              [AUT037D]     /* Textual see reference note                            */
              [AUT037E]     /* General explanatory Reference note                    */
              [AUT037F].    /* Biography and activity                                */
              [AUT037G].    /* Note géographique                                     */
              [AUT038A].    /* Also reference tracing - Personal name  + FRBR        */
              [AUT038B].	/*	FRBR*/
			  reset_tag
			  [AUT038C].    /* Also reference tracing - Corporate body name + FRBR   */
              [AUT038D].		/*FRBR*/
			  [AUT038E].    /* Also reference tracing - Topical subject              */
              [AUT038H].    /*580*/
			  [AUT038M].    /* Also reference tracing - Nom de marque                */
              [AUT038N].    /* Also reference tracing - Family name + FRBR           */
              [AUT038O].    /* Also reference tracing - Uniform title                */
           /* [AUT038P].       Also reference tracing - Iconographic descriptor      */
		      [AUT038Q].    /* Also reference tracing - Territorial or geographic    */
              [AUT038R].		/*FRBR*/
			  [AUT039I].    /* Linking heading - Personal name                       */
              [AUT039J].    /* Linking heading - Corporate body name                 */
              [AUT039K].    /* Linking heading - Territorial or geographic name      */
              [AUT039L].    /* Linking heading - Nom de marque                       */
              [AUT039M].    /* Linking heading - Family name                         */
              [AUT039N].    /* Linking heading - Uniform title                       */
              [AUT039O].    /* Linking heading - Topical subject                     */
           /* [AUT039P].       Linking heading - Iconographic descriptor             */
		      [AUT039R].	/* 780 */
			  [AUT039Q].
              [AUT040at].    /*FRBR*/
			  reset_tag
			  [AUT040A].		/*FRBR*/
			  [AUT041at].	/*FRBR*/
			  reset_tag
			  [AUT042C].		/*FRBR*/
			  [AUT044A]     /* Topical subject                                       */
              [AUT044B].    /* Reference tracing - Topical subject                   */
              [AUT044I].    /* Territorial or geographical name                      */
              [AUT044J].    /* Reference tracing - Territorial or geographical name  */
              [AUT044K].    /* Nom de marque-forme retenue                           */
              [AUT044L].    /* Reference tracing - Nomme de marque                   */
           /* [AUT044M].       Iconographic descriptor                               */
           /* [AUT044N].       Reference tracing - Iconographic descriptor           */
              [AUT044O]   /*280*/
			  [AUT044P].  /*480*/
			  [AUT044Q].		/*FRBR*/
			  [AUT044R].		/*FRBR*/
			  [AUT044T].		/*FRBR*/
			  [AUT044U].		/*FRBR*/
			  [AUT045E].    /* DDC                                                   */
              [AUT045G].    /* Other classification numbers                          */
              [AUT047A].    /* Information note                                      */
              [AUT047G].    /* General scope note                                    */
              [AUT047M].    /* Source data found                                     */
              [AUT047N]     /* Source data not found                                 */
              [AUT047O].    /* Usage or scope information                            */
              [AUT047P].    /* Note on the English form of subject heading           */
              [AUT047Q].    /* Example under note                                    */
              [AUT047R].    /* General cataloguers note                              */
              [AUT047S].    /* Deleted heading information                           */
              [AUT047T].    /* Replacement heading information                       */
			  [AUT047W].
			  [AUT047Y].	/* Note du catalogueur*/
              [AUT047Z].    /* Source de catalogage                                  */
              [AUT_MAKE_801]/*                                                       */
			  reset_tag
              [AUT_MAKE_900] /* Nom de personne libelle                              */
              [AUT_MAKE_901] /* Nom de personne libelle  renvois                     */                    
              [AUT_MAKE_902] /* Nom de personne libelle  para                        */               
              [AUT_MAKE_910] /* Collectivite libelle                                 */               
              [AUT_MAKE_911] /* Collectivite libelle    renvois                      */                 
              [AUT_MAKE_912] /* Collectivite libelle    para                         */                 
              [AUT_MAKE_915] /* Nom geographique libelle                             */         
              [AUT_MAKE_916] /* Nom geographique libelle  renvois                    */              
              [AUT_MAKE_917] /* Nom geographique libelle  para                       */            
              [AUT_MAKE_960] /* Nom de marque libelle                                */        
              [AUT_MAKE_961] /* Nom de marque libelle   renvois                      */                
              [AUT_MAKE_962] /* Nom de marque libelle   para                         */             
              [AUT_MAKE_920] /* Nom de famille  libelle                              */                   
              [AUT_MAKE_921] /* Nom de famille  libelle  renvois                     */   
              [AUT_MAKE_922] /* Nom de famille  libelle  para                        */       
              [AUT_MAKE_930] /* Titre uniforme  libelle                              */              
              [AUT_MAKE_931] /* Titre uniforme  libelle  renvois                     */
              [AUT_MAKE_932] /* Titre uniforme  libelle  para                        */
              [AUT_MAKE_940] /* Auteur titre    libelle                              */        
              [AUT_MAKE_941] /* Auteur titre    libelle  renvois                     */ 
              [AUT_MAKE_942] /* Auteur titre    libelle  para                        */
              [AUT_MAKE_950] /* Nom commun      libelle                              */
              [AUT_MAKE_951] /* Nom commun      libelle  renvois                     */     
              [AUT_MAKE_952] /* Nom commun      libelle  para                        */ 
			  [AUT_MAKE_980] /* Forme genre 280*/
			  [AUT_MAKE_981] /* Forme genre 480*/
			  [AUT_MAKE_982] /* Forme genre 780*/
             ;

  table AUT_mat1 =
                  "T"     "x",
                  default ""
                 ;

  table AUT_mat2 =
                  "p"     "a",
                  "a"     "e",
                  "b"     "b",
                  "u"     "f",
                  "d"     "j",
                  "g"     "c",
                  "l"     "j",
                  "q"     "h",
                  "z"     "j",
                  "m"     "d",
				  "r"     "r",
				  "f"     "l",
                  default " "; 
  table AUT_mat3 =
                  "v"     " ",
                  "x"     "3",
				  "3"     "4",
				  "2"	  "2",
                  default "3"
                 ;
				 
  table AUT_year =
                  "5"     "Y",
                  "6"     "Y",
                  "7"     "Y",
                  "8"     "Y",
                  "9"     "Y",
                  default "N"
                 ;

  AUT_indicator1 = 
                  if ($S(1) = "\#") "  "
                  else              [[$(1) " "] or "  "]
                 ;

  AUT_indicator2 =
                  " "
                  if ($S(2) = "\#") " "
                  else              [[$(2)] or " "]
                 ;

  AUT_indicator3 =
                  if ($S(1) = "\#") " "
                  else              [[$(1)] or " "]
                  if ($(2) = "\#") " "
                  else              [[$(2)] or " "]
                 ;

  MULTI_ECRITURE_AUTORITES =
                            if set($U)
                               [
                                if      ($ = "fa") [reset ["$6a" $T] "$7ba0y" $U "1"]
                                else if ($ = "ha") [reset ["$6a" $T] "$7ba0y" $U "1"]
                                else               [reset ["$6a" $T] "$7ba0y" $U "0"]
                               ]
                            else
                               ["$7ba0yba0"]
                           ;

/*
 *  AUT001A
 *  USM099
 */

  AUT001A =
           if find_tag(#001A) ["#099   " ["$0" $0(last -7 for 8)]]
           else               fatal
          ;
		  
 AUT_MAKE_004_006 =
                "#004 $0"
                [
                 if set_tag(#001A)
                    [
                     if (TTL_year($0(last-1)) = "Y") "19"
                     else                            "20"
                                                     $(last-1 for 2)
                                                     $(last-4 for 2)
                                                     $(last-7 for 2)
					]
                    or "00000000000000.000"
                 ]
				 reset
				 "#006 $0"
				 [
				    [
					if set_tag(#001A)
                    $0(1 to ":")
					]
					or
					"000000000"
				 ]	
                ;
				
 

/*
 *  AUT001B
 *  USM098
 */

  AUT001B =
           if find_tag(#001B) ["#098   " ["$0" $0(last -7 for 8)]]
           else               fatal
          ;

/*
 * Version identifier
 * #001B $0 $t
 * #005
 */

  AUT_MAKE_005_007 =
                "#005 $0"
                [
                 if set_tag(#001B)
                    [
                     if (AUT_year($0(last-1)) = "Y") "19"
                     else                            "20"
                     $(last-1 for 2)
                     $(last-4 for 2)
                     $(last-7 for 2)
                     $t(1 for 2)
                     $(4 for 2)
                     $(7 for 6)
                    ]
                    or "00000000000000.000"
                ]
				reset
				 "#007 $0"
				 [
				    [
					if set_tag(#001B)
                    $0(1 to ":")
					]
					or
					"000000000"
				 ]
               ;

/*
 * #002@ Record status and type and encoding level
 * #RECORD LABEL
 */

  AUT002at = 
            "#000 $0     "
            if set(#001E$0) "d"
            else
               [
                target(reset_tag
                       if (#099$0 = #098$0) "n"
                       else "c"
                      )
               ]
            if find_tag(#002@) 
			/*[if ($0(2 to 3) = "d3")
				[
				reset
                AUT_mat1($(1))
                "  j22     4  45  "
				]
			else 
				[
				reset
                AUT_mat1($(1))
                "  "
                AUT_mat2($(2))
                "22     "
                AUT_mat3($(3))
                "  45  "
               ]
			]*/
               [
                AUT_mat1($0(1))
                "  "
                AUT_mat2($(2))
                "22     "
                AUT_mat3($(3))
                "  45  "
               ]
            else fatal
            remove("#099")
            remove("#098")
			[reset "#008 $a" $0] /* Gala 6290*/
           ;

/*
 * #003@ Pica Production Number
 * #001  Record identifier
 */

  /*AUT003at =
            if find_tag(#003@) ["#001 $0"$0]
            else               fatal
           ;*/
		   
 AUT002G =
			if find_tag(#002G)
			["#189   $a" $0]
			else fatal
			;
		   
 AUT003at =
            if find_tag(#003@) 
			[
			"#001 $0"$0
			reset
            "#003 $0http://www.idref.fr/" $0
			]
            else               fatal
           ;

/*
 *  PPN of merged record
 *  #003D
 *  #035
 */

 /* AUT003D =
           if find_tag(#003D) ["#035   " ["$a" $0 "$9sudoc"]]
           else               fatal
          ;*/
		  
 AUT003D =
           if find_tag(#003D) 
		   [
		   ["#035   " ["$a" $0 "$9sudoc"]]
		   [reset 
		   ["#801  3$aFR$bAbes$c"
           TTL_MAKE_DATE_AUT801
           "$gAFNOR$h" $0]
		   ]
		   ]
           else               fatal
          ;
		  
 TTL_MAKE_DATE_AUT801 =
                     target(
                            if !set(#005$0) "00000000"
                            else            [$(1 for 8)]
                           )
                    ;

/*
 *  International Standard Authority Number
 *  #004A [$0]
 *  #015  [$a]
 */

  AUT004A =
           if find_tag(#004A) ["#015   " ["$a" $0]]
           else               fatal
          ;

/*
 *  National bibliographic number
 *  #006Z
 *  #035
 */

  AUT006Z =
           if find_tag(#006Z) ["#035   " ["$a" $0]["$2" $l] ["$C" $C] ["$z" $z]["$d" $d]]
           else               fatal
          ;

/*
 * Adresse electronique
 * #009P
 * #856
 */

  AUT009P =
           if find_tag(#009P)
              [
               "#856 "
               TTL_indicator3
               [
                find($*)
                if (code = "p") ["$a" $]
                if (code = "q") ["$b" $]
                if (code = "e") ["$c" $]
                if (code = "c") ["$d" $]
                if (code = "A") ["$e" $]
                if (code = "b") ["$f" $]
                if (code = "g") ["$g" $]
                if (code = "h") ["$h" $]
                if (code = "i") ["$i" $]
                if (code = "j") ["$j" $]
                if (code = "k") ["$k" $]
                if (code = "l") ["$l" $]
                if (code = "f") ["$m" $]
                if (code = "r") ["$n" $]
                if (code = "o") ["$o" $]
                if (code = "n") ["$p" $]
                if (code = "0") ["$q" $]
                if (code = "s") ["$r" $]
                if (code = "d") ["$s" $]
                if (code = "u") ["$t" $]
                if (code = "a") ["$u" $]
                if (code = "v") ["$v" $]
                if (code = "w") ["$w" $]
                if (code = "x") ["$x" $]
                if (code = "y") ["$y" $]
                if (code = "z") ["$z" $]
               ].
              ]
           else fatal
          ;
		  
    AUT009Q =
		  if find_tag(#009Q)
          [
          "#033 "
          TTL_indicator2
          [
		  find($*)
           if (code = "a") ["$a" $]
           if (code = "z") ["$z" $]
		   if (code = "2") ["$2" $]
		   if (code = "C") ["$C" $]
		   if (code = "d") ["$d" $]
		  ].
		  ]  
		  else fatal
		;
   
/*
 * #100  Fixed length data elements
 * #001A Date entered on file
 * #012T $a $b
 *       Character set
 *       Additional chraracter set
 *       Alphabet of title
 */

  AUT_MAKE_100 =
                "#100   $a"
                [
                 if set_tag(#001A)
                    [
                     if (AUT_year($0(last-1)) = "Y") "19"
                     else                            "20"
                     $(last-1 for 2)
                     $(last-4 for 2)
                     $(last-7 for 2)
                    ]
                    or "00000000"
                ]
                "afre"
                [
                 if      find_tag(#022A) [if set($4) $(2) else "y"]
                 else if find_tag(#028A) [if set($4) $(2) else "y"]
                 else if find_tag(#028I) [if set($4) $(2) else "y"]
                 else if find_tag(#029A) [if set($4) $(2) else "y"]
                 else if find_tag(#036A) [if set($4) $(2) else "y"]
                 else if find_tag(#044A) [if set($4) $(2) else "y"]
                 else if find_tag(#044I) [if set($4) $(2) else "y"]
                 else if find_tag(#044K) [if set($4) $(2) else "y"]
                 else if find_tag(#044M) [if set($4) $(2) else "y"]
                 else                    "y"
                ]
                "50      ba0"
               ;

/*
 *  Language code
 *  #010@ $S [$a] [$b]
 *  #101     [$a] [$b]
 */

  AUT010at =
            if find_tag(#010@) ["#101   " ["$a" $a].["$b" $b]]
            else               fatal
           ;
		   
  AUT010A = 
			if find_tag(#010A) ["#010   " ["$a" $0] ["$2" $2] ["$C" $C] ["$d" $d] ["$y" $y]. ["$z" $z].]
			else   fatal
			;
			
  AUT010B = 
			if find_tag(#010B) ["#050   " ["$a" $0] ["$z" $z].]
			else   fatal
			;
			
  AUT010C = 
			if find_tag(#010C) ["#051   " ["$a" $0] ["$z" $z].]
			else   fatal
			;
			
  AUT010D = 
			if find_tag(#010D) ["#052   " ["$a" $0] ["$z" $z].]
			else   fatal
			;
			
  AUT010E = 
			if find_tag(#010E) ["#061   " ["$a" $0] ["$z" $z].]
			else   fatal
			;
			
  /*FRBR
  * #104
  * #012@
  */
  
  AUT012at =
			if find_tag(#012@)
			["#104   " 
			["$a" $a]
			["$f" $f]
			]
			
			else fatal
			;

/*
 *  General processing data
 *  #012A $a $b $c $d
 *  #103  $a
 *
 */

  AUT012A = 
           if find_tag(#012A) 
              [
               "#199   "
               if set($a)
                  [
                   if ($(1) = "-") ["$a" [width(10) $ pad(" ")]]
                   else            ["$a " [width(9) $ pad(" ")]]
                  ]
               if set($b)
                  [
                   if ($(1) = "-") ["$b" [width(10) $ pad(" ")]]
                   else            ["$b " [width(9) $ pad(" ")]]
                  ]
               if set($c)
                  [
                   if ($(1) = "-") ["$c" [width(6) $ pad(" ")]]
                   else            ["$c " [width(5) $ pad(" ")]]
                  ]
               if set($d)
                  [
                   if ($(1) = "-") ["$d" [width(6) $ pad(" ")]]
                   else            ["$d " [width(5) $ pad(" ")]]
                  ]
               ]
               [
                target(
                       set_tag(#199)
                       "#103   "
                       if set($a)
                          [
                           "$a"
                           [
                            if ($(6) = "?") [$(1 for 5) "    ?"]
                            else            [$]
                           ]
                          ]
                       if set($b)
                          [
                           "$b"
                           [
                            if ($(6) = "?") [$(1 for 5) "    ?"]
                            else            [$]
                           ]
                          ]
                       if set($c)
                          [
                           "$c"
                           [
                            if ($(6) = "?") [$(1 for 5) "?"]
                            else            [$]
                           ]
                          ]
                       if set($d)
                          [
                           "$d"
                           [
                            if ($(6) = "?") [$(1 for 5) "?"]
                            else            [$]
                           ]
                          ]
                       )
                remove("#199") 
               ]
              ;

/*
 * Informations codees sur la presentation physique (texte)
 * #012C $a $b $c
 * #106
 */

  AUT012C =
           if find_tag(#012C)
              [
               "#106   "
               ["$a" $a]
               ["$b" $b]
               ["$c" $c]
              ]
           else fatal
          ;

/*
 * Persons
 * #012E $a
 * #120  $a
 */

  AUT012E =
           if find_tag(#012E)
              [
               "#120   "
               ["$a" $a]
               [
                if find($b) $
                else "a"
               ]
              ]
           else fatal
          ;

/*
 *  Coordinates
 *  #012F $d $e $f $g
 *  #123
 */

   AUT012F =
           if find_tag(#012F)
              [
               "#123   "
               ["$d" $d]
               ["$e" $e]
               ["$f" $f]
               ["$g" $g]
			   ["$q" $q]
               ["$r" $r]
               ["$s" $s]
               ["$t" $t]
              ]
           else fatal
          ;


/*
 *  Brands
 *  #012G $a
 *  #126
 */

  AUT012G =
           if find_tag(#012G) ["#126   " ["$a" $a]]
           else fatal
          ;

/*
 *  UT for music
 *  #012H $a $b $c $d
 *  #128
 */

  AUT012H =
           if find_tag(#012H)
              [
               "#128   "
               ["$a" $a]
               ["$b" $b].
               ["$c" $c].
               ["$d" $d]
              ]
           else fatal
          ;

/*
 *  Names
 *  #012I $a $b $c
 *  #150
 */

  AUT012I =
           if find_tag(#012I) 
		   [
		   "#150   " 
		   ["$a" $a]
		   ["$b" $b]
		   ]
           else               fatal
          ;

/*
 *  Rules
 *  #012J $b $c
 *  #152
 */

  AUT_MAKE_152 =
                if set(#002@$0)
                   [
                    if      ($(2) = "l")    ["#152   $bFMESH"]
                    else if ($(2) in "dgzf") ["#152   $brameau"] 
                    else                    [
                                             "#152   $aAFNOR" 
                                             [
                                              if      set(#022A$X) ["$brameau"]
                                              else if set(#022B$X) ["$brameau"]
                                              else if set(#028@$X) ["$brameau"]
                                              else if set(#028A$X) ["$brameau"]
                                              else if set(#028I$X) ["$brameau"]
                                              else if set(#028J$X) ["$brameau"]
                                              else if set(#029@$X) ["$brameau"]
                                              else if set(#029A$X) ["$brameau"]
                                              else if set(#036A$X) ["$brameau"]
                                              else if set(#036B$X) ["$brameau"]
                                              else if set(#044K$X) ["$brameau"]
                                              else if set(#044L$X) ["$brameau"]
                                             ]
                                            ]
                    ]
                reset_tag
               ;

/*
 *  Uniform titles
 *  #012K $a
 *  #154
 */

  AUT012K =
           if find_tag(#012K) ["#154   " ["$a" $a]]
           else               fatal
          ;
		  
   AUT012L =
           if find_tag(#012L) ["#180   " ["$a" $a]]
           else               fatal
          ;

/*
 *  Country of publishing
 *  #019@ $a [$b] [$d] [$m] [$n] [$o] [$s]
 *  #102  $a [$b] [$d] [$m] [$n] [$o] [$s]
 */

  AUT019at =
            if find_tag(#019@) 
               [
                "#102   "
                [
                 find($a)
                 if ($ = "II") ["$aZZ"] 
                 else          ["$a" $]
                ].
               ]
            else fatal
           ;
		   
  /*FRBR
  #328
  #020A
  */
		   
  AUT020A =
		  if find_tag(#020A)
		  [
           "#328 "
		  AUT_indicator3 
		  stop("zabcedtu2")
           [
            ["$z" $z]
            ["$a" $a]
            ["$b" $b]
            ["$c" $c]
            ["$e" $e]
            ["$d" $d]
            ["$t" $t]
            ["$u" $u]
            ["$2" $2]
           ].
          ]
         ;


/*
 *  #022A
 *  #230
 */

  AUT022A =
           find_tag(#022A)
           [ZONE_230_AUTORITES]
          ;

  ZONE_230_AUTORITES =
                      "#230   "
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      if set($a) ["$a" SCAN_AT]
                      AUT_uniform
                     ;

  AUT_uniform =
               [
                find($*)
                if (code = "f") ["$b" $]
                if (code = "b") ["$h" $]
                if (code = "h") ["$i" $]
                if (code = "g") ["$k" $]
                if (code = "i") ["$l" $]
                if (code = "r") ["$m" $]
                if (code = "p") ["$n" $]
                if (code = "j") ["$q" $]
                if (code = "m") ["$r" $]
                if (code = "n") ["$s" $]
                if (code = "o") ["$u" $]
                if (code = "c") ["$w" $]
                if (code = "X") SOUS_ZONE_X
                if (code = "Y") SOUS_ZONE_Y
                if (code = "Z") SOUS_ZONE_Z
               ].
              ;

/*
 *  #022B
 *  #430
 */

  AUT022B =
           find_tag(#022B)
           [ZONE_430_AUTORITES]
          ;

  ZONE_430_AUTORITES =
                      "#430   "
                      ["$0" $0]
                      ["$2" $2]
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      if set($a) ["$a" SCAN_AT]
                      AUT_uniform
                     ;
					 
  /* FRBR
	#022C
	#231
  */
					 
  AUT022C =
		find_tag(#022C)
		[ZONE_231_AUTORITES]
		;
		
  ZONE_231_AUTORITES =
		"#231 "
		AUT_indicator3
		MULTI_ECRITURE_AUTORITES
		reset
		["$8" $3]
		if set($a) ["$a" SCAN_AT]
		[
            find($*)
            if (code = "i") ["$c" $]
            if (code = "b") ["$h" $]
            if (code = "h") ["$i" $]
            if (code = "p") ["$k" $]
            if (code = "m") ["$r" $]
            if (code = "n") ["$s" $]
			if (code = "o") ["$u" $]
       ].
	   ;
	
	/*FRBR
	#431
	#022D
	*/
		
  AUT022D =
		find_tag(#022D)
		[ZONE_431_AUTORITES]
		;
		
  ZONE_431_AUTORITES =
		"#431 "
		AUT_indicator3
		MULTI_ECRITURE_AUTORITES
		reset
		["$8" $3]
		if set($a) ["$a" SCAN_AT]
		[
            find($*)
            if (code = "i") ["$c" $]
            if (code = "b") ["$h" $]
            if (code = "h") ["$i" $]
            if (code = "p") ["$k" $]
            if (code = "m") ["$r" $]
            if (code = "n") ["$s" $]
			if (code = "o") ["$u" $]
       ].
	   ;
		
/*
 *  #028@
 *  #400
 */

  AUT028at =
            find_tag(#028@)
            [ZONE_400_AUTORITES]
           ;

  ZONE_400_AUTORITES =
                      "#400 "
                      AUT_indicator2
                      ["$0" $0]
                      ["$2" $2]
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_personal_name
                     ;

/*
 *  #028A
 *  #200
 */

  AUT028A =
           find_tag(#028A)
           [ZONE_200_AUTORITES]
          ;

  ZONE_200_AUTORITES =
                      "#200 "
                      AUT_indicator2
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
					  ["$5" Dollar5($6)]
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_personal_name
                     ;

  AUT_personal_name =
                     if set($k)
                        [
                         reset
                         if set($l)  [reset AUT_personal_name_1]
                         else        [reset AUT_personal_name_2]
                        ]
                     else
                        [reset AUT_personal_name_1]
                     ;

  AUT_personal_name_1 =
                       ["$a" $a]
                       reset
                       ["$b" $d]
                       reset
                       [
                        find($*)
                        if (code = "f") ["$c" $]
                        if (code = "l") ["$d" $]
                        if (code = "h") ["$f" $]
                        if (code = "g") ["$g" $]
                        if (code = "X") SOUS_ZONE_X
                        if (code = "Y") SOUS_ZONE_Y
                        if (code = "Z") SOUS_ZONE_Z
						if (code = "B") ["$4" $]
                       ].
                      ;

  AUT_personal_name_2 =
                       ["$a" $a " " $k]
                       reset
                       ["$b" $d]
                       reset
                       [
                        find($*)
                        if (code = "f") ["$c" $]
                        if (code = "h") ["$f" $]
                        if (code = "g") ["$g" $]
                        if (code = "X") SOUS_ZONE_X
                        if (code = "Y") SOUS_ZONE_Y
                        if (code = "Z") SOUS_ZONE_Z
						if (code = "B") ["$4" $]
                       ].
                      ;

/*
 *  #028I
 *  #220
 */

  AUT028I =
           find_tag(#028I)
           [ZONE_220_AUTORITES]
          ;

  ZONE_220_AUTORITES =
                      "#220   "
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_family_name
                     ;

  AUT_family_name =
                   [
                    find($*)
                    if (code = "a") ["$a" $]
					if (code = "c") ["$c" $]
					if (code = "d") ["$d" $]
                    if (code = "h") ["$f" $]
                    if (code = "X") SOUS_ZONE_X
                    if (code = "Y") SOUS_ZONE_Y
                    if (code = "Z") SOUS_ZONE_Z
					if (code = "B") ["$4" $]
                   ].
                  ;

/*
 *  #028J
 *  #420
 */

  AUT028J =
           find_tag(#028J)
           [ZONE_420_AUTORITES]
          ;

  ZONE_420_AUTORITES =
                      "#420   "
                      ["$0" $0]
                      ["$2" $2]
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_family_name
                     ;

/*
 *  #029@
 *  #410
 */

  AUT029at =
            find_tag(#029@)
            [ZONE_410_AUTORITES]
           ;

  ZONE_410_AUTORITES =
                      "#410 "
                      AUT_indicator3
                      ["$0" $0]
                      ["$2" $2]
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_corporate
                     ;
/*
 *  #029A
 *  #210
 */

  AUT029A =
           find_tag(#029A)
           [ZONE_210_AUTORITES]
          ;

  ZONE_210_AUTORITES =
                      "#210 "
                      AUT_indicator3
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_corporate
                     ;

  AUT_corporate =
                 [
                  find($*)
                  if (code = "a") ["$a" SCAN_AT]
                  if (code = "b") ["$b" $]
                  if (code = "c") ["$c" $]
                  if (code = "j") ["$d" $]
                  if (code = "k") ["$e" $]
                  if (code = "h") ["$f" $]
                  if (code = "m") ["$g" $]
                  if (code = "n") ["$h" $]
                  if (code = "X") SOUS_ZONE_X
                  if (code = "Y") SOUS_ZONE_Y
                  if (code = "Z") SOUS_ZONE_Z
				  if (code = "B") ["$4" $]
                 ].
                ;
/*
 *  #036A
 *  #240
 */

  AUT036A =
           find_tag(#036A)
           [ZONE_240_AUTORITES]
          ;

  ZONE_240_AUTORITES =
                      "#240   "
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_nametitle
                     ;

  AUT_nametitle =
                 [
                  find($*)
                  if (code = "a") ["$t" SCAN_AT]
                  if (code = "c") ["$a" $]
                  if (code = "X") SOUS_ZONE_X
                  if (code = "Y") SOUS_ZONE_Y
                  if (code = "Z") SOUS_ZONE_Z
                 ].
                ;

/*
 *  #036B
 *  #440
 */

  AUT036B =
           find_tag(#036B)
           [ZONE_440_AUTORITES]
          ;

  ZONE_440_AUTORITES =
                      "#440   "
                      ["$0" $0]
                      ["$2" $2]
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_nametitle
                     ;

/*
 *  #036C
 *  #540
 */

  AUT036C =
           find_tag(#036C)
           [ZONE_540_AUTORITES]
          ;

  ZONE_540_AUTORITES =
                      "#540   "
					  ["$Q" $7]
                      ["$0" $0]
                      ["$2" $2]
                      ["$3" $9]
                      reset
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$p" $A]
                      AUT_nametitle
                     ;

/*
 *  #036D
 *  #740
 */

  AUT036D =
           find_tag(#036D)
           [ZONE_740_AUTORITES]
          ;

  ZONE_740_AUTORITES =
                      "#740   "
                      ["$2" $2]
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_nametitle
                     ;
					 
  /*FRBR
  #241
  #036E
  */
					 
  AUT036E =
  find_tag(#036E)
  [ZONE_241_AUTORITES]
  ;
  
  ZONE_241_AUTORITES =
		"#241 "
		AUT_indicator3
		MULTI_ECRITURE_AUTORITES
		reset
		["$8" $3]
		if set($a) ["$t" SCAN_AT]
		[
            find($*)
            if (code = "i") ["$c" $]
            if (code = "b") ["$h" $]
            if (code = "h") ["$i" $]
            if (code = "p") ["$k" $]
            if (code = "m") ["$r" $]
            if (code = "n") ["$s" $]
			if (code = "o") ["$u" $]
       ].
	   ;
						 
  /*FRBR
  #441
  #036F
  */
  
  AUT036F =
  find_tag(#036F)
  [ZONE_441_AUTORITES]
  ;
  
  ZONE_441_AUTORITES =
	"#441 "
	AUT_indicator3
	MULTI_ECRITURE_AUTORITES
		reset
		["$8" $3]
		if set($a) ["$t" SCAN_AT]
		[
            find($*)
            if (code = "i") ["$c" $]
            if (code = "b") ["$h" $]
            if (code = "h") ["$i" $]
            if (code = "p") ["$k" $]
            if (code = "m") ["$r" $]
            if (code = "n") ["$s" $]
			if (code = "o") ["$u" $]
       ].
	   ;
	   
						 
  /*FRBR
  #604
  #036P
  */
	   
 AUT036P =
		if find_tag(#036P)
			[
			"#604 "
			AUT_indicator3
			MULTI_ECRITURE_AUTORITES
			reset
			
			
            [ if set($c) ["$a" $]]
            [ if set($a) ["$t" SCAN_AT]]
            [
             find($*)
             if (code = "X") SOUS_ZONE_X
             if (code = "Y") SOUS_ZONE_Y
             if (code = "Z") SOUS_ZONE_Z
             if (code = "2") ["$2" $]
					
             if (code = "9") ["$3" $]
            ].
			]
			else fatal
			;
			

/*
 * #037C
 * #305
 */

  AUT037C =
           if find_tag(#037C)
              [
               "#305 "
               AUT_indicator1
               "$7ba0yba0y"
               ["$a" $a].
              ]
           else fatal
          ;

/*
 * #037D
 * #310
 */

  AUT037D =
           if find_tag(#037D)
              [
               "#310 "
               AUT_indicator1
               "$7ba0yba0y"
               ["$a" $a].
               ["$b" $b].
              ]
           else fatal
          ;

/*
 * #037E
 * #320
 */

  AUT037E =
           if find_tag(#037E) ["#320   "  "$7ba0yba0y" ["$a" $a].]
           else               fatal
          ;

/*
 * #037F
 * #340
 */

  AUT037F = 
           if find_tag(#037F) ["#340   "  "$7ba0yba0y" ["$a" $a]] 
           else               fatal
          ;

/*
 * #037G
 * #356
 */

  AUT037G =
           if find_tag(#037G) ["#356   "  "$7ba0yba0y" ["$a" $a]] 
           else               fatal
          ;

/*
 *  #038A
 *  #500
 */

  AUT038A =
           find_tag(#038A)
           [ZONE_500_AUTORITES]
          ;

 ZONE_500_AUTORITES =
                      "#500 "
                      AUT_indicator2
					  ["$Q" $7]
                      ["$0" $0]
                      ["$2" $2]
                      ["$3" $9]
                      reset
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$p" $A]
                      AUT_personal_name

                     ;
					 
	/*FRBR
	#501
	#038B
	*/
					 
	AUT038B =


           find_tag(#038B)
           [ZONE_501_AUTORITES]
          ;

ZONE_501_AUTORITES =
                      "#501 "
                      AUT_indicator3
					  ["$Q" $7]
                      ["$0" $0]
                      ["$2" $2]
                      ["$3" $9]
                      reset
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$p" $A]
                      AUT_personal_name

                     ;

/*
 *  #038C
 *  #510
 */

  AUT038C =
           find_tag(#038C)
           [ZONE_510_AUTORITES]
          ;

  ZONE_510_AUTORITES =
                      "#510 "
                      AUT_indicator3
					  ["$Q" $7]
                      ["$0" $0]
                      ["$2" $2]
                      ["$3" $9]
                      reset
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$p" $A]
                      AUT_corporate
                     ;
					 
  /*FRBR
  #511
  #038D
  */
  
  AUT038D =
           find_tag(#038D)
           [ZONE_511_AUTORITES]
          ;

  ZONE_511_AUTORITES =
                      "#511 "
                      AUT_indicator3
					  ["$Q" $7]
                      ["$0" $0]
                      ["$2" $2]
                      ["$3" $9]
                      reset
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$p" $A]
                      AUT_corporate
                     ;

/*
 *  #038E
 *  #550
 */

  AUT038E =
           if find_tag(#038E)
              [
               "#550   "
			   ["$Q" $7]
               ["$0" $0]
               ["$2" $2]
               ["$3" $9]
               reset
               ["$5" Dollar5($6)]
               reset
               "$7ba0yba0"
               [
                if find($4) [$(2)]
                else        ["y"]
               ]
               reset
               [make_8]
               reset
               ["$p" $A]
               AUT_subject
              ]
           else fatal
          ;
		  
   AUT038H =
           if find_tag(#038H)
              [
               "#580   "
               ["$0" $0]
               ["$2" $2]
               ["$3" $9]
               reset
               ["$5" Dollar5($6)]
               reset
               "$7ba0yba0"
               [
                if find($4) [$(2)]
                else        ["y"]
               ]
               reset
               [make_8]
               reset
               ["$p" $A]
               AUT_subject
              ]
           else fatal
          ;
/*
 *  #038Q
 *  #515
 */

  AUT038Q =
           find_tag(#038Q)
           [ZONE_515_AUTORITES]
          ;

  ZONE_515_AUTORITES =
                      "#515   "
					  ["$Q" $7]
                      ["$0" $0]
                      ["$2" $2]
                      ["$3" $9]
                      reset
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$p" $A]
                      AUT_territory
                     ;
					 
  /*FRBR
  #521
  #038R
  */

  AUT038R =
           find_tag(#038R)
           [ZONE_521_AUTORITES]
          ;

  ZONE_521_AUTORITES =
                      "#521 "
					  AUT_indicator3
					  ["$Q" $7]
                      ["$0" $0]
                      ["$2" $2]
                      ["$3" $9]
                      reset
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$p" $A]
                      AUT_family_name
                     ;
					 
					 
/*
 *  #038M
 *  #516
 */

  AUT038M = 
           find_tag(#038M) 
           [ZONE_516_AUTORITES]
          ;

  ZONE_516_AUTORITES =
                      "#516   "
					  ["$Q" $7]
                      ["$0" $0]
                      ["$2" $2]
                      ["$3" $9]
                      reset
                      ["$5" Dollar5($6)]
                      [
                       reset
                       MULTI_ECRITURE_AUTORITES
                       reset
                       [
                        if find($4) [$(2)]
                        else        ["y"]
                       ]
                      ]
                      reset
                      [
                       find($*)
                       if      (code = "A") ["$p" $]
                       else if (code = "a") ["$a" $]
                       else if (code = "h") ["$f" $]
                       else if (code = "c") ["$c" $]
                       else if (code = "X") SOUS_ZONE_X
                       else if (code = "Y") SOUS_ZONE_Y
                       else if (code = "Z") SOUS_ZONE_Z
                      ].
                     ;

/*
 *  #038N
 *  #520
 */

  AUT038N =
           find_tag(#038N)
           [ZONE_520_AUTORITES]
          ;

  ZONE_520_AUTORITES =
                      "#520   "
					  ["$Q" $7]
                      ["$0" $0]
                      ["$2" $2]
                      ["$3" $9]
                      reset
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$p" $A]
                      AUT_family_name
                     ;

/*
 *  #038O
 *  #530
 */

  AUT038O =
           find_tag(#038O)
           [ZONE_530_AUTORITES]
          ;

  ZONE_530_AUTORITES =
                      "#530   "
					  ["$Q" $7]
                      ["$0" $0]
                      ["$2" $2]
                      ["$3" $9]
                      reset
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$p" $A]
                      if set($a) ["$a" SCAN_AT]
                      AUT_uniform
                     ;

/*
 *  #039I
 *  #700
 */

  AUT039I =
           find_tag(#039I)
           [ZONE_700_AUTORITES]
          ;

  ZONE_700_AUTORITES =
                      "#700 "
                      AUT_indicator2
                      ["$2" $2]
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_personal_name
                     ;

/*
 *  #039J
 *  #710
 */

  AUT039J =
           find_tag(#039J)
           [ZONE_710_AUTORITES]
          ;

  ZONE_710_AUTORITES =
                      "#710 "
                      AUT_indicator3
                      ["$2" $2]
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_corporate
                     ;

/*
 *  #039K
 *  #715
 */

  AUT039K =
           find_tag(#039K)
           [ZONE_715_AUTORITES]
          ;

  ZONE_715_AUTORITES =
                      "#715   "
                      ["$2" $2]
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_territory
                     ;

/*
 *  #039L
 *  #716
 */

  AUT039L =
           find_tag(#039L)
           [ZONE_716_AUTORITES]
          ;

  ZONE_716_AUTORITES =
                      "#716   "
                      ["$2" $2]
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_marque
                     ;

/*
 *  #039M
 *  #720
 */

  AUT039M =
           find_tag(#039M)
           [ZONE_720_AUTORITES]
          ;

  ZONE_720_AUTORITES =
                      "#720   "
                      ["$2" $2]
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_family_name
                     ;

/*
 *  #039N
 *  #730
 */

  AUT039N =
           find_tag(#039N)
           [ZONE_730_AUTORITES]
          ;

  ZONE_730_AUTORITES =
                      "#730   "
                      ["$2" $2]
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      if set($a) ["$a" SCAN_AT]
                      AUT_uniform
                     ;


/*
 *  #039O
 *  #750
 */

  AUT039O =
           if find_tag(#039O)
              [
               "#750   "
               ["$2" $2]
               ["$5" Dollar5($6)]
               reset
               "$7ba0yba0"
               [
                if find($4) [$(2)]
                else        ["y"]
               ]
               reset
               [make_8]
               ["$9" $4(1)]
               AUT_subject
              ]
           else fatal
          ;
		 
  AUT039Q =
		if find_tag(#039Q)
              [
               "#719   "
               ["$a" $a]
			   ["$2" $2]
              ]
           else fatal
          ; 
		  
 AUT039R =
           if find_tag(#039R)
              [
               "#780 "
			   AUT_indicator3
               ["$2" $2]
               ["$5" Dollar5($6)]
               reset
               "$7ba0yba0"
               [
                if find($4) [$(2)]
                else        ["y"]
               ]
               reset
               [make_8]
               ["$9" $4(1)]
               AUT_subject
              ]
           else fatal
          ;
		  
	/*FRBR
	#600
	#040@
	*/
		 
  AUT040at =
      if find_tag(#040@)
			[
			"#600 "
			AUT_indicator3
			["$1" $6]
			["$8" $3]
			MULTI_ECRITURE_AUTORITES
			reset
			
			[
                  find($*)
				  if (code = "a") [SOUS_ZONE_a]
				  if (code = "d") ["$b" $]
				  if (code = "g") ["$g" $]
				  if (code = "l") ["$d" $]
				  if (code = "k") ["$D" $]
				  if (code = "f") ["$c" $]
				  if (code = "h") ["$f" $]
				  if (code = "f") ["$c" $]
                  if (code = "X") SOUS_ZONE_X
                  if (code = "Y") SOUS_ZONE_Y
                  if (code = "Z") SOUS_ZONE_Z
				  if (code = "9") ["$3" $]
				  if (code = "2") ["$2" $]
            ].
			]
			else fatal
			;
	/*FRBR
	#602
	#040A
	*/			
  AUT040A =
      if find_tag(#040A)
			[
			"#602 "
			AUT_indicator3
			MULTI_ECRITURE_AUTORITES
			reset
			
			["$8" $3]
			reset
			[
            find($*)
				if (code = "a") [SOUS_ZONE_a]
                if (code = "h") ["$f" $]
                if (code = "X") SOUS_ZONE_X
                if (code = "Y") SOUS_ZONE_Y
                if (code = "Z") SOUS_ZONE_Z
				if (code = "9") ["$3" $]
				if (code = "2") ["$2" $]
			].
			]
			else fatal
			;
			
	/*FRBR
	#601
	#041@
	*/
	
  AUT041at =
      if find_tag(#041@)
			[
			"#601 "
			AUT_indicator3
			["$1" $6]
            MULTI_ECRITURE_AUTORITES
            ["$8" $3]
			reset
            [
             find($*)
             if (code = "a") [SOUS_ZONE_a]
             if (code = "m") ["$g" $]
             if (code = "j") ["$d" $]
             if (code = "n") ["$h" $]
			 if (code = "o") ["$p" $]
             if (code = "k") ["$e" $]
			 if (code = "c") ["$c" $]
			 if (code = "b") ["$b" $]
             if (code = "h") ["$f" $]
             if (code = "X") SOUS_ZONE_X
             if (code = "Y") SOUS_ZONE_Y
             if (code = "Z") SOUS_ZONE_Z
			 if (code = "9") ["$3" $]
             if (code = "2") ["$2" $]
			 if (code = "B") ["$4" $]
			 if (code = "J") ["$J" $]
           ].

			]
			else fatal
			;
	/*FRBR
	#605
	#042C
	*/
	
  AUT042C = 
		if find_tag(#042C)
            "#605 "
            AUT_indicator3
			["$1" $6]
            MULTI_ECRITURE_AUTORITES
            ["$8" $3]

            
            [
             find($*)
			 if (code = "a") ["$a" SCAN_AT]
             if (code = "b") ["$h" $]
             if (code = "h") ["$i" $]
             if (code = "g") ["$k" $]
             if (code = "i") ["$l" $]
             if (code = "r") ["$m" $]
             if (code = "p") ["$n" $]
             if (code = "j") ["$q" $]
             if (code = "X") SOUS_ZONE_X
             if (code = "Y") SOUS_ZONE_Y
             if (code = "Z") SOUS_ZONE_Z
             if (code = "9") ["$3" $]
             if (code = "2") ["$2" $]
					
            ].
           ;

/*
 *  #044A
 *  #250
 */

  AUT044A =
           if find_tag(#044A)
              [
               "#250   "
               "$7ba0yba0"
               [
                if find($4) [$(2)]
                else        ["y"]
               ]
               reset
               [make_8]
               ["$9" $4(1)]
               AUT_subject
              ]
           else fatal
          ;

  make_8 =
          if find($3)
		  ["$8" $]
				/* [
				if ($(4) != "\l") ["$8fre" $ ]
				else              ["$8" $]
				]*/
         ;

  AUT_subject =
               [
                find($*)
                if (code = "a") ["$a" SCAN_AT]
                if (code = "X") SOUS_ZONE_X
                if (code = "Y") SOUS_ZONE_Y
                if (code = "Z") SOUS_ZONE_Z
               ].
              ;

/*
 *  #044B
 *  #450
 */

  AUT044B =
           if find_tag(#044B)
              [
               "#450   "
               ["$0" $0]
               ["$2" $2]
               ["$5" Dollar5($6)]
               reset
               "$7ba0yba0"
               [
                if find($4) [$(2)]
                else        ["y"]
               ]
               reset
               [make_8]
               ["$9" $4(1)]
               AUT_subject
              ]
           else fatal
          ;

/*
 *  #044I
 *  #215
 */

  AUT044I =
           find_tag(#044I)
           [ZONE_215_AUTORITES]
          ;

  ZONE_215_AUTORITES =
                      "#215   "
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_territory
                     ;

  AUT_territory =
                 [
                  find($*)
                  if (code = "a") ["$a" SCAN_AT]
                  if (code = "X") SOUS_ZONE_X
                  if (code = "Y") SOUS_ZONE_Y
                  if (code = "Z") SOUS_ZONE_Z
                 ].
                ;

/*
 *  #044J
 *  #415
 */

  AUT044J =
           find_tag(#044J)
           [ZONE_415_AUTORITES]
          ;

  ZONE_415_AUTORITES =
                      "#415   "
                      ["$0" $0]
                      ["$2" $2]
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else        ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_territory
                     ;

/*
 *  #044K
 *  #216
 */

  AUT044K =
           find_tag(#044K)
           [ZONE_216_AUTORITES]
          ;

  ZONE_216_AUTORITES =
                      "#216   "
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_marque
                     ;

  AUT_marque =
              [
               find($*)
               if (code = "a") ["$a" $]
               if (code = "h") ["$f" $]
               if (code = "c") ["$c" $]
               if (code = "X") SOUS_ZONE_X
               if (code = "Y") SOUS_ZONE_Y
               if (code = "Z") SOUS_ZONE_Z
              ].
             ;

/*
 *  #044L
 *  #416
 */

  AUT044L =
           find_tag(#044L)
           [ZONE_416_AUTORITES]
          ;

  ZONE_416_AUTORITES =
                      "#416   "
                      ["$0" $0]
                      ["$2" $2]
                      ["$5" Dollar5($6)]
                      reset
                      MULTI_ECRITURE_AUTORITES
                      reset
                      [
                       if find($4) [$(2)]
                       else ["y"]
                      ]
                      reset
                      ["$8" $3]
                      ["$9" $4(1)]
                      AUT_marque
                     ;
					 
AUT044O =
           if find_tag(#044O)
              [
               "#280 "
			   AUT_indicator3
               "$7ba0yba0"
               [
                if find($4) [$(2)]
                else        ["y"]
               ]
               reset
               [make_8]
               ["$9" $4(1)]
               AUT_subject
              ]
           else fatal
          ;
		  
 AUT044P =
           if find_tag(#044P)
              [
               "#480 "
			   AUT_indicator3
               ["$0" $0]
               ["$2" $2]
               ["$5" Dollar5($6)]
               reset
               "$7ba0yba0"
               [
                if find($4) [$(2)]
                else        ["y"]
               ]
               reset
               [make_8]
               ["$9" $4(1)]
               AUT_subject
              ]
           else fatal
          ;
		  
  /*FRBR
  #606
  #044Q
  */
  
  AUT044Q =
		if find_tag(#044Q)
			["#606 "
			AUT_indicator3
			["$1" $6]
            ["$8" $3]
            /*[if set($a) ["$a" SCAN_AT]]*/
			[
             find($*)
			 if (code = "a") ["$a" SCAN_AT]
             if (code = "X") SOUS_ZONE_X
             if (code = "Y") SOUS_ZONE_Y
             if (code = "Z") SOUS_ZONE_Z
             if (code = "9") ["$3" $]
             if (code = "2") ["$2" $]
            ].
			]
		else fatal
		;
  /*FRBR
   #607
   #044R
   */
   
  AUT044R =
		if find_tag(#044R)
			["#607 "
			AUT_indicator3
			["$1" $6]
            MULTI_ECRITURE_AUTORITES
            ["$8" $3]
            /*[if set($a) ["$a" SCAN_AT]]*/
			[
             find($*)
			 if (code = "a") ["$a" SCAN_AT]
             if (code = "X") SOUS_ZONE_X
             if (code = "Y") SOUS_ZONE_Y
             if (code = "Z") SOUS_ZONE_Z
             if (code = "9") ["$3" $]
             if (code = "2") ["$2" $]
            ].
			]
		else fatal
		;
  /*FRBR
   #608
   #044T
   */
		
  AUT044T =
		if find_tag(#044T)
			["#608 "
			AUT_indicator3
			["$1" $6]
            MULTI_ECRITURE_AUTORITES
            ["$8" $3]
           /* [if set($a) ["$a" SCAN_AT]]*/
			[
             find($*)
			 if (code = "a") ["$a" SCAN_AT]
             if (code = "X") SOUS_ZONE_X
             if (code = "Y") SOUS_ZONE_Y
             if (code = "Z") SOUS_ZONE_Z
             if (code = "9") ["$3" $]
             if (code = "2") ["$2" $]
            ].
			]
		else fatal
		;

	/*FRBR
	#610
	#044U
	*/
		
  AUT044U =
	if find_tag(#044U)
         [
          "#610 "
		  AUT_indicator3
		  [
             find($*)
             if (code = "a") [SOUS_ZONE_a]
			 if (code = "2") ["$2" $]
		  ].
         ]
        ;

/*
 *  #045E
 *  #676
 */

  AUT045E =
           if find_tag(#045E)
              [
               "#676   "
               ["$a" $a]
               ["$v" $v]
              ]
           else fatal
          ;

/*
 *  #045G
 *  #686
 */

  AUT045G =
           if find_tag(#045G)
              [
               "#686   "
               ["$a" $a]
               ["$b" $b]
               ["$c" $c]
               ["$2" $2]
              ]
           else fatal
          ;

/*
 *   #047A
 *   #300
 */

  AUT047A =
           if find_tag(#047A)
              [
               "#300 "
               AUT_indicator1
               "$7ba0yba0y"
               ["$a" $a]
               ["$b" $b]
              ]
           else fatal
          ;

/*
 *   #047G
 *   #330
 */

  AUT047G =
           if find_tag(#047G)
              [
               "#330 "
               AUT_indicator1
               "$7ba0yba0y"
               ["$a" $a]
               ["$b" $b]
              ]
           else fatal
          ;

/*
 *   #047M
 *   #810
 */

  AUT047M =
            if find_tag(#047M)  
                  [  "#810   " 
                     MULTI_ECRITURE_810
                     ["$a" $a]["$b" $b]
                  ]
            else    fatal
          ;

MULTI_ECRITURE_810 =
                            if set($U)
                               [
                                if      ($ = "fa") [reset ["$6a" $T] "$7ba0y" $U "1y"]
                                else if ($ = "ha") [reset ["$6a" $T] "$7ba0y" $U "1y"]
                                else if ($ = "ba") [reset ["$6a" $T] "$7ba0y" $U "0a"]
                                else               [reset ["$6a" $T] "$7ba0y" $U "0y"]
                               ]
                                    ;

/*
 *   #047N
 *   #815
 */

  AUT047N =
           if find_tag(#047N) ["#815   " ["$a" $a]]
           else               fatal
          ;

/*
 *   #047O
 *   #820
 */

  AUT047O =
           if find_tag(#047O) ["#820   " ["$a" $a]]
           else               fatal
          ;

/*
 *   #047P
 *   #822
 */

  AUT047P =
           if find_tag(#047P) 
		   [
		   "#822   " 
		   ["$a" $a]
		   ["$i" $i]
		   ["$l" $l]
		   ["$2" $2]
		   ["$u" $u]
		   ["$d" $d]
		   ["$z" $z]
		   ]
           else fatal
          ;

/*
 *   #047Q
 *   #825
 */

  AUT047Q =
           if find_tag(#047Q) ["#825   " ["$a" $a]]
           else               fatal
          ;

/*
 *   #047R
 *   #830
 */

  AUT047R =
           if find_tag(#047R) ["#830   " ["$a" $a]]
           else               fatal
          ;

/*
 *   #047S
 *   #835
 */

  AUT047S =
           if find_tag(#047S)
              [
               "#835   "
               ["$a" $a]
               ["$b" $b]
               ["$d" $d]
               ["$3" $c]
              ]
           else fatal
          ;

/*
 *   #047T
 *   #836
 */

  AUT047T =
           if find_tag(#047T)
              [
               "#836   "
               ["$b" $b]
               ["$d" $d]
               ["$c" $c]
              ]
           else fatal
          ;
		  
 AUT047W =
           if find_tag(#047W)
              [
               "#898   "
               ["$a" $a]
			   ["$d" $d]
              ]
           else fatal
          ;

  AUT047Y =
           if find_tag(#047Y)
              [
               "#899   "
               ["$a" $a]
              ]
           else fatal
          ;
		  
/*
 *  #047Z
 *  #801
 */

  AUT047Z = 
           if find_tag(#047Z) 
              [
               "#801  "
               [$S(2)]
               ["$a" $a]
               ["$b" $b]
               ["$c" $c] 
               ["$g" $g]
               ["$2" $2]
              ]
           else fatal
          ;

  /*AUT_MAKE_801 =
                if set(#002@$0)
                   [
                    if ($(2) = "l")
                       [
                        "#801  1$aFR$bINSERM" ["$c" make_year]
                        ["#801  0$aUS$bNLM"    "$c" make_year]
                       ]
                    else
                       ["#801  3$aFR$bABES"   ["$c" make_year]]
                   ]
               ;*/
			   
	  AUT_MAKE_801 =
                if set(#002@$0)
                [
                    if ($(2) = "l")
                       [
                        "#801  1$aFR$bINSERM" ["$c" make_year]
                        ["#801  0$aUS$bNLM"    "$c" make_year]
                       ]
                    else
					[
						if set_tag(#003D)
						fatal
						else
						 [
						  "#801  3$aFR$bAbes$c"
						  TTL_MAKE_DATE_AUT801
						  "$gAFNOR"
						  success
						 ]
					]
                ]
               ;

  make_year =
            if set(#001B$0)
               [
                if (AUT_year($(last-1)) = "Y") "19"
                else                           "20"
                $(last-1 for 2)
                $(last-4 for 2)
                $(last-7 for 2)
               ]
            ;
  /*AUT_MAKE_900 =
       [  find_tag(#028A)
          "#900   "
          ["$6" $T ] [ "$7" $U ]
          "$a"
          reset
          MAKE_AUT_900920
       ].
               ;*/
			   
	AUT_MAKE_900 =
       [  find_tag(#028A)
			[
			if find($U)
			[
			if ($ = "ba")
			  [
			  reset
			  "#900   "
			  ["$6" $T ] [ "$7" $U ]
			  "$a"
			  reset
			  MAKE_AUT_900920
			  ]
			]
			
		else 
			[
			  "#900   "
			  "$a"
			  reset
			  MAKE_AUT_900920
		    ]
			]
       ].
	   reset_tag
	   [
	   find_tag(#028A)
		[
		find($U)
			[
			if ($ != "ba")
			  [
			  "#900   "
			  reset
			  ["$6" $T ] [ "$7" $U ]
			  "$a"
			  reset
			  MAKE_AUT_900920
			  ]
			]
		]
	   ].
		;

  AUT_MAKE_901 =
          reset_tag 
          [ find_tag(#028@)
            "#901   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset         
            MAKE_AUT_900920
          ].
               ;

  AUT_MAKE_902 =
          reset_tag 
          [ find_tag(#039I)
            "#902   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset
            MAKE_AUT_900920
          ].
               ;

  AUT_MAKE_910 =
       [  find_tag(#029A)
          "#910   "
          ["$6" $T ] [ "$7" $U ]
          "$a"
          reset
          MAKE_AUT_910
       ].
               ;

  AUT_MAKE_911 =
          reset_tag 
          [ find_tag(#029@)
            "#911   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset
            MAKE_AUT_910
          ].
               ;

  AUT_MAKE_912 =
          reset_tag 
          [ find_tag(#039J)
            "#912   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset
            MAKE_AUT_910
          ].
               ;

  AUT_MAKE_915 =
       [  find_tag(#044I)
          "#915   "
          ["$6" $T ] [ "$7" $U ]
          "$a"
          reset
          MAKE_AUT_915950
       ].
               ;

  AUT_MAKE_916 =
          reset_tag 
          [ find_tag(#044J)
            "#916   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset
            MAKE_AUT_915950
          ].
               ;

  AUT_MAKE_917 =
          reset_tag 
          [ find_tag(#039K)
            "#917   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset
            MAKE_AUT_915950
          ].
               ;

  AUT_MAKE_960 =
       [  find_tag(#044K)
          "#960   "
          ["$6" $T ] [ "$7" $U ]
          "$a"
          reset
          MAKE_AUT_960
       ].
               ;

  AUT_MAKE_961 =
          reset_tag 
          [ find_tag(#044L)
            "#961   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset
            MAKE_AUT_960
          ].

               ;

  AUT_MAKE_962 =
          reset_tag 
          [ find_tag(#039L)
            "#962   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset
            MAKE_AUT_960
          ].
               ;

  AUT_MAKE_920 =
       [  find_tag(#028I)
          "#920   "
          ["$6" $T ] [ "$7" $U ]
          "$a"
          reset
          [
			$a
			[" (" $c [" ; " $c]. [" ; " $d]. [" ; " $h] ")"]
		  ]
       ].
               ;

  AUT_MAKE_921 =
          reset_tag 
          [ find_tag(#028J)
            "#921   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset
            [
			$a
			[" (" $c [" ; " $c]. [" ; " $d]. [" ; " $h] ")"]
			]
          ].
               ;

  AUT_MAKE_922 =
          reset_tag 
          [ find_tag(#039M)
            "#922   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset
            [
			$a
			[" (" $c [" ; " $c]. [" ; " $d]. [" ; " $h] ")"]
			]
          ].
               ;

  AUT_MAKE_930 =
       [  find_tag(#022A)
          "#930   "
          ["$6" $T ] [ "$7" $U ]
          "$a"
          reset
          MAKE_AUT_930
       ].
               ;

  AUT_MAKE_931 =
          reset_tag 
          [ find_tag(#022B)
            "#931   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset
            MAKE_AUT_930
          ].
               ;

  AUT_MAKE_932 =
          reset_tag 
          [ find_tag(#039N)
            "#932   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset
            MAKE_AUT_930
          ].
               ;

  AUT_MAKE_940 =
       [  find_tag(#036A)
          "#940   "
          ["$6" $T ] [ "$7" $U ]
          "$a"
          reset
          MAKE_AUT_940
       ].
               ;

  AUT_MAKE_941 =
          reset_tag 
          [ find_tag(#036B)
            "#941   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset
            MAKE_AUT_940
          ].
               ;

  AUT_MAKE_942 =
          reset_tag 
          [ find_tag(#036D)
            "#942   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset
            MAKE_AUT_940
          ].
               ;

  AUT_MAKE_950 =
       [ find_tag(#044A)
          "#950   "
          ["$6" $T ] [ "$7" $U ]
          "$a"
          reset
          MAKE_AUT_915950
       ].
               ;

  AUT_MAKE_951 =
          reset_tag 
          [ find_tag(#044B)
            "#951   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset
            MAKE_AUT_915950
          ].
               ;

  AUT_MAKE_952 =
          reset_tag 
          [ find_tag(#039O)
            "#952   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset
            MAKE_AUT_915950
          ].
               ;

AUT_MAKE_980 =
       [ find_tag(#044O)
          "#980   "
          ["$6" $T ] [ "$7" $U ]
          "$a"
          reset
          MAKE_AUT_915950
       ].
               ;

  AUT_MAKE_981 =
          reset_tag 
          [ find_tag(#044P)
            "#981   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset
            MAKE_AUT_915950
          ].
               ;
			   
  AUT_MAKE_982 =
          reset_tag 
          [ find_tag(#039R)
            "#982   "
            ["$6" $T ] [ "$7" $U ]
            "$a"
            reset
            MAKE_AUT_915950
          ].
               ;

  MAKE_AUT_900920 =
         AUT900
         [XYZ].
                  ;

  AUT900 =
         $a
         [ " "$l ]
         reset
         [ ", "$d ]
         [" ("$g")"]
         [ 
          reset 
          if ($S(2)="0") AUT9001
          else           AUT9002
         ]
         ;

  AUT9001 =   
	 [" ("$f [ " ; "$f ]. reset [ " ; "$h ] ")"]
         or
         [ " ("$h ")"]
          ;

  AUT9002 = 
         [" ("$h reset [ " ; "$f ]. ")"]
         or
         [" ("$f [ " ; "$f ].")"]
          ;

  XYZ =
     stop("XYZ")
         [ " -- " $X ]
         [ " -- " $Y ]
         [ " -- " $Z ]
      ;

  MAKE_AUT_910 =
        SEQ29X
        [XYZ].
               ;

  SEQ29X = [SUB29A][SUB29B]. ;

  SUB29A = 
        stop ("bmjhkc")
             find($a) skip_at
             [", " $m]
             [" (" $n [ " ; " $n ]. ")"]
             [" (" [$j " ; " ]
             [$h " ; "] [$k] erase ")"]
             [" (" $c [" ; " $c]. ")"]
         ;

  SUB29B = 
        stop ("bmjhkc")
             [". "$b]
             [", " $m]
             [" (" $n [ " ; " $n ]. ")"]
             [" (" [ $j " ; "][$h " ; "][$k] erase ")" ]
             [" (" $c [ " ; " $c]. ")"]
         ;

  skip_at     = [[$(1 to "@") [$(* to end)]] or $("@" to end) or $ ] ; 

  MAKE_AUT_915950 =
          find($a) skip_at
          [XYZ].
               ;

  MAKE_AUT_960 =
        find($a) skip_at
        [" (" $c [ " ; " $c]. ")"]
        [" (" $h ")"]
        [XYZ].
               ;

  MAKE_AUT_930 =
        find($a) skip_at
        [ if set($h)
               [   [  find($*)  
                           if (code in "fgirnjbh") [reset [ GRP22A ].]
                      else if (code in "mopcXYZ")  [reset [ GRP22B ].]
                      else                         [reset ". " $h]       
                   ] 
                   or
                   [reset ". " $h]
               ]           
          else [reset [ GRP22A ].]
        ]
        [XYZ].
               ;

  GRP22A = 
        stop("fgirmnopjehcd")
            [" ["$f "]"].
            [". "$g]
            [". "$i]
            [". "$r]
            [", "$m].
            [". "$n].
            [", "$o]
            [" ("$p [ " ; "$p]. ")"]
            [". "$j]
            [". "$b].
            [". " SUPPRIMER_DOUBLE_POINT ].
            [" ; "$c]
        ;

  GRP22B =
        stop("fgirmnopjehcd")
            [" ["$f "]"].
            [". "$g]
            [". "$i]
            [". "$r]
            [", "$m].
            [". "$n].
            [", "$o]
            [" ("$p [ " ; "$p]. ")"]
            [". "$j]
            [". "$b].
            [". "$h].
            [" ; "$c]
        ;

  SUPPRIMER_DOUBLE_POINT =
                        if ($h(end) = ".") $(1 to end-1) /* $h P+ = $i UNM */
                        else $
                         ;

  MAKE_AUT_940 =
       [$c]
       [". " find($a) skip_at ]
       [XYZ].
               ;
/**************************************************************************************
 *                                 Format RCR                                         *
 **************************************************************************************/

  RCR_format =
              reset_tag
              RCR001A         /* Date de creation de la notice                         */
              RCR001B         /* Date de derniere mise a jour                          */
              RCR002at        /* Guide                                                 */
			  [RCR003at]	  /*ppn*/
              [RCR006Z].      /* Numero de la notice                                   */
			  [RCR050A]       /*Organisme de tutelle*/
			  [RCR050B]		  /*Organisme d'affiliation*/
              [RCR050C]       /* Etablissement                    */
			  [RCR050D]		  /*Intitulé officiel cadist */
			  [RCR050E].	  /*Intitulés usuels de l'établissement*/
              [RCR050F]       /*  Type d'établissement                     */
              [RCR050G]       /* Code RCR                                                */
			  [RCR050H].       /*Participation à un réseau documentaire autre que le Sudoc*/
              [RCR050I].      /*  Note sur l'identification de l'établissement                */
              [RCR050J]       /* Adresse principale                               */
              [RCR050K].       /* Autres adresses                                  */
			  [RCR050L]		  /* Téléphones */
			  [RCR050M].		  /*Télécopie*/
			  [RCR050N].      /*Services électroniques*/
              [RCR050O]       /* Adresse PEB                                      */
			  [RCR050P]       /*Autre adresse électronique*/
			  [RCR050Q]		  /*Note sur la localisation*/
			  [RCR050R]		 /*Date de création de l'établissement*/
			  [RCR050S]		 /*Forme précédente du nom de l'établissement*/
			  [RCR050T]	     /*Historique de l'établissement*/
			  [RCR050U].		 /*Organismes associés*/
			  [RCR050V]		 /*Notes sur les organismes liés*/
			  [RCR050W]		 /*Jours et heures d'ouverture*/
			  [RCR050X]		 /*Fermetures annuelles*/
			  [RCR050Y]	     /*Conditions d'accès*/
			  [RCR050Z]		 /* Note sur l'accessibilité de l'établissement*/
			  [RCR051A].		 /*Disciplines traitées*/
			  [RCR051B]		 /*Note sur la description de la collection*/
			  [RCR051C]		/*  Bases de données*/
			  [RCR051D]		/* Renseignements bibliographiques*/
			  [RCR051E]		/* Services de réservation*/
			  [RCR051F]		/*Bibliographies*/
			  [RCR051G]		/*Services de reproduction*/
			  [RCR051H]	    /*Services de PEB*/
			  [RCR051I]		/*Consultation*/
			  [RCR051J]		/*Portage à domicile*/
			  [RCR051K]		/*Autres services*/
			  [RCR051L]		/* Note sur les services*/
			  [RCR051W]     /* PEB international*/
			  [RCR051M].		/* Informations complémentaires*/
			  [RCR051N].	/*	Classification*/
			  [RCR051O].	/*  	Catalogues*/
			  [RCR051P].	/*	Documentation*/
			  [RCR051Q].		/* Publication(s)*/
			  [RCR051R].	/*	Catalogue(s) collectifs*/
			  [RCR051S].		/* Document(s) à consulter*/		
			  [RCR051T].	/*	Système d'information*/
			  [RCR051U].		/*Equipement spécial*/
			  [RCR051V].		/*Observations générales*/ 
			  [RCR051X]		/*coordonnées géographiques*/
			  [RCR051Y]
			  [RCR051Z]
			  [RCR052A]    /* url EOD */
			  reset_tag
			  [RCR_MAKE_970]	/*Intitulé établissement : affichage*/
			  ;
			  
			  
			  

  table RCR_year =
                  "5"     "Y",
                  "6"     "Y",
                  "7"     "Y",
                  "8"     "Y",
                  "9"     "Y",
                  default "N"
                 ;
				 
table code_etablissement = 
                          "10"    "Biblioth\341eque nationale",
                          "21"    "Biblioth\341eque universitaire",
                          "22"    "Biblioth\341eque d'institut ou de d\342epartement universitaire",
                          "23"    "Biblioth. d'enseignement sup\342erieur et de recherche hors universit\342e",
                          "30"    "Autre biblioth\341eque importante non sp\342ecialis\342ee",
                          "40"    "Biblioth\341eque scolaire",
                          "51"    "Biblioth\341eque sp\342ecialis\342ee tous publics sur fonds publics",
                          "52"    "Biblioth. sp\342ecial. \341a acc\341es r\342eserv\342e sur fonds publics",
                          "53"    "Biblioth\341eque sp\342ecialis\342ee tous publics sur fonds priv\342es",
                          "54"    "Biblioth. sp\342ecial. \341a acc\341es r\342eserv\342e sur fonds priv\342es",
                          "61"    "Biblioth\341eque municipale class\342ee",
                          "62"    "Biblioth\341eque municipale non class\342ee",
                          "63"    "Biblioth\341eque d\342epartementale de pr\343et",
                          "64"    "Autre biblioth\341eque de lecture publique sur fonds publics",
                          "65"    "Autre biblioth\341eque de lecture publique sur fonds priv\342es",
                          default *;
						  
table centres_regionaux =
					"01"   "Alsace",
					"03"   "Nouvelle Aquitaine  - Acad\342emie de Bordeaux",
					"06"   "Auvergne",
					"09"   "Bourgogne",
					"12"   "Bretagne",
					"15"   "Centre-Val de Loire",
					"18"   "Champagne-Ardenne",
					"24"   "Franche-Comt\342e",
					"25"   "Biologie animale et v\342eg\342etale",
					"26"   "Sciences humaines, langues et civilisations occidentales",
					"27"   "Sciences juridiques, \342economiques et politiques",
					"28"   "Langues et civilisations orientales",
					"29"   "Sciences de la sant\342e",
					"30"   "Pharmacie",
					"31"   "Sciences exactes et appliqu\342ees 1",
					"32"   "Art et arch\342eologie",
					"33"   "\342Economie et gestion",
					"35"   "Biblioth\341eque nationale de France",
					"36"   "Sciences exactes et appliqu\342ees 2",
					"37"   "Occitanie -Languedoc-Roussillon",
					"40"   "Nouvelle Aquitaine - Acad\342emie de Limoges",
					"43"   "Lorraine",
					"44"   "INIST-CNRS", 
					"46"   "Occitanie - Midi-Pyr\342en\342ees",
					"49"   "Nord-Pas-de-Calais",
					"51"   "Normandie. Acad\342emie de Caen",
					"54"   "Normandie. Acad\342emie de Rouen",
					"57"   "Pays de la Loire",
					"60"   "Picardie",
					"63"   "Nouvelle Aquitaine - Acad\342emie de Poitiers",
					"66"   "PACA - Acad\342emie d'Aix-Marseille - Outre-mer",
					"67"   "PACA - Acad\342emie de Nice",
					"69"   "Rh\343one-Alpes - Acad\342emie de Grenoble",
					"70"   "Rh\343one-Alpes - Acad\342emie de Lyon",
					default *;
					
  table telephone =
					"Oui"  "Par t\342el\342ephone",
					default*;

/*
 * #001A $0
 * #005  $0
 */

  RCR001A =
           if find_tag(#001A)
              [
               [
                "#004 $0"
                if (RCR_year($0(last-1)) = "Y") "19"
                else                            "20"
                $(last-1 for 2)
                $(last-4 for 2)
                $(last-7 for 2)
               ]
			   reset
				 "#006 $0"
				 [
				  [$0(1 to ":")]
				  or
				  "000000000"
				 ]
              ]
           else fatal
          ;
          

/*
 * #001B $0 $t
 * #006  $0
 */

  RCR001B =
           if find_tag(#001B)
		    [
              [
               [
                "#005 $0"
                if (RCR_year($0(last-1)) = "Y") "19"
                else "20"
                $(last-1 for 2)
                $(last-4 for 2)
                $(last-7 for 2)
               ]
              ]
			  reset
				 "#007 $0"
				 [
				    [
					if set_tag(#001B)
                    $0(1 to ":")
					]
					or
					"000000000"
				 ]
		   ]
           else fatal
          ;

/*
 * #002@ Record status and type and encoding level heading
 * #RECORD LABEL
 */

 /*  RCR002at = 
            "#000 $0     n"
            if find_tag(#002@) 
               [
                AUT_mat1($0(1))
                "  "
                AUT_mat2($(2))
                "22     "
                AUT_mat3($(3))
                "  45  "
               ]
            else fatal
            ;*/
  RCR002at =
            if find_tag(#002@) 
			[
				["#000 $0     "]
			    [
				if set(#001E$0) "dx  w22        45  "
				else ["nx  w22        45  "]
				]
			]	
            else               fatal
           ;
		   
/* #003@ ppn
*   #001 record identifier
*/
  /*RCR003at =
            if find_tag(#003@) ["#001 $0"$0]
            else               fatal
           ;*/
		   
 RCR003at =
            if find_tag(#003@) 
			[
			"#001 $0"$0
			reset
            "#003 $0http://www.idref.fr/"$0
			]
            else               fatal
           ;

/*
 * #003B $a $0
 * #001  $0 NORB
 */

  RCR006Z =
           if find_tag(#006Z) ["#035   "  "$0" $0]
           else               fatal
          ;
		  
  RCR050A =
          if find_tag(#050A)
             
			 [
               "#100   "
               ["$a" $a]
			   ["$b" $b].
			   ["$c" $c].
              ]
           else fatal
		   ;
  RCR050B =
           if find_tag(#050B)
              [
			   "#110   "   
			   ["$a" $a]
              ]
           else fatal
          ; 		   
 

/*
 * #050C $a $b
 * #120  $a, b, c, d
 */

  RCR050C =
           if find_tag(#050C)
              [
			   "#120   "   
			   ["$a" $a]
			   ["$b" $b].
			   ["$c" $c].
			   ["$d" $d]
              ]
           else fatal
          ;
		  
/*
 * #050D $a 
 * #121  $a
 */

 RCR050D =
           if find_tag(#050D)
              [
			   "#121   "   
			   ["$a" $a]
              ]
           else fatal
          ; 
		  
/*
 * #050E $a $b
 * #122  $a, b, c, d
 */
 RCR050E =		  
           if find_tag(#050E)
              [
			   "#122   "   
			   ["$a" $a]
              ]
           else fatal
          ; 		  

/*
 * #050F $b
 * #130  $a,
 */

  RCR050F =
           if find_tag(#050F)
              [
			   "#130   "   
			   ["$a" code_etablissement($a)]
              ]
           else fatal
          ; 		  


/*
 * 050G $a
 * #140 $b
 */

  RCR050G =
           if find_tag(#050G)
              [
			   "#140   "   
			   ["$a" $a]
			   ["$z" $z].
              ]
           else fatal
          ; 		  

/*
 * 050H $a
 * #150 $b
 */

  RCR050H =
           if find_tag(#050H)
              [
			   "#150   "   
			   ["$a" $a]
              ]
           else fatal
          ; 		
		  
/*
 * #050I $a
 * #160  $a
 */

  RCR050I =
           if find_tag(#050I)
              [
			   "#160   "   
			   ["$a" $a]
              ]
           else fatal
          ; 		

/*
 * #050J $a
 * #200  $a
 */

  RCR050J =
           if find_tag(#050J)
              [
			   "#200   "   
			   ["$0" $0]
			   ["$a" $a]
			   ["$b" $b]
			   ["$c" $c]
			   ["$d" $d]
			   ["$e" $e]
			   ["$f" $f]
			   ["$g" $g]
			   ["$h" $h]			   
              ]
           else fatal
          ; 		

/*
 * #050K 
 * #201  
 */

  RCR050K =
          if find_tag(#050K)
              [
			   "#201   "   
			   ["$0" $0]
			   ["$a" $a]
			   ["$b" $b]
			   ["$c" $c]
			   ["$d" $d]
			   ["$e" $e]
			   ["$f" $f]
			   ["$g" $g]			   
              ]
           else fatal
          ; 		  

/*
 * #050L
 * #210 
 */
 RCR050L =
          if find_tag(#050L)
              [
			   "#210   "   
			   ["$a" $a]
			   ["$b" $b].
              ]
           else fatal
          ; 		
/*
 * #050M
 * #211
 */		  
 RCR050M =
          if find_tag(#050M)
              [
			   "#211   "   
			   ["$a" $a]
              ]
           else fatal
          ; 		
/*
 * #050N
 * #211
 */		
 RCR050N =
          if find_tag(#050N)
              [
			   "#220   "   
			   ["$a" $a].
			   ["$b" $b]
			   ["$c" $c].
			   ["$d" $d].
              ]
           else fatal
          ; 		 		  


/*
 * 050O 
 * #230 
 */

  RCR050O =
           if find_tag(#050O)
              [
               "#230   "
               ["$a" $a]
               ["$b" $b]
              ]
           else fatal
          ;
		  
/*
 * 050P
 * #240 
 */
   RCR050P =
           if find_tag(#050P)
              [
               "#240   "
               ["$a" $a]
              ]
           else fatal
          ;
		  
/*
 * 050Q
 * #250 
 */
   RCR050Q =
           if find_tag(#050Q)
              [
               "#250   "
               ["$a" $a]
              ]
           else fatal
          ;

/*
 * 050R
 * #300 
 */		  
   RCR050R =
           if find_tag(#050R)
              [
               "#300   "
               ["$a" $a]
              ]
           else fatal
          ;
/*
 * 050S
 * #305 
 */			  
   RCR050S =
           if find_tag(#050S)
              [
               "#305   "
               ["$a" $a]
              ]
           else fatal
          ;
/*
 * 050T
 * #310 
 */
   RCR050T =
           if find_tag(#050T)
              [
               "#310   "
               ["$a" $a]
              ]
           else fatal
          ;
/*
 * 050U
 * #410 
 */
  RCR050U =
          if find_tag(#050U)
              [
			   "#410   "
			   ["$3" $9]			   
			   ["$a" $a]
			   ["$b" $b]
			   ["$c" $c]
			   ["$e" $e " : " reset centres_regionaux($e)]
			   ["$y" $y]			   
              ]
           else fatal
          ; 	
/*
 * 050V
 * #440 
 */ 
   RCR050V =
           if find_tag(#050V)
              [
               "#440   "
               ["$a" $a]
              ]
           else fatal
          ;
		  
/*
 * 050W
 * #500
 */ 
    RCR050W =
           if find_tag(#050W)
              [
               "#500   "
               ["$a" $a].
              ]
           else fatal
          ;

/*
 * 050X
 * #510
 */ 
    RCR050X =
           if find_tag(#050X)
              [
               "#510   "
               ["$a" $a].
              ]
           else fatal
          ;
 /*
 * 050Y
 * #520
 */ 
    RCR050Y =
           if find_tag(#050Y)
              [
               "#520   "
               ["$a" $a].
              ]
           else fatal
          ; 

 /*
 * 050Z
 * #530
 */ 
    RCR050Z =
           if find_tag(#050Z)
              [
               "#530   "
               ["$a" $a].
              ]
           else fatal
          ; 
		  
/*


/*051A $a $b
R610 */

 RCR051A =
          if find_tag(#051A)
              [
               "#610   "
               ["$a" $a]
			   ["$b" $b]
              ]
           else fatal
          ; 		

/*
 * 051B $a
 * #620 $a
 */

  RCR051B =
          if find_tag(#051B)
              [
               "#620   "
               ["$a" $a]
              ]
           else fatal
          ; 		

/*
* Acces a des bases de donnees
 * 051C $a $b $c
 * #800 $a $b $c
 */

 RCR051C =
          if find_tag(#051C)
             
			 [
               "#800   "
               ["$a" $a]
			   ["$b" $b].
			   ["$c" $c].
              ]
           else fatal
		   ;
		 /*   if find_tag(#051C)
		    [
			 "#800   "
			[find ($a)
			 if ($ = "Oui") "$aBase(s) de donn\342ees" 
			 else fatal 
			] 
			[[" : " $b] [" ("$c")"]] 
			[[" - " $b] [" ("$c")"]].
			]
			else fatal
          ; 	*/

/*
*  Renseignements bibliographiques
 * 051D $a $b $c 
 * #810 $a $b $c
 */

  RCR051D =
          if find_tag(#051D)
			 [
			"#800   "
			  ["$a" $a]
			  ["$b" $b]
			  ["$c" $c]
			  ["$d" $d]
			  ["$e" $e]
			]
			else fatal
			; 		
		  
	/*	if find_tag(#051D)
		[
			"#810   $aRenseignements : "
			   [
			    if ($a = "Oui") "Par t\342el\342ephone - "
				else "Pas par t\342el\342ephone - "
			   ]
			   [
			    if ($b = "Oui") "Par t\342el\342ecopie - "
				else success
			   ]
			   [
			    if ($c = "Oui") "Par courrier "
				else "Pas par courrier "
			   ]
			   [
			    if ($d = "Oui") "- Par messagerie \342electronique"
				else success
			   ]
			   ["- " $e]
        ]
        else fatal
        ; 		 
si tous les $ ont la valeur Oui, ne fonctionne pas !! dans les autres cas c'est ok POURQUOI ???*/

/*
* Services de reservation
 * 051E $a $b $c
 * #820 $a $b $c
 */

 RCR051E =
          if find_tag(#051E)
              [
               "#820   "
               ["$a" $a]
			   ["$b" $b].
			   ["$c" $c].
              ]
           else fatal
          ; 
		  
		/*    if find_tag(#051E)
		    [
			 "#820   "
			[
			 if ($a = "Oui") "$aService de r\342eservation de documents" 
			 else success 
			] 
			[" : " $b] [", " $b].
			[" - " $c] [", " $c].
			]
			else fatal
          ; 	*/

/*
* Bibliographies
 * 051F $a $b $c
 * #830 $a $b $c
 */

  RCR051F =
          if find_tag(#051F)
              [
               "#830   "
               ["$a" $a]
			   ["$b" $b]
              ]
           else fatal
          ; 	
		/*    if find_tag(#051F)
		    [
			 "#830   "
			[
			 if ($a = "Oui") "$aElaboration de bibliographies" 
			 else success 
			] 
			[" - " $b] [", " $b].
			]
			else fatal
          ; 			 */ 
		  
/*
 * Services de reproduction
 * 051G 
 * #840
 */

 RCR051G =
           if find_tag(#051G)
              [
               "#840   "
               ["$a" $a]
			   ["$b" $b]
			   ["$c" $c]
			   ["$d" $d]
			   ["$e" $e]
			   ["$f" $f]
			   ["$g" $g].
              ]
           else fatal
          ; 
        /*   if find_tag(#051G)
		[
			"#840   $aServices de reproduction : "
			   [
			    if ($a = "Oui") "Photocopie "
				else success
			   ]
			   [
			    if ($b = "Oui") "Microfilmage "
				else success
			   ]
			   [
			    if ($c = "Oui") "Microfichage "
				else success
			   ]
			   [
			    if ($d = "Oui") "Num\342erisation "
				else success
			   ]
			   ["- " $e]
			   [". " $f]
			   [". " $g].
        ]
        else fatal
        ; 			  */

/*
* Service de PEB
 * 051H 
 * #850
 */

  RCR051H =
          if find_tag(#051H)
              [
               "#850   "
               ["$a" $a]
			   ["$b" $b].
              ]
           else fatal
          ; 		
		 /*   if find_tag(#051H)
		    [
			 "#850   "
			[
			 if ($a = "Oui") "$aService de PEB" 
			 else success 
			] 
			[" - " $b] [", " $b]. 
			]
			else fatal
          ; 			*/ 

/*
* Consultation
 * 051I 
 * #860 
 */

  RCR051I =
         if find_tag(#051I)
              [
               "#860   "
               ["$a" $a]
			   ["$b" $b]
			   ["$c" $c]
              ]
           else fatal
          ; 		
		  
		 /*   if find_tag(#051I)
		    [
			 "#860   "
			[
			 if ($a = "Oui") "$aConsultation sur place "
			 else success 
			] 
			[
			 if ($b = "Oui") "Pr\343et \341a domicile "
			 else success
			]
			["- " $c] [", " $c]. 
			]
			else fatal
          ; 	*/

/*
 * Portage a domicile
 * 051J 
 * #870 
 */

 RCR051J =
           if find_tag(#051J)
              [
               "#870   "
               ["$a" $a]
			   ["$b" $b]
              ]
           else fatal
          ; 
		  
		/*    if find_tag(#051J)
		    [
			 "#870   "
			[
			 if ($a = "Oui") "$aPortage des documents" 
			 else success 
			] 
			[" - " $b] [", " $b]. 
			]
			else fatal
          ; 		*/		  

/*
 * Autres services
 * 051K $a
 * #880 $a
 */

  RCR051K =
           if find_tag(#051K)
              [
               "#880   "
               ["$a" $a]
			   ["$b" $b]
              ]
           else fatal
          ; 	
        /*   if find_tag(#051K)
              [
               "#880   "
               ["$a" $a]
			   [" - " $b]
              ]
           else fatal
          ; */				  


/*
 * 051L $a
 * #890 $a
 */

 RCR051L =
           if find_tag(#051L)
              [
               "#890   "
               ["$a" $a]
              ]
           else fatal
          ; 

		  
/*
* 051W
* #851
*/
		  
  RCR051W =
           if find_tag(#051W)
              [
               "#851   "
               ["$a" $a]
			   ["$b" $b]
              ]
           else fatal
          ; 		  

/*
 * 051M
 * #901
 */

  RCR051M =
           if find_tag(#051M)
              [
               "#701   "
               ["$a" $a]
			   ["$b" $b].
              ]
           else fatal
          ; 		
/*
 * 051N $a
 * #910 $a
 */

 RCR051N =
           if find_tag(#051N)
              [
               "#710   "
               ["$a" $a]
              ]
           else fatal
          ; 		

/*
 * 051O $a
 * #920 $a
 */

  RCR051O =
           if find_tag(#051O)
              [
               "#720   "
               ["$a" $a]
              ]
           else fatal
          ; 		

/*
 * 051P $a
 * #930 $c
 */

  RCR051P =
           if find_tag(#051P)
              [
               "#730   "
               ["$a" $a]
              ]
           else fatal
          ; 	

/*
 * 051Q $a
 * #940 $a
 */

  RCR051Q =
           if find_tag(#051Q)
              [
               "#740   "
               ["$a" $a]
              ]
           else fatal
          ; 

/*
 * 051R $a
 * #950 $a
 */

  RCR051R =
           if find_tag(#051R)
              [
               "#750   "
               ["$a" $a]
              ]
           else fatal
          ; 	
		  
/*
 * 051S $a
 * #960 $a
 */

  RCR051S =
           if find_tag(#051S)
              [
               "#760   "
               ["$a" $a]
              ]
           else fatal
          ; 	
		  

/*
 * 051T $a
 * #970 $a
 */

 RCR051T =
           if find_tag(#051T)
              [
               "#770   "
               ["$a" $a]
              ]
           else fatal
          ; 
		  
/*
 * 051U $a
 * #980 $a
 */

  RCR051U =
           if find_tag(#051U)
              [
               "#780   "
               ["$a" $a]
              ]
           else fatal
          ; 


/*
 * 051V $a
 * #999 $a
 */

  RCR051V =
           if find_tag(#051V)
              [
               "#799   "
               ["$a" $a]
              ]
           else fatal
          ; 
		  
  RCR051X =
           if find_tag(#051X)
              [
               "#202   "
               ["$a" $a]
			   ["$b" $b]
              ]
           else fatal
          ; 
		  
  RCR051Y =
           if find_tag(#051Y)
              [
               "#260   "
               ["$a" $a]
              ]
           else fatal
          ; 
		  
  RCR051Z =
           if find_tag(#051Z)
              [
               "#270   "
               ["$a" $a]
              ]
           else fatal
          ; 
		  
 RCR052A =
           if find_tag(#052A)
              [
               "#280   "
               ["$a" $a]
              ]
           else fatal
          ; 

/* 970 = intitulé établissement : affichage */
		  
  RCR_MAKE_970 =
		 
		 find_tag(#050C)
			"#970   $a" 
			[$a]
			[" ("$c")"]
			reset
			[". "$b].
			; 
?line "abes_cs_misc_tab_HERMES_FCV_pica_weblabelled_UNM.fcv" 113

\\
